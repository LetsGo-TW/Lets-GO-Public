/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "../Farm/farm-export.js":
/*!******************************!*\
  !*** ../Farm/farm-export.js ***!
  \******************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"availableUnits\": () => (/* binding */ availableUnits),\n/* harmony export */   \"divNumber\": () => (/* binding */ divNumber),\n/* harmony export */   \"getModel\": () => (/* binding */ getModel),\n/* harmony export */   \"returnArrVillagesIdfarmModelNull\": () => (/* binding */ returnArrVillagesIdfarmModelNull),\n/* harmony export */   \"schedulesFarm\": () => (/* binding */ schedulesFarm),\n/* harmony export */   \"setModel\": () => (/* binding */ setModel),\n/* harmony export */   \"setModelsFarm\": () => (/* binding */ setModelsFarm),\n/* harmony export */   \"veryfyFarmSchedules\": () => (/* binding */ veryfyFarmSchedules)\n/* harmony export */ });\n/* harmony import */ var _general_init_tw__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../general/init_tw */ \"../general/init_tw.js\");\n/* harmony import */ var _general_util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../general/util */ \"../general/util.js\");\n/* harmony import */ var _LetsGO_requests__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../LetsGO/requests */ \"./requests.js\");\n/* harmony import */ var _LetsGO_schedules__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../LetsGO/schedules */ \"./schedules.js\");\n\r\n\r\n\r\n\r\n\r\n'use strict'\r\n\r\nconst divNumber = (html = document) => html.querySelector(\"#settingsBody\") ? 2 : document.querySelector(\"#divFAPress\") ? 1 : 0\r\n\r\nconst availableUnits = (html = document) => Array.from(html.querySelectorAll('td.unit-item')).map(e=> Number(e.innerText))\r\n\r\nconst getModel = (model, html = document) => \r\nArray.from(html.querySelector(\"#content_value\").querySelectorAll('div.vis')[ divNumber(html) ].querySelectorAll('tr')[model == \"A\" ? 1 : 3].querySelectorAll('td')).filter(e => e.querySelector(\"input\")).map((e) => e.querySelector(\"input\")).map(e => Number(e.value))\r\n\r\nconst setModel = (model, value, html = document) => Array.from(html.querySelector(\"#content_value\").querySelectorAll('div.vis')[ divNumber(html) ].querySelectorAll('tr')[model == \"A\" ? 1 : 3].querySelectorAll('td')).filter(e => e.querySelector(\"input\")).map((e) => e.querySelector(\"input\")).map((e, i) => e.value = value )\r\n\r\nconst returnArrObjVillagesIdArrUnitsPremium = (html = document) => Array.from(html.querySelectorAll(\"#combined_table > tbody > tr.nowrap\")).reduce((arr, e)=>{\r\n    const id = e.querySelector(\"span.quickedit-vn\").dataset.id\r\n    arr.push({\r\n        \"id\": id, \"units\": Array.from(e.querySelectorAll(\"td.unit-item\")).map(e=>e.innerText)})\r\n    return arr\r\n}, [])\r\n\r\nconst returnArrObjVillagesIdArrUnitsNotPremium = async (villages) => {\r\n    const arr = []\r\n    for (const id of Object.keys(villages)) {\r\n        arr.push({id : id, units: await (0,_LetsGO_requests__WEBPACK_IMPORTED_MODULE_2__.getRequest)((0,_general_init_tw__WEBPACK_IMPORTED_MODULE_0__.linkGoVillage)(id, \"\"), \"am_farm\").then( async (data, error) => {\r\n                if (error) throw error\r\n                if (!data) return false\r\n                return new DOMParser().parseFromString( data, 'text/html')\r\n            }).then(async(html) => {\r\n                return availableUnits(html)\r\n            })\r\n        })\r\n    }\r\n    return arr\r\n}\r\n\r\nconst returnArrObjVillagesIdSchedulesFarmOrder = async (arrObjVillagesIdArrUnits, villages) => await arrObjVillagesIdArrUnits.reduce((array, elem)=>{\r\n    console.log(elem.id)\r\n    const models = villages[elem.id].modelo.farm\r\n    array.push({id: elem.id, max: Math.max(Math.min( ...models.A.reduce((arr, e, i) => {\r\n                if ( e > 0 ) {\r\n                    console.log(\"A: \", e, elem.units[i], parseInt( elem.units[i] / e ))\r\n                    arr.push( parseInt( elem.units[i] / e ) )\r\n                }\r\n                return arr\r\n            }, [])), Math.min( ...models.A.reduce((arr, e, i) => {\r\n                if ( e > 0 ) {\r\n                    console.log(\"B: \", e, elem.units[i], parseInt( elem.units[i] / e ))\r\n                    arr.push( parseInt( elem.units[i] / e ) )\r\n                }\r\n                return arr\r\n            }, []))\r\n        )\r\n    })\r\n    return array\r\n}, []).sort((a, b)=>{\r\n    if ( a.max > b.max ) return -1\r\n    if ( a.max < b.max ) return 1\r\n    return 0\r\n})\r\n\r\nconst returnArrVillagesIdfarmModelNull = (villages) => Object.keys(villages).filter((id)=>{\r\n    console.log(villages[id].modelo)\r\n    if (!villages[id].modelo) return true\r\n    console.log(villages[id].modelo.farm)\r\n    if (!villages[id].modelo.farm) return true\r\n    console.log(villages[id].modelo.farm[\"A\"])\r\n    if (!villages[id].modelo.farm[\"A\"]) return true\r\n    console.log(villages[id].modelo.farm[\"B\"])\r\n    if (!villages[id].modelo.farm[\"B\"]) return true\r\n    console.log(villages[id].modelo.farm[\"A\"].length < 3)\r\n    if (villages[id].modelo.farm[\"A\"].length < 3) return true\r\n    console.log(villages[id].modelo.farm[\"B\"].length < 3)\r\n    if (villages[id].modelo.farm[\"B\"].length < 3) return true\r\n    return false\r\n})\r\n\r\nasync function schedulesFarm() {\r\n    return await (0,_LetsGO_requests__WEBPACK_IMPORTED_MODULE_2__.getRequest)(_general_init_tw__WEBPACK_IMPORTED_MODULE_0__.linkSameVillage, \"overview_villages&mode=combined&group=0\").then( async (data, error) => {\r\n        if (error) throw error\r\n        if (!data) return false\r\n        return new DOMParser().parseFromString( data, 'text/html')\r\n    }).then(async(html) => {\r\n        await (0,_general_init_tw__WEBPACK_IMPORTED_MODULE_0__.getPlayers)().then(async(players_, error)=>{\r\n            if (error) throw error\r\n            if (!players_) return false\r\n            const players = players_\r\n            let arrObjVillagesIdSchedulesFarmOrder\r\n            if (_general_init_tw__WEBPACK_IMPORTED_MODULE_0__.premiumActive) {\r\n                const arrUnitsPremium = returnArrObjVillagesIdArrUnitsPremium(html)\r\n                arrObjVillagesIdSchedulesFarmOrder = await returnArrObjVillagesIdSchedulesFarmOrder(arrUnitsPremium, players[_general_init_tw__WEBPACK_IMPORTED_MODULE_0__.gameData.player.id].villages)\r\n            } else {\r\n                const arrUnitsNotPremium = await returnArrObjVillagesIdArrUnitsNotPremium(players[_general_init_tw__WEBPACK_IMPORTED_MODULE_0__.gameData.player.id].villages)\r\n                arrObjVillagesIdSchedulesFarmOrder = await returnArrObjVillagesIdSchedulesFarmOrder(await arrUnitsNotPremium, players[_general_init_tw__WEBPACK_IMPORTED_MODULE_0__.gameData.player.id].villages)\r\n            }\r\n            const numDateTimeNow = (0,_general_util__WEBPACK_IMPORTED_MODULE_1__.nDateTime)( (0,_general_init_tw__WEBPACK_IMPORTED_MODULE_0__.dateServer)(), (0,_general_init_tw__WEBPACK_IMPORTED_MODULE_0__.timeServer)() )\r\n            const timer = Number(players[_general_init_tw__WEBPACK_IMPORTED_MODULE_0__.gameData.player.id].configs.farm.timer) || 42\r\n            const season = Number(players[_general_init_tw__WEBPACK_IMPORTED_MODULE_0__.gameData.player.id].configs.farm.season) || 120\r\n            console.warn(\"Farm Order: \")\r\n            console.warn(await arrObjVillagesIdSchedulesFarmOrder)\r\n            if (await arrObjVillagesIdSchedulesFarmOrder.length > 0) {\r\n                await arrObjVillagesIdSchedulesFarmOrder.forEach(async(obj, i) => {\r\n                    let response = await (0,_LetsGO_schedules__WEBPACK_IMPORTED_MODULE_3__.saveSchedules)( numDateTimeNow + ( ( ( timer * i ) + season ) * 1000 ), Number( obj.id ), \"am_farm\")\r\n                    if ( await response ) players[ _general_init_tw__WEBPACK_IMPORTED_MODULE_0__.gameData.player.id ] = await response\r\n                })\r\n            }\r\n            return await (0,_general_init_tw__WEBPACK_IMPORTED_MODULE_0__.setPlayers)(players)\r\n        })\r\n    }).then((players, error)=>{\r\n        if (error) throw error\r\n        if (!players) return false\r\n        return players[_general_init_tw__WEBPACK_IMPORTED_MODULE_0__.gameData.player.id]\r\n    })\r\n}\r\n\r\nasync function setModelsFarm() {\r\n    return await (0,_LetsGO_requests__WEBPACK_IMPORTED_MODULE_2__.getRequest)(_general_init_tw__WEBPACK_IMPORTED_MODULE_0__.linkSameVillage, \"am_farm\").then( async (data, error) => {\r\n        if (error) throw error\r\n        if (!data) return false\r\n        return new DOMParser().parseFromString( data, 'text/html')\r\n    }).then(async(html) => {\r\n        return await (0,_general_init_tw__WEBPACK_IMPORTED_MODULE_0__.getPlayers)().then(async(players_, error)=>{\r\n            if (error) throw error\r\n            if (!players_) return false\r\n            const players = players_\r\n            const villages = players[ _general_init_tw__WEBPACK_IMPORTED_MODULE_0__.gameData.player.id ].villages\r\n            console.log(returnArrVillagesIdfarmModelNull(villages))\r\n            returnArrVillagesIdfarmModelNull(villages).map((id)=>{\r\n                if (!villages[id].modelo) villages[id].modelo = {}\r\n                if (!villages[id].modelo.farm) villages[id].modelo.farm = {}\r\n                if (!villages[id].modelo.farm[\"A\"]) villages[id].modelo.farm[\"A\"] = getModel(\"A\", html)\r\n                console.log(villages[id].modelo.farm[\"A\"])\r\n                if (!villages[id].modelo.farm[\"B\"]) villages[id].modelo.farm[\"B\"] = getModel(\"B\", html)\r\n                console.log(villages[id].modelo.farm[\"B\"])\r\n                if (!villages[id].modelo.farm[\"A\"].length < 3) villages[id].modelo.farm[\"A\"] = getModel(\"A\", html)\r\n                console.log(villages[id].modelo.farm[\"A\"])\r\n                if (!villages[id].modelo.farm[\"B\"].length < 3) villages[id].modelo.farm[\"B\"] = getModel(\"B\", html)\r\n                console.log(villages[id].modelo.farm[\"B\"])\r\n            })\r\n            console.log(villages)\r\n            players[ _general_init_tw__WEBPACK_IMPORTED_MODULE_0__.gameData.player.id ].villages = villages\r\n            return await (0,_general_init_tw__WEBPACK_IMPORTED_MODULE_0__.setPlayers)(players)\r\n        })\r\n    }).then((players, error)=>{\r\n        if (error) throw error\r\n        if (!players) return false\r\n        return players[_general_init_tw__WEBPACK_IMPORTED_MODULE_0__.gameData.player.id]\r\n    })\r\n}\r\n\r\nconst veryfyFarmSchedules = (players) => Object.keys( players[ _general_init_tw__WEBPACK_IMPORTED_MODULE_0__.gameData.player.id ].schedules ).filter((key) => players[ _general_init_tw__WEBPACK_IMPORTED_MODULE_0__.gameData.player.id ].schedules[key].screen == \"am_farm\")\r\n\n\n//# sourceURL=webpack://newproject/../Farm/farm-export.js?");

/***/ }),

/***/ "./TwProjectBot.js":
/*!*************************!*\
  !*** ./TwProjectBot.js ***!
  \*************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _general_version__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../general/version */ \"../general/version.js\");\n/* harmony import */ var _general_init_tw__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../general/init_tw */ \"../general/init_tw.js\");\n/* harmony import */ var _requests__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./requests */ \"./requests.js\");\n/* harmony import */ var _general_util__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../general/util */ \"../general/util.js\");\n/* harmony import */ var _general_util_tw__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../general/util_tw */ \"../general/util_tw.js\");\n/* harmony import */ var _components_components__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../components/components */ \"../components/components.js\");\n/* harmony import */ var _schedules__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./schedules */ \"./schedules.js\");\n/* harmony import */ var _Senders_SenderSchedules__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../Senders/SenderSchedules */ \"../Senders/SenderSchedules.js\");\n/* harmony import */ var _incomings__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./incomings */ \"./incomings.js\");\n/* harmony import */ var _components_printMessage__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../components/printMessage */ \"../components/printMessage.js\");\n/* harmony import */ var _components_notification__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../components/notification */ \"../components/notification.js\");\n/* harmony import */ var _Snob_snob_export__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../Snob/snob-export */ \"../Snob/snob-export.js\");\n/* harmony import */ var _Farm_farm_export__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ../Farm/farm-export */ \"../Farm/farm-export.js\");\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n'use strict'\r\n\r\nasync function doSomething() {\r\n\r\n    console.info( \"DOM carregado!\" )\r\n\r\n    console.timeEnd( \"Init time\" )\r\n\r\n    window.addEventListener( 'blur', _general_util_tw__WEBPACK_IMPORTED_MODULE_4__.doPlay )\r\n\r\n    console.error(\"Correção 08/09 - 15:44\")\r\n\r\n    await (0,_requests__WEBPACK_IMPORTED_MODULE_2__.fetch_players)().then( async (response, error) => {\r\n        if (error || !response) throw new Error(response)\r\n\r\n        const players = response\r\n\r\n        await (0,_components_components__WEBPACK_IMPORTED_MODULE_5__.statusGo)( players[ _general_init_tw__WEBPACK_IMPORTED_MODULE_1__.gameData.player.id ].configs.active )\r\n\r\n        const changeScheduleStatus = async ( key, statusSchedule ) => (\r\n            await (0,_general_init_tw__WEBPACK_IMPORTED_MODULE_1__.getPlayers)().then(async(players, error) => {\r\n                if (error) throw error\r\n                if (!players) return players\r\n                players[ _general_init_tw__WEBPACK_IMPORTED_MODULE_1__.gameData.player.id ].schedules[ key ].status = statusSchedule\r\n                return await (0,_general_init_tw__WEBPACK_IMPORTED_MODULE_1__.setPlayers)(players).then((players, error)=>{\r\n                    if (error) throw error\r\n                    return players\r\n                })\r\n            }).then((players, error) => {\r\n                if (players) return players[_general_init_tw__WEBPACK_IMPORTED_MODULE_1__.gameData.player.id]\r\n                return false\r\n            })\r\n        )\r\n        const returnObjUnitsPlace = async (id) => (\r\n            await (0,_requests__WEBPACK_IMPORTED_MODULE_2__.getRequest)( (0,_general_init_tw__WEBPACK_IMPORTED_MODULE_1__.link_ir_aldeia)( id, \"\" ), \"place\" ).then( data => {\r\n                if ( data == Error ) return console.log( 'Request not fulfilled!' )\r\n                const html = new DOMParser().parseFromString( data, 'text/html')\r\n                const arrUnits = html.querySelectorAll( \"a.units-entry-all\" )\r\n                console.log(arrUnits)\r\n                return Array.from(arrUnits).reduce(( obj, e ) => {\r\n                    obj[e.dataset.unit] = e.textContent.replace('(', '').replace(')', '')\r\n                    return obj\r\n                },{})\r\n            })\r\n        )\r\n\r\n        printMsg(\"Atualizando informações...\")\r\n        ;(0,_components_notification__WEBPACK_IMPORTED_MODULE_10__.printTimer)(-1)\r\n        console.log( 'Scavenge: ' + _general_init_tw__WEBPACK_IMPORTED_MODULE_1__.scav_active )\r\n        console.info( players[ _general_init_tw__WEBPACK_IMPORTED_MODULE_1__.gameData.player.id ].villageIDs )\r\n        console.table( { 'world_speed': _general_init_tw__WEBPACK_IMPORTED_MODULE_1__.world_speed, 'units_speed': _general_init_tw__WEBPACK_IMPORTED_MODULE_1__.units_speed, 'loyalty_per_hour': _general_init_tw__WEBPACK_IMPORTED_MODULE_1__.loyalty_per_hour, 'world_delay': _general_init_tw__WEBPACK_IMPORTED_MODULE_1__.world_delay, 'fake_limit' : _general_init_tw__WEBPACK_IMPORTED_MODULE_1__.fake_limit } )\r\n\r\n        await (0,_components_components__WEBPACK_IMPORTED_MODULE_5__.checkPaused)( players[ _general_init_tw__WEBPACK_IMPORTED_MODULE_1__.gameData.player.id ].configs.active, players[ _general_init_tw__WEBPACK_IMPORTED_MODULE_1__.gameData.player.id ].configs.n_loop )\r\n\r\n        const divPrinMsg = document.querySelector(\"#print-msg\")\r\n        const active_go = document.querySelector( \"#active_go\" )\r\n        active_go.addEventListener(\"click\", clickActiveGO )\r\n        async function clickActiveGO() {\r\n            let response = await (0,_general_init_tw__WEBPACK_IMPORTED_MODULE_1__.getPlayers)().then(async(players, error) => {\r\n                if (error) throw error\r\n                if (!players) return false\r\n                players[_general_init_tw__WEBPACK_IMPORTED_MODULE_1__.gameData.player.id].configs.active = active_go.checked\r\n                return await (0,_general_init_tw__WEBPACK_IMPORTED_MODULE_1__.setPlayers)(players).then((players, error)=>{\r\n                    if (error) throw error\r\n                    if (!players) return false\r\n                    return players[_general_init_tw__WEBPACK_IMPORTED_MODULE_1__.gameData.player.id]\r\n                })\r\n            })\r\n            if (await response) players[_general_init_tw__WEBPACK_IMPORTED_MODULE_1__.gameData.player.id] = await response\r\n            response = await (0,_components_components__WEBPACK_IMPORTED_MODULE_5__.statusGo)( players[ _general_init_tw__WEBPACK_IMPORTED_MODULE_1__.gameData.player.id ].configs.active )\r\n            if ( await response) players[_general_init_tw__WEBPACK_IMPORTED_MODULE_1__.gameData.player.id] = await response\r\n        }\r\n        const checkPrint = setInterval(() => {\r\n            if (divPrinMsg) {\r\n                clearInterval(checkPrint)\r\n                divPrinMsg.hidden = active_go.checked ? false : true\r\n            }\r\n        }, 100)\r\n\r\n        await _incomings__WEBPACK_IMPORTED_MODULE_8__.incomings.tagAttacksNotPremium()\r\n\r\n        if (!((0,_general_init_tw__WEBPACK_IMPORTED_MODULE_1__.placeTryConfirm)() && document.querySelector(\"#fader\"))) {\r\n\r\n            const numDateTimeNow = (0,_general_util__WEBPACK_IMPORTED_MODULE_3__.nDateTime)( (0,_general_init_tw__WEBPACK_IMPORTED_MODULE_1__.dateServer)(), (0,_general_init_tw__WEBPACK_IMPORTED_MODULE_1__.timeServer)() )\r\n\r\n            printMsg(\"Verificando bonus diário...\")\r\n            await (0,_general_util_tw__WEBPACK_IMPORTED_MODULE_4__.daily_bonus)()\r\n\r\n            printMsg(\"Verificando ataques...\")\r\n            response = await _incomings__WEBPACK_IMPORTED_MODULE_8__.incomings.checkForNewAttacks()\r\n            if ( await response) players[_general_init_tw__WEBPACK_IMPORTED_MODULE_1__.gameData.player.id] = await response\r\n\r\n            printMsg(\"Verificando se existem aldeias para farmar...\")\r\n            console.warn(\"Cerify Farm: \" + !!((0,_Farm_farm_export__WEBPACK_IMPORTED_MODULE_12__.veryfyFarmSchedules)(players).length == 0 && _general_init_tw__WEBPACK_IMPORTED_MODULE_1__.farmActive))\r\n            if ( (0,_Farm_farm_export__WEBPACK_IMPORTED_MODULE_12__.veryfyFarmSchedules)(players).length == 0 && _general_init_tw__WEBPACK_IMPORTED_MODULE_1__.farmActive ) {\r\n                if ((0,_Farm_farm_export__WEBPACK_IMPORTED_MODULE_12__.returnArrVillagesIdfarmModelNull)(players[ _general_init_tw__WEBPACK_IMPORTED_MODULE_1__.gameData.player.id ].villages).length > 0) {\r\n                    response = await (0,_Farm_farm_export__WEBPACK_IMPORTED_MODULE_12__.setModelsFarm)()\r\n                    if (await response) players[_general_init_tw__WEBPACK_IMPORTED_MODULE_1__.gameData.player.id] = await response\r\n                }\r\n                response = await (0,_Farm_farm_export__WEBPACK_IMPORTED_MODULE_12__.schedulesFarm)()\r\n                if (await response) {\r\n                    players[_general_init_tw__WEBPACK_IMPORTED_MODULE_1__.gameData.player.id] = await response\r\n                } else {\r\n                    _components_printMessage__WEBPACK_IMPORTED_MODULE_9__.printMessage.warn(\"Não existem aldeias para farmar no momento...\", 3 * 1000)\r\n                }\r\n            }\r\n\r\n            printMsg(\"Verificando se existem aldeias para cunhar...\")\r\n            const nextSnob = players[_general_init_tw__WEBPACK_IMPORTED_MODULE_1__.gameData.player.id].configs.nextSnob || numDateTimeNow\r\n            console.warn(`Check Coins...${new Date(nextSnob).toLocaleString()}`)\r\n            if (!nextSnob || nextSnob - numDateTimeNow <= 0 ) {\r\n                response = await (0,_Snob_snob_export__WEBPACK_IMPORTED_MODULE_11__.schedulesSnob)()\r\n                if (await response) {\r\n                    players[_general_init_tw__WEBPACK_IMPORTED_MODULE_1__.gameData.player.id] = await response\r\n                } else {\r\n                    _components_printMessage__WEBPACK_IMPORTED_MODULE_9__.printMessage.warn(\"Não existem aldeias para cunhar no momento...\", 3 * 1000)\r\n                }\r\n            }\r\n        }\r\n\r\n        printMsg(\"Resolvendo programações...\")\r\n        \r\n        await resolveIdle( await idle_e( await sche_e() ) )\r\n        \r\n        response = await (0,_general_init_tw__WEBPACK_IMPORTED_MODULE_1__.getPlayers)().then((players, error)=>{\r\n            if (error) throw error\r\n            if (!players) return false\r\n            return players[_general_init_tw__WEBPACK_IMPORTED_MODULE_1__.gameData.player.id]\r\n        })\r\n        if (await response) players[_general_init_tw__WEBPACK_IMPORTED_MODULE_1__.gameData.player.id] = await response\r\n\r\n        const schedulesKeys = Object.keys( players[ _general_init_tw__WEBPACK_IMPORTED_MODULE_1__.gameData.player.id ].schedules ).sort()\r\n\r\n        if ( schedulesKeys.length > 0 ) {\r\n            const sortSchedules = schedulesKeys.reduce((obj, key) => {\r\n                obj[ key ] = players[ _general_init_tw__WEBPACK_IMPORTED_MODULE_1__.gameData.player.id ].schedules[ key ]\r\n                return obj\r\n            }, {})\r\n            console.table( sortSchedules, [ 'date', 'screen', 'villageID', 'time', 'ms', 'status' ] )\r\n            response = await deleteScheduleAll()\r\n            if (await response) players[_general_init_tw__WEBPACK_IMPORTED_MODULE_1__.gameData.player.id] = await response\r\n            await run_schedule()\r\n        } else {\r\n            printMsg(\"Nenhuma programação! Revise suas configurações...\")\r\n            console.log( \"Schedeules's not!\" )\r\n        }\r\n        async function delayCommand( id, target, key ) {\r\n            const lastOffset = Number( localStorage.getItem( 'GO#lastOffset' ) ) || 0\r\n            if ( key - lastOffset > 30 * 1000 ) {\r\n                const objUnits = await returnObjUnitsPlace(id)\r\n                let first = 0\r\n                let unit_slow = \"\"\r\n                const template_delay = _general_init_tw__WEBPACK_IMPORTED_MODULE_1__.gameData.units.reduce((obj, unit ) => {\r\n                    if ( objUnits[unit] ) {\r\n                        if ( objUnits[unit] == 0 || first > 0 ) { \r\n                            obj[unit] = 0 \r\n                        }\r\n                        if ( objUnits[unit] > 0 && first == 0 ) {\r\n                            unit_slow = unit\r\n                            obj[unit] = 1\r\n                            first++\r\n                        }\r\n                    }\r\n                    return obj\r\n                },{})\r\n                if ( unit_slow == \"\" ) return false\r\n                const travel = (0,_general_util_tw__WEBPACK_IMPORTED_MODULE_4__.getTravelTimeInSecond)( (0,_general_util_tw__WEBPACK_IMPORTED_MODULE_4__.getDistance)( target[ 0 ] + \"|\" + target[ 1 ], players[ _general_init_tw__WEBPACK_IMPORTED_MODULE_1__.gameData.player.id ].villages[ id ].coord ), unit_slow, _general_util_tw__WEBPACK_IMPORTED_MODULE_4__.baseUnitSpeed2 )\r\n                return await (0,_schedules__WEBPACK_IMPORTED_MODULE_6__.saveSchedules)( key - (5 * 1000), id, \"place\", \"delay\", '500', target, 1, template_delay, null, travel, \"00:00:00\", 0 )\r\n            }\r\n            return false\r\n        }\r\n        async function returnKeyNextCommand() {\r\n            let response = await (0,_general_init_tw__WEBPACK_IMPORTED_MODULE_1__.getPlayers)().then((players, error)=>{\r\n                if (error) throw error\r\n                if (!players) return false\r\n                return players[_general_init_tw__WEBPACK_IMPORTED_MODULE_1__.gameData.player.id]\r\n            })\r\n            if (await response) players[_general_init_tw__WEBPACK_IMPORTED_MODULE_1__.gameData.player.id] = await response\r\n            const schedules = players[ _general_init_tw__WEBPACK_IMPORTED_MODULE_1__.gameData.player.id ].schedules\r\n            const objComm = {}\r\n            for (const key in schedules) {\r\n                if ( schedules[ key ].mode == \"command\" || schedules[ key ].mode == \"delay\" ) objComm[ key ] = schedules[ key ]\r\n            }\r\n            return Number( Object.keys( objComm ).sort()[ 0 ] )\r\n        }\r\n        async function activetedOnOff( timer, id, scr_p, key ) {\r\n            console.log( scr_p )\r\n            // --- configurações de timer para quando o próximo evento não seja commando\r\n            let response = await (0,_general_init_tw__WEBPACK_IMPORTED_MODULE_1__.getPlayers)().then((players, error)=> {\r\n                if (error) throw error\r\n                if (!players) return false\r\n                return players[_general_init_tw__WEBPACK_IMPORTED_MODULE_1__.gameData.player.id]\r\n            })\r\n            if (await response) players[_general_init_tw__WEBPACK_IMPORTED_MODULE_1__.gameData.player.id] = await response\r\n            if ( scr_p != 'place' ) {\r\n                let config = players[ _general_init_tw__WEBPACK_IMPORTED_MODULE_1__.gameData.player.id ].configs\r\n                let screen = _general_init_tw__WEBPACK_IMPORTED_MODULE_1__.gameData.screen\r\n                let mode = _general_init_tw__WEBPACK_IMPORTED_MODULE_1__.gameData.mode\r\n                let src_config = [ 'overview', 'map', 'report', 'mail', 'market', 'ranking', 'ally', 'forum', 'info_player', 'mentor', 'premium', 'settings', 'place', 'event' ]\r\n                // --- verifica se usuário está interagindo e determina timer conforme configuração\r\n                for ( let i = 0; i < src_config.length; i++ ) {\r\n                    if ( _general_init_tw__WEBPACK_IMPORTED_MODULE_1__.screen_atual != \"market&mode=exchange\" && _general_init_tw__WEBPACK_IMPORTED_MODULE_1__.screen_atual != \"place&mode=scavenge\" ) {\r\n                        if ( screen == src_config[ i ] ) {\r\n                            timer = Number( config[ src_config[ i ] ] )\r\n                            response = await (0,_components_components__WEBPACK_IMPORTED_MODULE_5__.statusGo)( \"await\" )\r\n                            if ( await response) players[_general_init_tw__WEBPACK_IMPORTED_MODULE_1__.gameData.player.id] = await response\r\n                            if ( screen == 'place' ) {\r\n                                if ( !mode || mode == 'command' ) {\r\n                                    timer = Number( config[ 'place_command' ] )\r\n                                }\r\n                            }\r\n                            if ( screen == 'map' && document.querySelector( \"#popup_box_popup_command\" ) ) {\r\n                                timer = Number( config[ 'place_command' ] )\r\n                            }\r\n                        }\r\n                    }\r\n                    if ( src_config[ i ] == 'event' && screen.indexOf( \"event\" ) != -1 ) {\r\n                        timer = Number( config.event )\r\n                        response = await (0,_components_components__WEBPACK_IMPORTED_MODULE_5__.statusGo)( \"await\" )\r\n                        if ( await response) players[_general_init_tw__WEBPACK_IMPORTED_MODULE_1__.gameData.player.id] = await response\r\n                    }\r\n                    if ( src_config[ i ] == \"premium\" &&  _general_init_tw__WEBPACK_IMPORTED_MODULE_1__.gameData.mode == \"transfer\" ) {\r\n                        timer = Number( config.transfer )\r\n                        response = await (0,_components_components__WEBPACK_IMPORTED_MODULE_5__.statusGo)( \"await\" )\r\n                        if ( await response) players[_general_init_tw__WEBPACK_IMPORTED_MODULE_1__.gameData.player.id] = await response\r\n                    }\r\n                }\r\n                if ( (0,_components_components__WEBPACK_IMPORTED_MODULE_5__.checkModelEdit)() ) {\r\n                    timer = src_config[ 'settings' ]\r\n                    response = await (0,_components_components__WEBPACK_IMPORTED_MODULE_5__.statusGo)( \"await\" )\r\n                    if ( await response) players[_general_init_tw__WEBPACK_IMPORTED_MODULE_1__.gameData.player.id] = await response\r\n                }\r\n                if ( screen == \"overview_villages\" || screen == \"memo\" || screen == \"info_village\" || screen == \"flags\" || screen == \"inventory\" || screen == \"statue\" ) {\r\n                    timer = Number( config[ \"overview\" ] )\r\n                    response = await (0,_components_components__WEBPACK_IMPORTED_MODULE_5__.statusGo)( \"await\" )\r\n                    if ( await response) players[_general_init_tw__WEBPACK_IMPORTED_MODULE_1__.gameData.player.id] = await response\r\n                }\r\n            }\r\n            if ((0,_general_init_tw__WEBPACK_IMPORTED_MODULE_1__.verifyCurrentScreen)(\"place&try=confirm\")) timer = 90\r\n            console.log( `timer: ${ timer }s ${ players[ _general_init_tw__WEBPACK_IMPORTED_MODULE_1__.gameData.player.id ].configs.active ? 'on' : 'off' }` )\r\n            console.log(id)\r\n            printMsg(`Next: ${players[ _general_init_tw__WEBPACK_IMPORTED_MODULE_1__.gameData.player.id ].villages[id].display_name} - ${scr_p}`)\r\n            let timerPrint = timer\r\n            setTimeout(async() => {\r\n                response = await (0,_general_init_tw__WEBPACK_IMPORTED_MODULE_1__.getPlayers)().then((players, error)=>{\r\n                    if (error) throw error\r\n                    if (!players) return false\r\n                    return players[_general_init_tw__WEBPACK_IMPORTED_MODULE_1__.gameData.player.id]\r\n                })\r\n                if ( await response) players[_general_init_tw__WEBPACK_IMPORTED_MODULE_1__.gameData.player.id] = await response\r\n                if ( scr_p != 'place' ) {\r\n                    if ( players[ _general_init_tw__WEBPACK_IMPORTED_MODULE_1__.gameData.player.id ].configs.active && !(0,_general_init_tw__WEBPACK_IMPORTED_MODULE_1__.sendCommandActive)()) {\r\n                        if ( !await (0,_components_components__WEBPACK_IMPORTED_MODULE_5__.checkPaused)( players[ _general_init_tw__WEBPACK_IMPORTED_MODULE_1__.gameData.player.id ].configs.active, players[ _general_init_tw__WEBPACK_IMPORTED_MODULE_1__.gameData.player.id ].configs.n_loop ) ) {\r\n                            response = await changeScheduleStatus( key, 1 )  // 1 - marca para ser excluido\r\n                            if ( await response ) players[_general_init_tw__WEBPACK_IMPORTED_MODULE_1__.gameData.player.id] = await response\r\n                            self.location = (0,_general_init_tw__WEBPACK_IMPORTED_MODULE_1__.link_ir_aldeia)( id,  scr_p )\r\n                        } else {\r\n                            timerPrint = \"clear\"\r\n                            setTimeout(async() => await run_schedule(), 1 * 1000)\r\n                        }\r\n                    } else {\r\n                        timerPrint = \"clear\"\r\n                        setTimeout(async() => await run_schedule(), 1 * 1000)\r\n                    }\r\n                } else {\r\n                    if ( players[ _general_init_tw__WEBPACK_IMPORTED_MODULE_1__.gameData.player.id ].configs.active || players[ _general_init_tw__WEBPACK_IMPORTED_MODULE_1__.gameData.player.id ].configs.command ) {\r\n                        response = await changeScheduleStatus( key, 2 )  // 2 - command\r\n                        if ( await response ) players[_general_init_tw__WEBPACK_IMPORTED_MODULE_1__.gameData.player.id] = await response\r\n                        if ((0,_general_init_tw__WEBPACK_IMPORTED_MODULE_1__.placeCommand)() && _general_init_tw__WEBPACK_IMPORTED_MODULE_1__.gameData.village.id == id) {\r\n                            timerPrint = \"clear\"\r\n                            await (0,_general_util__WEBPACK_IMPORTED_MODULE_3__.sleep)(1)\r\n                            await run_schedule()\r\n                        } else {\r\n                            self.location = (0,_general_init_tw__WEBPACK_IMPORTED_MODULE_1__.link_ir_aldeia)( id,  scr_p )\r\n                        }\r\n                    } else {\r\n                        response = await changeScheduleStatus( key, 1 )  // 1 - marca para ser excluido\r\n                        if ( await response ) players[_general_init_tw__WEBPACK_IMPORTED_MODULE_1__.gameData.player.id] = await response\r\n                        _components_printMessage__WEBPACK_IMPORTED_MODULE_9__.printMessage.error(`Comando excluído!! Motivo: Let's Go! desligado e envio de comandos desligado!`, 5 * 1000)\r\n                            timerPrint = \"clear\"\r\n                            await run_schedule()\r\n                    }\r\n                }\r\n            }, timer * 1000)\r\n            if (!(0,_general_init_tw__WEBPACK_IMPORTED_MODULE_1__.placeTryConfirm)()) {\r\n                const intComm = setInterval( async () => {\r\n                    response = await (0,_general_init_tw__WEBPACK_IMPORTED_MODULE_1__.getPlayers)().then((players, error)=>{\r\n                        if (error) throw error\r\n                        if (!players) return false\r\n                        return players[_general_init_tw__WEBPACK_IMPORTED_MODULE_1__.gameData.player.id]\r\n                    })\r\n                    if ( await response) players[_general_init_tw__WEBPACK_IMPORTED_MODULE_1__.gameData.player.id] = await response\r\n                    if (timerPrint == \"clear\") clearInterval( intComm )\r\n                    ;(0,_components_notification__WEBPACK_IMPORTED_MODULE_10__.printTimer)(timerPrint)\r\n                    if ( await returnKeyNextCommand() - (0,_general_util__WEBPACK_IMPORTED_MODULE_3__.nDateTime)( (0,_general_init_tw__WEBPACK_IMPORTED_MODULE_1__.dateServer)(), (0,_general_init_tw__WEBPACK_IMPORTED_MODULE_1__.timeServer)() ) <= 60 * 1000 ) {\r\n                        clearInterval( intComm )\r\n                        console.warn(\"Command: \" + await returnKeyNextCommand())\r\n                        await run_schedule()\r\n                    }\r\n                    timerPrint--\r\n                }, 1 * 1000 )\r\n            } else {\r\n                (0,_components_notification__WEBPACK_IMPORTED_MODULE_10__.printTimer)(-1)\r\n            }\r\n        }\r\n        async function deleteSchedule(key) {\r\n            return await (0,_general_init_tw__WEBPACK_IMPORTED_MODULE_1__.getPlayers)().then(async(players, error)=>{\r\n                if (error) throw error\r\n                if (players) \r\n                delete players[ _general_init_tw__WEBPACK_IMPORTED_MODULE_1__.gameData.player.id ].schedules[ key ]\r\n                return await (0,_general_init_tw__WEBPACK_IMPORTED_MODULE_1__.setPlayers)(players).then((players, error)=>{\r\n                    if (error) throw error\r\n                    if (players) return players[_general_init_tw__WEBPACK_IMPORTED_MODULE_1__.gameData.player.id]\r\n                })\r\n            })\r\n        }\r\n        async function run_schedule( t = 18 ) {\r\n            printMsg(\"Verificando comandos...\")\r\n            let response = await (0,_general_init_tw__WEBPACK_IMPORTED_MODULE_1__.getPlayers)().then((players, error)=>{\r\n                if (error) throw error\r\n                if (!players) return false\r\n                return players[_general_init_tw__WEBPACK_IMPORTED_MODULE_1__.gameData.player.id]\r\n            })\r\n            if (await response) players[_general_init_tw__WEBPACK_IMPORTED_MODULE_1__.gameData.player.id] = await response\r\n            //--- proxima programação (eventos e comandos) na lista ordenada\r\n            let nextKey = Number( Object.keys( players[ _general_init_tw__WEBPACK_IMPORTED_MODULE_1__.gameData.player.id ].schedules ).sort()[ 0 ] )\r\n            // --- quando não tem programação\r\n            if ( !players[ _general_init_tw__WEBPACK_IMPORTED_MODULE_1__.gameData.player.id ].schedules[ nextKey ] ) return\r\n            // --- estancia o status do comando\r\n            let status = Number( players[ _general_init_tw__WEBPACK_IMPORTED_MODULE_1__.gameData.player.id ].schedules[ nextKey ].status )\r\n            // --- busca o horário do proximo comando\r\n            let nextKeyCommand = await returnKeyNextCommand()\r\n            // --- calcula o timer em segundos para o proximo evento.\r\n            const numDateTimeNow = (0,_general_util__WEBPACK_IMPORTED_MODULE_3__.nDateTime)( (0,_general_init_tw__WEBPACK_IMPORTED_MODULE_1__.dateServer)(), (0,_general_init_tw__WEBPACK_IMPORTED_MODULE_1__.timeServer)() )\r\n            let timer = numDateTimeNow < nextKey \r\n                ? parseInt(( nextKey -  numDateTimeNow ) / 1000 )\r\n                : _general_init_tw__WEBPACK_IMPORTED_MODULE_1__.gameData.screen == \"am_farm\" ? players[_general_init_tw__WEBPACK_IMPORTED_MODULE_1__.gameData.player.id].configs.farm.timer : t  \r\n            // --- avisa que tem um comando para ser enviado\r\n            nextKeyCommand - numDateTimeNow <=  90 * 1000 ? (0,_components_components__WEBPACK_IMPORTED_MODULE_5__.alertCommad)( true ) : (0,_components_components__WEBPACK_IMPORTED_MODULE_5__.alertCommad)( false )\r\n\r\n            // --- Faz não ir para outro scren antes de enviar\r\n            if ( status != 2 && nextKeyCommand - numDateTimeNow <= 90 * 1000 ) {\r\n                nextKey = nextKeyCommand\r\n                status = Number( players[ _general_init_tw__WEBPACK_IMPORTED_MODULE_1__.gameData.player.id ].schedules[ nextKey ].status )\r\n                timer = parseInt(( nextKey - numDateTimeNow ) / 1000 )\r\n            }\r\n\r\n            // --- força ir na praça quando comando ativo\r\n            if ( status != 2 && (0,_general_init_tw__WEBPACK_IMPORTED_MODULE_1__.sendCommandActive)() ) {\r\n                if (!(0,_general_init_tw__WEBPACK_IMPORTED_MODULE_1__.placeCommand)() || ((0,_general_init_tw__WEBPACK_IMPORTED_MODULE_1__.placeCommand)() && _general_init_tw__WEBPACK_IMPORTED_MODULE_1__.gameData.village.id != players[ _general_init_tw__WEBPACK_IMPORTED_MODULE_1__.gameData.player.id ].schedules[ nextKey ].villageID)) {\r\n                    self.location = (0,_general_init_tw__WEBPACK_IMPORTED_MODULE_1__.linkGoVillage)(players[ _general_init_tw__WEBPACK_IMPORTED_MODULE_1__.gameData.player.id ].schedules[ nextKey ].villageID, \"place\")\r\n                } else {\r\n                    if (document.querySelector(\"#command_actions\").hidden) {\r\n                        document.querySelector(\"#program_command\").click()\r\n                    }\r\n                }\r\n            }\r\n\r\n            // --- verifica e programa o teste de delay\r\n            if ( status != 2 && (nextKeyCommand - numDateTimeNow <= 60 * 1000 && nextKeyCommand - numDateTimeNow > 35 * 1000)) {\r\n                response = await (0,_general_init_tw__WEBPACK_IMPORTED_MODULE_1__.getPlayers)().then((players, error)=>{\r\n                    if (error) throw error\r\n                    if (!players) return false\r\n                    return players[_general_init_tw__WEBPACK_IMPORTED_MODULE_1__.gameData.player.id]\r\n                })\r\n                if (await response) players[_general_init_tw__WEBPACK_IMPORTED_MODULE_1__.gameData.player.id] = await response\r\n                let repeat = players[ _general_init_tw__WEBPACK_IMPORTED_MODULE_1__.gameData.player.id ].schedules[ nextKeyCommand ].repeat\r\n                let mode = players[ _general_init_tw__WEBPACK_IMPORTED_MODULE_1__.gameData.player.id ].schedules[ nextKeyCommand ].mode\r\n                if ( mode != \"delay\" && repeat == \"00:00:00\" ) {\r\n                    let villageID = players[ _general_init_tw__WEBPACK_IMPORTED_MODULE_1__.gameData.player.id ].schedules[ nextKeyCommand ].villageID\r\n                    let target = players[ _general_init_tw__WEBPACK_IMPORTED_MODULE_1__.gameData.player.id ].schedules[ nextKeyCommand ].target\r\n                    response = await delayCommand( villageID, target, nextKeyCommand )\r\n                    if (await response) players[_general_init_tw__WEBPACK_IMPORTED_MODULE_1__.gameData.player.id] = await response\r\n                    nextKeyCommand = await returnKeyNextCommand()\r\n                    if ( nextKeyCommand != nextKey ) {\r\n                        nextKey = nextKeyCommand\r\n                        status = Number( players[ _general_init_tw__WEBPACK_IMPORTED_MODULE_1__.gameData.player.id ].schedules[ nextKey ].status )\r\n                        timer = parseInt(( nextKey -  numDateTimeNow ) / 1000 )\r\n                    }\r\n                }\r\n            }\r\n\r\n            // --- engatilha e envia comandos\r\n            if ( status == 2 && ( (0,_general_init_tw__WEBPACK_IMPORTED_MODULE_1__.verifyCurrentScreen)(\"place\") && document.querySelector(\"#command-data-form\") ) && nextKeyCommand - numDateTimeNow <= 0 ) {\r\n                response = await (0,_components_components__WEBPACK_IMPORTED_MODULE_5__.statusGo)( \"command\" )\r\n                if ( await response) players[_general_init_tw__WEBPACK_IMPORTED_MODULE_1__.gameData.player.id] = await response\r\n                console.log( 'Running scheduled command...' )\r\n                let target = players[ _general_init_tw__WEBPACK_IMPORTED_MODULE_1__.gameData.player.id ].schedules[ nextKey ].target\r\n                let template = players[ _general_init_tw__WEBPACK_IMPORTED_MODULE_1__.gameData.player.id ].schedules[ nextKey ].template\r\n                let type = players[ _general_init_tw__WEBPACK_IMPORTED_MODULE_1__.gameData.player.id ].schedules[ nextKey ].type\r\n                let build = players[ _general_init_tw__WEBPACK_IMPORTED_MODULE_1__.gameData.player.id ].schedules[ nextKey ].build\r\n                let date = players[ _general_init_tw__WEBPACK_IMPORTED_MODULE_1__.gameData.player.id ].schedules[ nextKey ].date\r\n                let time = players[ _general_init_tw__WEBPACK_IMPORTED_MODULE_1__.gameData.player.id ].schedules[ nextKey ].time\r\n                let ms = players[ _general_init_tw__WEBPACK_IMPORTED_MODULE_1__.gameData.player.id ].schedules[ nextKey ].ms\r\n                let mode = players[ _general_init_tw__WEBPACK_IMPORTED_MODULE_1__.gameData.player.id ].schedules[ nextKey ].mode\r\n                let travel = players[ _general_init_tw__WEBPACK_IMPORTED_MODULE_1__.gameData.player.id ].schedules[ nextKey ].travel\r\n                let repeat = players[ _general_init_tw__WEBPACK_IMPORTED_MODULE_1__.gameData.player.id ].schedules[ nextKey ].repeat\r\n                if ( (0,_general_util__WEBPACK_IMPORTED_MODULE_3__.nDateTime)(date, time, ms) <= numDateTimeNow ) {\r\n                    if ([0].indexOf(type) != 1) { // --- Cancela ataques e nobres\r\n                        response = await deleteSchedule( nextKey )  // del\r\n                        if ( await response ) players[_general_init_tw__WEBPACK_IMPORTED_MODULE_1__.gameData.player.id] = await response\r\n                        doSomething()\r\n                        return\r\n                    }\r\n                }\r\n                // --- engatilhado - aguarda até a hora de enviar o comando\r\n                if ( (0,_general_init_tw__WEBPACK_IMPORTED_MODULE_1__.placeTryConfirm)() && !(0,_general_init_tw__WEBPACK_IMPORTED_MODULE_1__.placeCommand)() ) {\r\n                    (0,_components_notification__WEBPACK_IMPORTED_MODULE_10__.printTimer)(-1)\r\n                    printMsg(`${mode == \"delay\" ? \"Enviando cálculo de delay \" : \"Enviando comando \"}${repeat != \"00:00:00\" ? \"- Farm Player -\" : \"- Saída: \" }${date} ${time}:${ms} - Aguarde...`)\r\n                    response = await changeScheduleStatus( nextKey, 1 )  // 1 - marca para ser excluido\r\n                    if ( await response ) players[_general_init_tw__WEBPACK_IMPORTED_MODULE_1__.gameData.player.id] = await response\r\n                    // --- quando for nobre preenche os ataques\r\n                    if ( Number( type ) > 1 && Number( type ) < 6 ) {\r\n                        let trainButton = document.querySelector( \"#troop_confirm_train\" )\r\n                        for ( let i = 1; i < Number( type ); i++ ) {\r\n                            setTimeout(() => trainButton.click(), (0,_general_util__WEBPACK_IMPORTED_MODULE_3__.random)( 200, 500 ) + (0,_general_util__WEBPACK_IMPORTED_MODULE_3__.setMillis)( 100 ) )\r\n                        }\r\n                    }\r\n                    // --- seleciona o alvo da catapulta\r\n                    if ( document.querySelector(\"#place_confirm_catapult_target select\") ) document.querySelector(\"#place_confirm_catapult_target select\").value = build\r\n                    // --- salva os dados do comando para calcular delay\r\n                    let td_travel = Array.from(document.querySelectorAll(\"#command-data-form table.vis\"))[0].innerText.match(/[0-9]{1,2}[:]{1}[0-9]{2}[:]{1}[0-9]{2}/ig)[0]\r\n                    // --- farm player\r\n                    if ( type == 7 ) {\r\n                        response = await (0,_schedules__WEBPACK_IMPORTED_MODULE_6__.saveSchedules)( numDateTimeNow + ( (0,_general_util__WEBPACK_IMPORTED_MODULE_3__.strTimeToSec)( repeat ) * 1000 ) + (0,_general_util__WEBPACK_IMPORTED_MODULE_3__.random)( 1000, 5000 ), _general_init_tw__WEBPACK_IMPORTED_MODULE_1__.gameData.village.id, _general_init_tw__WEBPACK_IMPORTED_MODULE_1__.gameData.screen, mode, ms, target, type, template, build, travel, repeat )\r\n                        if ( await response) players[_general_init_tw__WEBPACK_IMPORTED_MODULE_1__.gameData.player.id] = await response\r\n                    }\r\n                    const dTmTmode = [ (0,_general_util__WEBPACK_IMPORTED_MODULE_3__.nDateTime)( date, time, ms ) + ( (0,_general_util__WEBPACK_IMPORTED_MODULE_3__.cTimeToSeg)( td_travel ) * 1000 ), mode ]\r\n                    await (0,_general_util__WEBPACK_IMPORTED_MODULE_3__.setStorage)(\"GO#dTmTmode\", dTmTmode)\r\n    \r\n                    // --- Enviar o comando\r\n                    _Senders_SenderSchedules__WEBPACK_IMPORTED_MODULE_7__.CommandSenderSchedules.init( [date, time, ms] )\r\n                // --- engatilhando - preenche unidades e confirma o comando\r\n                } else if ((0,_general_init_tw__WEBPACK_IMPORTED_MODULE_1__.placeCommand)() && !(0,_general_init_tw__WEBPACK_IMPORTED_MODULE_1__.placeTryConfirm)()){\r\n                    printMsg(\"Aguardando para engatilhar o comando...\")\r\n                    let tab_tr = document.querySelector( \"#command-data-form > table > tbody > tr\" )\r\n                    let units_name = Array.from( tab_tr.querySelectorAll( \"input.unitsInput\" ) ).map(( e, i, a ) => e.name )\r\n                    let units_input = Array.from( tab_tr.querySelectorAll( \"input.unitsInput\" ) )\r\n                    let units_max = Array.from( tab_tr.querySelectorAll( \"a.units-entry-all\" ) ).map( ( e, i, a ) => e.innerHTML.match(/\\d+/)[0] )\r\n                    let target_input = document.querySelector( \"#place_target > input\" )\r\n                    let btns = { \"attack\" : document.querySelector( \"#target_attack\" ), \"support\" : document.querySelector( \"#target_support\" ) }\r\n                    // --- preenche as unidaes\r\n                    for ( let i = 0; i < units_input.length; i++ ) {\r\n                        if ( template[ units_name[ i ] ] == 'all' ) {\r\n                            units_input[ i ].value = units_max[ i ]\r\n                        } else {\r\n                            if ( template[ units_name[ i ] ] > units_max[ i ] ) {\r\n                                units_input[ i ].value = units_max[ i ]\r\n                            } else {\r\n                                units_input[ i ].value = template[ units_name[ i ] ]\r\n                            }\r\n                        }\r\n                    }\r\n                    target_input.value = `${ target[0] }|${ target[1] }`\r\n                    // --- engatilha o comando\r\n                    btns[ type == 1 || type == 6 ? \"support\" : \"attack\" ].click()\r\n                    btns[ type == 1 || type == 6 ? \"support\" : \"attack\" ].click()\r\n                    // --- se houve um erro ao enviar o comando\r\n                    if ( document.querySelector(\"#content_value > div.error_box > div\") ) {\r\n                        // --- farm player\r\n                        if ( type == 7 ) {\r\n                            response = await (0,_schedules__WEBPACK_IMPORTED_MODULE_6__.saveSchedules)( nextKey * 1 + ( (0,_general_util__WEBPACK_IMPORTED_MODULE_3__.strTimeToSec)( repeat ) * 1000 ) + (0,_general_util__WEBPACK_IMPORTED_MODULE_3__.random)( 1000, 5000 ), _general_init_tw__WEBPACK_IMPORTED_MODULE_1__.gameData.village.id, _general_init_tw__WEBPACK_IMPORTED_MODULE_1__.gameData.screen, mode, ms, target, type, template, build, travel, repeat )\r\n                            if ( await response ) players[_general_init_tw__WEBPACK_IMPORTED_MODULE_1__.gameData.player.id] = await response\r\n                        }\r\n                        response = await deleteSchedule( nextKey )  // del\r\n                        if ( await response ) players[_general_init_tw__WEBPACK_IMPORTED_MODULE_1__.gameData.player.id] = await response\r\n                    }\r\n                }\r\n            } else {\r\n                let scr_p = players[ _general_init_tw__WEBPACK_IMPORTED_MODULE_1__.gameData.player.id ].schedules[ nextKey ].screen\r\n                let id = players[ _general_init_tw__WEBPACK_IMPORTED_MODULE_1__.gameData.player.id ].schedules[ nextKey ].villageID\r\n                if ( status == 2 && nextKeyCommand - numDateTimeNow <= 25 * 1000 && !document.querySelector(\"#command-data-form\") ) {\r\n                    self.location = (0,_general_init_tw__WEBPACK_IMPORTED_MODULE_1__.link_ir_aldeia)( id,  scr_p )\r\n                } else {\r\n                    console.log( 'Waiting for scheduled event...' )\r\n                    await activetedOnOff( timer, id, scr_p, nextKey )\r\n                }\r\n            }\r\n        }\r\n        async function sche_e() {\r\n            let players_ = await (0,_general_init_tw__WEBPACK_IMPORTED_MODULE_1__.getPlayers)().then((players, error)=>{\r\n                if (error) throw error\r\n                if (!players) return false\r\n                return players[_general_init_tw__WEBPACK_IMPORTED_MODULE_1__.gameData.player.id]\r\n            })\r\n            if (await players_) players[_general_init_tw__WEBPACK_IMPORTED_MODULE_1__.gameData.player.id] = players_\r\n            const ids = players[ _general_init_tw__WEBPACK_IMPORTED_MODULE_1__.gameData.player.id ].villageIDs\r\n            const schedules = players[ _general_init_tw__WEBPACK_IMPORTED_MODULE_1__.gameData.player.id ].schedules\r\n            const schedulesKeys = Object.keys( schedules ).sort()\r\n            const sche_e = {}\r\n            for ( let i = 0; i < ids.length; i++ ) {\r\n                sche_e[ids[i]] = []\r\n                for ( const key in schedulesKeys ) {\r\n                    if ( schedules[ schedulesKeys[ key ] ].villageID  == ids[ i ] ) {\r\n                        sche_e[ ids[ i ] ].push( schedules[ schedulesKeys[ key ] ].screen)\r\n                    }\r\n                }\r\n            }\r\n            return sche_e\r\n        }\r\n        async function idle_e( sche_e ) {\r\n            let players_ = await (0,_general_init_tw__WEBPACK_IMPORTED_MODULE_1__.getPlayers)().then((players, error)=>{\r\n                if (error) throw error\r\n                if (!players) return false\r\n                return players[_general_init_tw__WEBPACK_IMPORTED_MODULE_1__.gameData.player.id]\r\n            })\r\n            if (await players_) players[_general_init_tw__WEBPACK_IMPORTED_MODULE_1__.gameData.player.id] = players_\r\n            const arrScreens = _general_init_tw__WEBPACK_IMPORTED_MODULE_1__.screens\r\n            const ids = players[ _general_init_tw__WEBPACK_IMPORTED_MODULE_1__.gameData.player.id ].villageIDs\r\n            const idle_e = {}\r\n            for ( let i = 0; i < ids.length; i ++ ) {\r\n                idle_e[ ids[ i ] ] = []\r\n            }\r\n            for ( let i = 0; i < arrScreens.length; i++ ) {\r\n                for ( let key in sche_e ) {\r\n                    if ( sche_e[ key ].indexOf( arrScreens[ i ] ) == -1 ) idle_e[ key ].push( arrScreens[ i ] )\r\n                }\r\n            }\r\n            return idle_e\r\n        }\r\n        async function deleteScheduleAll() {\r\n            let players_ = await (0,_general_init_tw__WEBPACK_IMPORTED_MODULE_1__.getPlayers)().then((players, error)=>{\r\n                if (error) throw error\r\n                if (!players) return false\r\n                return players[_general_init_tw__WEBPACK_IMPORTED_MODULE_1__.gameData.player.id]\r\n            })\r\n            if (await players_) players[_general_init_tw__WEBPACK_IMPORTED_MODULE_1__.gameData.player.id] = players_\r\n            const arrScreens = _general_init_tw__WEBPACK_IMPORTED_MODULE_1__.screens\r\n            const villages = players[ _general_init_tw__WEBPACK_IMPORTED_MODULE_1__.gameData.player.id ].villages\r\n            const schedules = players[ _general_init_tw__WEBPACK_IMPORTED_MODULE_1__.gameData.player.id ].schedules\r\n            const keys_del = []\r\n            // --- marca para excluir e salva os ids na keys_del para excluir\r\n            for (const key in schedules) {\r\n                if (Object.hasOwnProperty.call(schedules, key)) {\r\n                    // --- exclui programação de villas nobladas\r\n                    if ( !villages[ schedules[ key ].villageID ] ) {\r\n                        schedules[ key ].status = 1\r\n                    } else {\r\n                        if ( !villages[ schedules[ key ].villageID ].farm && schedules[ key ].screen == arrScreens[ 0 ] ) schedules[ key ].status = 1\r\n                        if ( !villages[ schedules[ key ].villageID ].main && schedules[ key ].screen == arrScreens[ 1 ] ) schedules[ key ].status = 1\r\n                        if ( !villages[ schedules[ key ].villageID ].train && schedules[ key ].screen == arrScreens[ 2 ] ) schedules[ key ].status = 1\r\n                        if ( !villages[ schedules[ key ].villageID ].scav && schedules[ key ].screen == arrScreens[ 3 ] ) schedules[ key ].status = 1\r\n                    }\r\n                    if ( Number( schedules[ key ].status ) == 1 ) keys_del.push( key )\r\n                    if ( Number( schedules[ key ].status ) == 1 ) console.log( key, schedules[ key ].villageID, schedules[ key ].screen )\r\n                }\r\n            }\r\n            if ( keys_del.length == 0 ) return console.log( 'No events to delete!' )\r\n            for (const key of keys_del) {\r\n                let response = await deleteSchedule( key )\r\n                if (await response) players[_general_init_tw__WEBPACK_IMPORTED_MODULE_1__.gameData.player.id] = await response\r\n            }\r\n            console.log( keys_del.length + ' Events deleted!')\r\n            return await (0,_general_init_tw__WEBPACK_IMPORTED_MODULE_1__.setPlayers)(players).then((players, error) => {\r\n                if (error) throw error\r\n                return players[_general_init_tw__WEBPACK_IMPORTED_MODULE_1__.gameData.player.id]\r\n            })\r\n        }\r\n        async function resolveIdle(obj_idle) {\r\n            let players_ = await (0,_general_init_tw__WEBPACK_IMPORTED_MODULE_1__.getPlayers)().then((players, error)=>{\r\n                if (error) throw error\r\n                if (!players) return false\r\n                return players[_general_init_tw__WEBPACK_IMPORTED_MODULE_1__.gameData.player.id]\r\n            })\r\n            if (await players_) players[_general_init_tw__WEBPACK_IMPORTED_MODULE_1__.gameData.player.id] = players_\r\n            const verifySchedulesVillageIDScreen = async(key, screen) => await (0,_general_init_tw__WEBPACK_IMPORTED_MODULE_1__.getPlayers)().then((players, error)=>{\r\n                if (error) throw error\r\n                if (!players) return false\r\n                const schedules = players[ _general_init_tw__WEBPACK_IMPORTED_MODULE_1__.gameData.player.id ].schedules\r\n                return Object.keys(schedules).filter(e => (\r\n                    schedules[e].villageID == key && schedules[e].screen == screen && schedules[e].type != 1\r\n                )).length > 0\r\n            }).then((resp, error) => error ? false : resp)\r\n            const arrScreens = _general_init_tw__WEBPACK_IMPORTED_MODULE_1__.screens\r\n            const config = players[ _general_init_tw__WEBPACK_IMPORTED_MODULE_1__.gameData.player.id ].configs\r\n            const objReport = {}\r\n            if ( !config.active ) return objReport\r\n            const villages = players[ _general_init_tw__WEBPACK_IMPORTED_MODULE_1__.gameData.player.id ].villages\r\n            const arrFarmDisable = [], arrScavDisable = []\r\n            const arrTrainDisable = [], arrTrainModelo = [], arrtrainPop = []\r\n            const arrMainDisable = [], arrMainModelo = [], arrMainPop = []\r\n            const dateTimeNow = (0,_general_util__WEBPACK_IMPORTED_MODULE_3__.nDateTime)( (0,_general_init_tw__WEBPACK_IMPORTED_MODULE_1__.dateServer)(), (0,_general_init_tw__WEBPACK_IMPORTED_MODULE_1__.timeServer)() )\r\n            let count = 1\r\n            for ( const key in obj_idle ) {\r\n                if ( Object.hasOwnProperty.call( obj_idle, key ) ) {\r\n                    for (let i = 0; i < obj_idle[ key ].length; i++) {\r\n                        // --- marca só uma vez AS desativado\r\n                        if ( obj_idle[ key ][ i ] == arrScreens[ 0 ] && !_general_init_tw__WEBPACK_IMPORTED_MODULE_1__.farm_active ) if ( !objReport['Inativos'] ) objReport['Inativos'] = [ '- Assistente de saque desativado!' ]\r\n                        if ( obj_idle[ key ][ i ] == arrScreens[ 0 ] && _general_init_tw__WEBPACK_IMPORTED_MODULE_1__.farm_active ) {\r\n                            if ( !villages[ key ].farm ) arrFarmDisable.push( key )\r\n                            // if ( villages[ key ].farm ) {\r\n                            //     response = await saveSchedules( dateTimeNow + ( ( ( timer * count ) + season ) * 1000 ), Number( key ), arrScreens[ 0 ] )\r\n                            //     if ( await response ) players[ gameData.player.id ] = await response\r\n                            // }\r\n                        }\r\n                        if ( obj_idle[ key ][ i ] == arrScreens[ 1 ] ) {\r\n                            if ( !villages[ key ].main ) arrMainDisable.push( key )\r\n                            if ( villages[ key ].main && !villages[ key ].modelo ) arrMainModelo.push( key )\r\n                            if ( villages[ key ].main && villages[ key ].modelo ) {\r\n                                if ( !villages[ key ].modelo.main ) arrMainModelo.push( key )\r\n                                if ( villages[ key ].modelo.main && Number( villages[ key ].pop_max ) - Number( villages[ key ].pop ) <= 200 ) arrMainPop.push( key )\r\n                                if ( villages[ key ].modelo.main && Number( villages[ key ].pop_max ) - Number( villages[ key ].pop ) > 200 ) {\r\n                                    let builds = villages[ key ].build\r\n                                    let modelo = villages[ key ].modelo.main\r\n                                    for (const k in modelo) {\r\n                                        if (Object.hasOwnProperty.call(modelo, k)) {\r\n                                            if ( modelo[ k ] > builds[ k ] ) {\r\n                                                if (!await verifySchedulesVillageIDScreen(key, arrScreens[1])) {\r\n                                                    response = await (0,_schedules__WEBPACK_IMPORTED_MODULE_6__.saveSchedules)( dateTimeNow + ( 13 * count  * 1000 ), Number( key ), arrScreens[ 1 ] )\r\n                                                    if ( await response ) players[ _general_init_tw__WEBPACK_IMPORTED_MODULE_1__.gameData.player.id ] = await response\r\n                                                    break\r\n                                                }\r\n                                            }\r\n                                        }\r\n                                    }\r\n                                }\r\n                            }\r\n                        }\r\n                        if ( obj_idle[ key ][ i ] == arrScreens[ 2 ] ) {\r\n                            if ( !villages[ key ].train ) arrTrainDisable.push( key )\r\n                            if ( villages[ key ].train && !villages[ key ].modelo ) arrTrainModelo.push( key )\r\n                            if ( villages[ key ].train && villages[ key ].modelo ) {\r\n                                if ( !villages[ key ].modelo.train ) arrTrainModelo.push( key )\r\n                                if ( villages[ key ].modelo.train && Number( villages[ key ].pop_max ) - Number( villages[ key ].pop ) <= 8 ) arrtrainPop.push( key )\r\n                                if ( villages[ key ].modelo.train && Number( villages[ key ].pop_max ) - Number( villages[ key ].pop ) > 8 ) {\r\n                                    //let modelo = villages[ key ].modelo.train\r\n                                    //let units = villages[ key ].units[2]\r\n                                    if (!await verifySchedulesVillageIDScreen(key, arrScreens[2])) {\r\n                                        response = await (0,_schedules__WEBPACK_IMPORTED_MODULE_6__.saveSchedules)( dateTimeNow + ( 13* count * 1000 ), Number( key ), arrScreens[ 2 ] )\r\n                                        if ( await response ) players[ _general_init_tw__WEBPACK_IMPORTED_MODULE_1__.gameData.player.id ] = await response\r\n                                    }\r\n                                }\r\n                            }\r\n                        }\r\n                        if ( obj_idle[ key ][ i ] == arrScreens[ 3 ] && _general_init_tw__WEBPACK_IMPORTED_MODULE_1__.scav_active ) {\r\n                            if ( !villages[ key ].scav ) arrScavDisable.push( key )\r\n                            if ( villages[ key ].scav ) {\r\n                                if (!await verifySchedulesVillageIDScreen(key, arrScreens[3])) {\r\n                                    response = await (0,_schedules__WEBPACK_IMPORTED_MODULE_6__.saveSchedules)( dateTimeNow + ( 13 * count * 1000 ), Number( key ), arrScreens[ 3 ] )\r\n                                    if ( await response ) players[_general_init_tw__WEBPACK_IMPORTED_MODULE_1__.gameData.player.id] = await response\r\n                                }\r\n                            }\r\n                        }\r\n                        count++\r\n                    }\r\n                }\r\n            }\r\n            if ( arrFarmDisable.length > 0 ) objReport['farmDisable'] = arrFarmDisable\r\n            if ( arrScavDisable.length > 0 ) objReport['ScavDisable'] = arrScavDisable\r\n            if ( arrMainDisable.length > 0 ) objReport['MainDisable'] = arrMainDisable\r\n            if ( arrMainModelo.length > 0 ) objReport['MainModelo'] = arrMainModelo\r\n            if ( arrMainPop.length > 0 ) objReport['MainPop'] = arrMainPop\r\n            if ( arrTrainDisable.length > 0 ) objReport['TrainDisable'] = arrTrainDisable\r\n            if ( arrTrainModelo.length > 0 ) objReport['TrainModelo'] = arrTrainModelo\r\n            if ( arrtrainPop.length > 0 ) objReport['TrainPop'] = arrtrainPop\r\n            console.table( objReport )\r\n            return objReport\r\n        }\r\n        function printMsg(msg) {\r\n            if (document.querySelector(\"#print-msg\")) {\r\n                document.querySelector(\"#print-msg\").textContent = msg\r\n            }\r\n        }\r\n    }).then(async(res, err)=> {\r\n        if (err) {\r\n            _components_printMessage__WEBPACK_IMPORTED_MODULE_9__.printMessage.error(`ERROR: There was a \"read error\". Please wait reload the script.\r\n            If the error persists, contact your dealer.`, 3000)\r\n            await (0,_general_util__WEBPACK_IMPORTED_MODULE_3__.sleep)(5)\r\n            return self.location.reload()\r\n        }\r\n    })\r\n}\r\n/**\r\n * Configurações de timer do Let's Go\r\n * @returns\r\n */\r\nasync function SettingsGo() {\r\n    if ( _general_init_tw__WEBPACK_IMPORTED_MODULE_1__.gameData.screen == \"settings\" && !_general_init_tw__WEBPACK_IMPORTED_MODULE_1__.gameData.mode || _general_init_tw__WEBPACK_IMPORTED_MODULE_1__.gameData.mode == \"settings\" ) {\r\n        if ( !document.querySelector(\"#content_value > table > tbody > tr > td:nth-child(2)\") ) return\r\n        await (0,_general_init_tw__WEBPACK_IMPORTED_MODULE_1__.getPlayers)().then((players, error) => {\r\n            if (error) throw error\r\n            const configs = players[_general_init_tw__WEBPACK_IMPORTED_MODULE_1__.gameData.player.id].configs\r\n            const newElem = document.createElement('div')\r\n            document.querySelector(\"#content_value > table > tbody > tr > td:nth-child(2)\").prepend( newElem )\r\n            let html = `<h3>Let's Go! - Configurações Gerais</h3><div class=\"info_box\"><p>Let's Go! foi programado para jogar com vc! Para utilizá-lo você não precisa e nem deve abrir várias abas do navegador, ele irá navegar hora certa aonde precisa e, se passar da hora, irá executar as tarefas assim que for possível. Não se preocupe. É boa prática não abusar de sua utilização evitando problemas. Para não atrapalhar a sua jogabilidade, Let's Go! vem ajustado com tempos de pausa para diversas paginas do jogo que vc navega. Isso é proposital, se por acaso você deixar sair e deixar o jogo no fórum, por exemplo, depois desse tempo Let's Go! volta a executar suas tarefas! Caso sinta nescessidade você pode alterar esses tempos abaixo:</p></div><table class =\"vis settings\" style=\"width: 100%;\"><tbody><tr><th colspan=\"5\"> Configurações - Pausas de min: 30s / max: 600s ( segundos )</th></tr>`\r\n            html += `<tr><td><label for=\"timer_overview\"><input type=\"number\" id=\"timer_overview\" min=\"30\" max=\"600\" maxlength=\"4\" style=\"width: 42px;\" value=\"\" autofocus> Visualizações</label></td><td><label for=\"timer_map\"><input type=\"number\" id=\"timer_map\" min=\"30\" max=\"600\" maxlength=\"4\" style=\"width: 42px;\" value=\"\" > Mapa</label><td><td><label for=\"timer_report\"><input type=\"number\" id=\"timer_report\" min=\"30\" max=\"600\" maxlength=\"4\" style=\"width: 42px;\" value=\"\" > Relatórios</label></td><td><label for=\"timer_mail\"><input type=\"number\" id=\"timer_mail\" min=\"30\" max=\"600\" maxlength=\"4\" style=\"width: 42px;\" value=\"\" > Mensagens</label></td></tr>`\r\n            html += `<tr><td><label for=\"timer_ranking\"><input type=\"number\" id=\"timer_ranking\" min=\"30\" max=\"600\" maxlength=\"4\" style=\"width: 42px;\" value=\"\" > Classificações</label></td><td><label for=\"timer_ally\"><input type=\"number\" id=\"timer_ally\" min=\"30\" max=\"600\" maxlength=\"4\" style=\"width: 42px;\" value=\"\" > Tribo</label><td><td><label for=\"timer_forum\"><input type=\"number\" id=\"timer_forum\" min=\"30\" max=\"600\" maxlength=\"4\" style=\"width: 42px;\" value=\"\" > Fórum</label></td><td><label for=\"timer_info_player\"><input type=\"number\" id=\"timer_info_player\" min=\"30\" max=\"600\" maxlength=\"4\" style=\"width: 42px;\" value=\"\" > Perfil</label></td></tr>`\r\n            html += `<tr><td><label for=\"timer_mentor\"><input type=\"number\" id=\"timer_mentor\" min=\"30\" max=\"600\" maxlength=\"4\" style=\"width: 42px;\" value=\"\" > Mentor</label></td><td><label for=\"timer_premium\"><input type=\"number\" id=\"timer_premium\" min=\"30\" max=\"600\" maxlength=\"4\" style=\"width: 42px;\" value=\"\" > Premium</label><td><td><label for=\"timer_transfer\"><input type=\"number\" id=\"timer_transfer\" min=\"30\" max=\"600\" maxlength=\"4\" style=\"width: 42px;\" value=\"\" > Transfências Premium</label></td><td><label for=\"timer_settings\"><input type=\"number\" id=\"timer_settings\" min=\"30\" max=\"600\" maxlength=\"4\" style=\"width: 42px;\" value=\"\" > Configurações</label></td></tr>`\r\n            html += `<tr><td><label for=\"timer_market\"><input type=\"number\" id=\"timer_market\" min=\"30\" max=\"600\" maxlength=\"4\" style=\"width: 42px;\" value=\"\" > Mercado</label></td><td><label for=\"timer_place\"><input type=\"number\" id=\"timer_place\" min=\"30\" max=\"600\" maxlength=\"4\" style=\"width: 42px;\" value=\"\" > Praça de reunião</label><td><td><label for=\"timer_command\"><input type=\"number\" id=\"timer_command\" min=\"30\" max=\"600\" maxlength=\"4\" style=\"width: 42px;\" value=\"\" > Comandos</label></td><td><label for=\"timer_event\"><input type=\"number\" id=\"timer_event\" min=\"30\" max=\"600\" maxlength=\"4\" style=\"width: 42px;\" value=\"\" > Eventos</label></td></tr><tr><td colspan=\"5\"><input id=\"btn_go_config\" class=\"btn\" style=\"margin: 4px\" type=\"\" value=\"Salvar Mudanças\"></td></tr></tbody></table>`\r\n            newElem.innerHTML = html\r\n            document.querySelector(\"#timer_overview\").value = Number(configs.overview)\r\n            document.querySelector(\"#timer_map\").value = Number(configs.map)\r\n            document.querySelector(\"#timer_report\").value = Number(configs.report)\r\n            document.querySelector(\"#timer_mail\").value = Number(configs.mail)\r\n            document.querySelector(\"#timer_ranking\").value = Number(configs.ranking)\r\n            document.querySelector(\"#timer_ally\").value = Number(configs.ally)\r\n            document.querySelector(\"#timer_forum\").value = Number(configs.forum)\r\n            document.querySelector(\"#timer_info_player\").value = Number(configs.info_player)\r\n            document.querySelector(\"#timer_mentor\").value = Number(configs.mentor)\r\n            document.querySelector(\"#timer_premium\").value = Number(configs.premium)\r\n            document.querySelector(\"#timer_transfer\").value = Number(configs.transfer)\r\n            document.querySelector(\"#timer_settings\").value = Number(configs.settings)\r\n            document.querySelector(\"#timer_market\").value = Number(configs.market)\r\n            document.querySelector(\"#timer_place\").value = Number(configs.place)\r\n            document.querySelector(\"#timer_command\").value = Number(configs.place_command)\r\n            document.querySelector(\"#timer_event\").value = Number(configs.event)\r\n            document.querySelector(\"#btn_go_config\").addEventListener('click', async () => {\r\n                configs.overview = document.querySelector(\"#timer_overview\").value\r\n                configs.map = document.querySelector(\"#timer_map\").value\r\n                configs.report = document.querySelector(\"#timer_report\").value\r\n                configs.mail = document.querySelector(\"#timer_mail\").value\r\n                configs.ranking = document.querySelector(\"#timer_ranking\").value\r\n                configs.ally = document.querySelector(\"#timer_ally\").value\r\n                configs.forum = document.querySelector(\"#timer_forum\").value\r\n                configs.info_player = document.querySelector(\"#timer_info_player\").value\r\n                configs.mentor = document.querySelector(\"#timer_mentor\").value\r\n                configs.premium = document.querySelector(\"#timer_premium\").value\r\n                configs.transfer = document.querySelector(\"#timer_transfer\").value\r\n                configs.settings = document.querySelector(\"#timer_settings\").value\r\n                configs.market = document.querySelector(\"#timer_market\").value\r\n                configs.place = document.querySelector(\"#timer_place\").value\r\n                configs.place_command = document.querySelector(\"#timer_command\").value\r\n                configs.event = document.querySelector(\"#timer_event\").value\r\n                players[_general_init_tw__WEBPACK_IMPORTED_MODULE_1__.gameData.player.id].configs = configs\r\n                await (0,_general_init_tw__WEBPACK_IMPORTED_MODULE_1__.setPlayers)(players).then((response, error) => error ? error : _components_printMessage__WEBPACK_IMPORTED_MODULE_9__.printMessage.success( `Let's Go! - Configurações salvas!`, 2000 ))\r\n            })\r\n        })\r\n    }\r\n}\r\nasync function overviewInterface() {\r\n    if ( !_general_init_tw__WEBPACK_IMPORTED_MODULE_1__.gameData.mode ) {\r\n        await (0,_general_init_tw__WEBPACK_IMPORTED_MODULE_1__.getPlayers)().then( async (players, error) => {\r\n            if (error) throw error\r\n            const village = players[ _general_init_tw__WEBPACK_IMPORTED_MODULE_1__.gameData.player.id ].villages[ _general_init_tw__WEBPACK_IMPORTED_MODULE_1__.gameData.village.id ]\r\n            const objScreens = (0,_general_init_tw__WEBPACK_IMPORTED_MODULE_1__.returnObjScrens)()\r\n            ;(0,_components_components__WEBPACK_IMPORTED_MODULE_5__.insert_toggle)()\r\n            const showConfig = document.createElement( 'div' )\r\n            document.querySelector(\"#rightcolumn\").prepend(showConfig)\r\n            showConfig.id = \"show_config\"\r\n            showConfig.className = \"vis moveable widget \"\r\n            showConfig.innerHTML = `<h4 class=\"head with-button ui-sortable-handle\"><img class=\"widget-button\" onclick=\"return VillageOverview.toggleWidget( 'show_config', this );\" src=\"graphic/minus.png\">\t\tLet's Go - Configuração</h4><div class=\"widget_content\" style=\"display: block;\"><table id=\"tab_config\"  width=\" 100%\"><tbody></tbody></table><div style=\"margin: 3px;\" ><a href=\"/game.php?village=${ _general_init_tw__WEBPACK_IMPORTED_MODULE_1__.gameData.village.id }&amp;screen=overview_villages\" title=\"Ativar/desativar de todas as aldeias\">» configurar todas</a><div></div>`\r\n            const tBodtTabConfig = document.querySelector(\"#tab_config > tbody\")\r\n            function check_on_of(check, txt, col1) {\r\n                check.checked ? txt.textContent = \" on\" : txt.textContent = \" off\"\r\n                check.checked ? col1.style.color = \"#13bf11\" : col1.style.color = \"red\"\r\n            }\r\n            async function replace_menu( villa_c, screen_c, text_c, src_c ) {\r\n                const newTr = document.createElement('tr')\r\n                tBodtTabConfig.appendChild( newTr )\r\n                newTr.innerHTML = `<td><input id=\"active_${ screen_c }\" class=\"toggle\" type=\"checkbox\" checked><label id=\"ofn_${ screen_c }\" for=\"active_${ screen_c }\" style=\"color: #13bf11;\"> on</label></td><td><label id=\"lb_${ screen_c }\" title=\"Ativar/desativar auto-${  text_c.toLowerCase() } desta aldeia\" for=\"active_${ screen_c }\" \"><img src=\"${ src_c }\" style=\"font-size: 10pt;\" > ${ text_c }</label></td>`\r\n                document.querySelector(`#active_${ screen_c }`).checked = !village ? true : villa_c ? true : villa_c\r\n                check_on_of( document.querySelector(`#active_${ screen_c }`), document.querySelector(`#ofn_${ screen_c }`), document.querySelector(`#ofn_${ screen_c }`) )\r\n                document.querySelector(`#active_${ screen_c }`).addEventListener('click', async () => {\r\n                    check_on_of( document.querySelector(`#active_${ screen_c }`), document.querySelector(`#ofn_${ screen_c }`), document.querySelector(`#ofn_${ screen_c }`) )\r\n                    await save_menu_c( document.querySelector(`#active_${ screen_c }`).checked, screen_c )\r\n                })\r\n            }\r\n            async function save_menu_c( check, screen_c ) {\r\n                village[screen_c] = check\r\n                await (0,_general_init_tw__WEBPACK_IMPORTED_MODULE_1__.getPlayers)().then( async(players, error) => {\r\n                    if (error) throw error\r\n                    players[ _general_init_tw__WEBPACK_IMPORTED_MODULE_1__.gameData.player.id ].villages[ _general_init_tw__WEBPACK_IMPORTED_MODULE_1__.gameData.village.id ] = village\r\n                    await (0,_general_init_tw__WEBPACK_IMPORTED_MODULE_1__.setPlayers)(players)\r\n                })\r\n            }\r\n            const arrScreen = Object.keys(objScreens)\r\n            arrScreen.forEach( screen => {\r\n                if ( objScreens[screen].active ) replace_menu( !village ? true : village[screen], screen, objScreens[screen].title, objScreens[screen].img )\r\n            })\r\n        })\r\n    }\r\n}\r\nasync function overviewVillagesInterface() {\r\n    if ( ( _general_init_tw__WEBPACK_IMPORTED_MODULE_1__.screen_atual == 'overview_villages&intro' ) ) {\r\n        await (0,_general_util_tw__WEBPACK_IMPORTED_MODULE_4__.daily_bonus)()\r\n        return\r\n    }\r\n    if ((0,_general_init_tw__WEBPACK_IMPORTED_MODULE_1__.verifyCurrentScreen)('overview_villages')) {\r\n        if (!document.querySelector( \"#production_table\" )) return\r\n        await (0,_general_init_tw__WEBPACK_IMPORTED_MODULE_1__.getPlayers)().then((players, error) => {\r\n            if (error) throw error\r\n            const objScreens = (0,_general_init_tw__WEBPACK_IMPORTED_MODULE_1__.returnObjScrens)()\r\n            const villages = players[ _general_init_tw__WEBPACK_IMPORTED_MODULE_1__.gameData.player.id ].villages\r\n            const table = document.querySelector( \"#production_table\" )\r\n            const thead = table.querySelector( \"thead tr\")\r\n            const trs = Array.from( table.querySelectorAll( \"tr.nowrap\" ) )\r\n            const ids = Array.from( table.querySelectorAll( 'span.quickedit-vn' ) ).map( ( e, i, a ) => e.dataset.id  )\r\n            for ( let i = 0; i < ids.length; i++ ) {\r\n                let arrScr = Object.keys( objScreens )\r\n                for ( const ind of arrScr ) {\r\n                    if ( objScreens[ ind ].active ) {\r\n                        console.log( trs[ i ] , ids[ i ], villages[ ids[ i ] ][ ind ] == undefined ? true : villages[ ids[ i ] ][ ind ] , ind, objScreens[ ind ].title )\r\n                        repl_check( trs[ i ] , ids[ i ], villages[ ids[ i ] ][ ind ] == undefined ? true : villages[ ids[ i ] ][ ind ] , ind, objScreens[ ind ].title )\r\n                    }\r\n                }\r\n            }\r\n            const th = document.createElement( 'th' )\r\n\r\n            th.innerHTML = `<a href=\"\"><img src=\"https://dsbr.innogamescdn.com/asset/f0f06311/graphic//buildings/main.png\"></a><a href=\"\"><img src=\"https://dsbr.innogamescdn.com/asset/f0f06311/graphic//buildings/barracks.png\"></a><label id=\"lb_mod_all\" title=\"Selecionar todas \r\n aldeias\" for=\"active_mod_all\" \"></label><input id=\"active_mod_all\" type=\"checkbox\" checked></th>`\r\n            for ( const key in objScreens ) {\r\n                if (Object.hasOwnProperty.call( objScreens, key ) ) {\r\n                    const th = document.createElement( 'th' )\r\n                    if ( objScreens[key].active ) {\r\n                        thead.appendChild( th )\r\n                        const html_th = `<label id=\"lb_${ key }_all\" title=\"Ativar/Desativar Auto-${ objScreens[key].title } de todas aldeias\" for=\"active_${ key }_all\" \"><img src=\"${ objScreens[key].img }\"></label><input id=\"active_${ key }_all\" type=\"checkbox\" checked>`\r\n                        th.innerHTML = html_th\r\n                        document.querySelector( `#active_${ key }_all` ).checked = parseInt( count_on( key ) / trs.length ) * 100 > 50 ? true : false\r\n                        console.log( count_on( key ) )\r\n                        document.querySelector( `#active_${ key }_all` ).addEventListener('click', async () => {\r\n                            for (let i = 0; i < ids.length; i++) {\r\n                                trs[ i ].querySelector(`#active_${ key }`).checked = document.querySelector( `#active_${ key }_all` ).checked\r\n                                villages[ ids[i] ][ key ] = document.querySelector( `#active_${ key }_all` ).checked\r\n                            }\r\n                            await saveCheckBox(villages)\r\n                        })\r\n                    }\r\n                }\r\n            }\r\n            function count_on( scr ) {\r\n                let count = 0\r\n                for ( const id of ids ) {\r\n                    count += villages[ id ][ scr ] ? 1 : 0\r\n                }\r\n                return count\r\n            }\r\n            function repl_check( tr, id, check, scr , title ) {\r\n                const td = document.createElement( 'td' )\r\n                const html_td = `<input id=\"active_${ scr }\" data-id=\"${ id }\" type=\"checkbox\" title=\"Ativar/Desativar Auto-${ title } desta aldeia\" checked>`\r\n                tr.appendChild( td )\r\n                td.innerHTML = html_td\r\n                td.querySelector(`input`).checked = check\r\n                td.querySelector(`input`).addEventListener('click', async() => {\r\n                    villages[ id ][ scr ] = td.querySelector(`input`).checked\r\n                    const th = document.querySelector( `#active_${ scr }_all` )\r\n                    th.checked = parseInt( count_on( scr ) / trs.length ) * 100 > 50 ? true : false\r\n                    console.log( 'on:' + ( parseInt( count_on( scr ) / trs.length ) * 100 ) )\r\n                    await saveCheckBox(villages)\r\n                })\r\n            }\r\n        })\r\n        async function saveCheckBox(villages) {\r\n            await (0,_general_init_tw__WEBPACK_IMPORTED_MODULE_1__.getPlayers)().then( async(players, error) => {\r\n                if (error) throw error\r\n                players[ _general_init_tw__WEBPACK_IMPORTED_MODULE_1__.gameData.player.id ].villages = villages\r\n                await (0,_general_init_tw__WEBPACK_IMPORTED_MODULE_1__.setPlayers)(players)\r\n            })\r\n        }\r\n    }\r\n}\r\n\r\n// --- validação da versão\r\nif ( !(0,_general_version__WEBPACK_IMPORTED_MODULE_0__.returnVersion)() ) {\r\n    alert(\" Que pena!!! Essa versão do Let's Go! expirou... Entre em contato com o fornecedor do APP para receber atualização. Obrigado pela preferência! \")\r\n} else if (!document.querySelector(\"#go-notification\")) {\r\n    console.time( 'Init time' )\r\n    // --- timer\r\n    ;(0,_components_notification__WEBPACK_IMPORTED_MODULE_10__.notification)()\r\n    // --- configurações na visualização geral - interface\r\n    if ( _general_init_tw__WEBPACK_IMPORTED_MODULE_1__.gameData.screen == 'overview' ) overviewInterface()\r\n    // --- configurações - interface\r\n    SettingsGo()\r\n    // --- cria menu e status - interface\r\n    ;(0,_components_components__WEBPACK_IMPORTED_MODULE_5__.jig_status)()\r\n    // ---\r\n    ;(0,_components_components__WEBPACK_IMPORTED_MODULE_5__.toggleOnOff)()\r\n    // ---\r\n    overviewVillagesInterface()\r\n    // --- verifiva quando carregamento foi terminado\r\n    if ( document.readyState === \"loading\" ) {\r\n    \r\n        document.addEventListener( \"DOMContentLoaded\", doSomething )\r\n    \r\n    // DOMContentLoaded foi disparado\r\n    } else {\r\n    \r\n        doSomething()\r\n    \r\n    }\r\n}\r\n\n\n//# sourceURL=webpack://newproject/./TwProjectBot.js?");

/***/ }),

/***/ "./incomings.js":
/*!**********************!*\
  !*** ./incomings.js ***!
  \**********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"incomings\": () => (/* binding */ incomings)\n/* harmony export */ });\n/* harmony import */ var _general_init_tw__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../general/init_tw */ \"../general/init_tw.js\");\n/* harmony import */ var _requests__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./requests */ \"./requests.js\");\n/* harmony import */ var _general_util__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../general/util */ \"../general/util.js\");\n/* harmony import */ var _general_util_tw__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../general/util_tw */ \"../general/util_tw.js\");\n/* harmony import */ var _components_components__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../components/components */ \"../components/components.js\");\n/* harmony import */ var _components_printMessage__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../components/printMessage */ \"../components/printMessage.js\");\n/* harmony import */ var _components_loaderGame__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../components/loaderGame */ \"../components/loaderGame.js\");\n/* harmony import */ var _Main_main_export__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../Main/main-export */ \"../Main/main-export.js\");\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n'use strict'\r\n\r\nclass IncomingsAttaks {\r\n    tagAttacksNotPremium = async () => {\r\n        if ( !_general_init_tw__WEBPACK_IMPORTED_MODULE_0__.premiumActive ) {\r\n            await (0,_general_init_tw__WEBPACK_IMPORTED_MODULE_0__.getPlayers)().then(async(players, error) => {\r\n                if (error) throw error\r\n                const comingAttack = players[ _general_init_tw__WEBPACK_IMPORTED_MODULE_0__.gameData.player.id ].villages[ _general_init_tw__WEBPACK_IMPORTED_MODULE_0__.gameData.village.id ].comingAttack\r\n                if ( comingAttack && document.querySelector(\"#quickedit-rename\") ) {\r\n                    await this.tagQuickedit(comingAttack)\r\n                }\r\n                if ( comingAttack && document.querySelector( \"#commands_incomings\" ) ) {\r\n                    await this.tagCommands(comingAttack)\r\n                }\r\n            })\r\n        }\r\n    }\r\n    tagQuickedit = async function(comingAttack) {\r\n        const elem = document.querySelector(\"#quickedit-rename\")\r\n        const id = elem.dataset.id\r\n        if ( comingAttack[ id ].ticket ) {\r\n            await (0,_components_components__WEBPACK_IMPORTED_MODULE_4__.updatingTicket)( elem, comingAttack[ id ].ticket, (0,_general_util__WEBPACK_IMPORTED_MODULE_2__.setMillis)(250) )\r\n        }\r\n    }\r\n    tagCommands = async function(comingAttack) {\r\n        const rows = Array.from( document.querySelector( \"#commands_incomings\" ).querySelectorAll( 'tr.command-row' ) )\r\n        for (const row of rows) {\r\n        const id = row.querySelector('span.quickedit').dataset.id\r\n            const elem = row.querySelector(\"span.quickedit-label\")\r\n            if (comingAttack[ id ]) {\r\n                if ( comingAttack[ id ].ticket ) {\r\n                    await (0,_components_components__WEBPACK_IMPORTED_MODULE_4__.updatingTicket)( elem, comingAttack[ id ].ticket, (0,_general_util__WEBPACK_IMPORTED_MODULE_2__.setMillis)(250) )\r\n                }\r\n            }\r\n        }\r\n    }\r\n    saveAttackNotPremium = async () => {\r\n        _components_printMessage__WEBPACK_IMPORTED_MODULE_5__.printMessage.warn('Atualizando Ataques! Por favor, Aguarde...', 3000)\r\n        _components_loaderGame__WEBPACK_IMPORTED_MODULE_6__.loaderGame.insert()\r\n        return await (0,_requests__WEBPACK_IMPORTED_MODULE_1__.getRequest)( _general_init_tw__WEBPACK_IMPORTED_MODULE_0__.link_mesma_aldeia, 'overview_villages' ).then((data, error) => {\r\n            if (error) throw error\r\n            return new DOMParser().parseFromString( data, 'text/html')\r\n        }).then(async(html, error) => {\r\n            if (error) throw error\r\n            return Array.from(html.querySelectorAll(\"tr.nowrap\")).map(e => e.querySelector(\"span.quickedit-vn\")).filter(e => !!e.querySelector('img')).map(e=> e.dataset.id)\r\n        }).then(async(arr, error)=>{\r\n            if (error) throw error\r\n            const arrAttackVillagesID = arr\r\n            return await (0,_general_init_tw__WEBPACK_IMPORTED_MODULE_0__.getPlayers)().then((players_, error)=>{\r\n                if (error) throw error\r\n                if (!players_) return false\r\n\r\n                const players = players_\r\n\r\n                if ( arrAttackVillagesID.length == 0 ) return players\r\n\r\n                console.log(`Atacadas: `)\r\n                console.log(arrAttackVillagesID)\r\n                arrAttackVillagesID.forEach(async (id) => {\r\n                    if ( !players[ _general_init_tw__WEBPACK_IMPORTED_MODULE_0__.gameData.player.id ].villages[ id ].comingAttack ) {\r\n                        players[ _general_init_tw__WEBPACK_IMPORTED_MODULE_0__.gameData.player.id ].villages[ id ].comingAttack = {}\r\n                    }\r\n                    const comingAttack = players[ _general_init_tw__WEBPACK_IMPORTED_MODULE_0__.gameData.player.id ].villages[ id ].comingAttack\r\n                    return await (0,_requests__WEBPACK_IMPORTED_MODULE_1__.getRequest)((0,_general_init_tw__WEBPACK_IMPORTED_MODULE_0__.linkGoVillage)(id, ''), 'overview').then((data, error) => error\r\n                        ? error : new DOMParser().parseFromString( data, 'text/html')\r\n                    ).then((html, error) => {\r\n                        if (error) throw error\r\n                        if ( !html.querySelector(\"#commands_incomings\") ) {\r\n                            console.log(`Village without attacks coming. Updating...`)\r\n                            delete players[ _general_init_tw__WEBPACK_IMPORTED_MODULE_0__.gameData.player.id ].villages[id].comingAttack\r\n                        } else {\r\n                            const trCommandRow = Array.from(html.querySelector(\"#commands_incomings\").querySelectorAll(\"tr.command-row\"))\r\n                            return trCommandRow.reduce((arr, e) => {\r\n                                const attID = e.querySelector('span').dataset.id\r\n                                console.log(attID)\r\n                                if (attID) {\r\n                                    if (!comingAttack[attID]) {\r\n                                        console.log(`include attack ID: ${ attID }`)\r\n                                        comingAttack[attID] = {}\r\n                                    }\r\n                                    arr.push(attID)\r\n                                }\r\n                                return arr\r\n                            },[])\r\n                        }\r\n                    }).then(async(arr, error) => {\r\n                        if (error) throw error\r\n                        const arrAttackID = arr\r\n                        console.warn(\"AttackiD: \")\r\n                        console.warn(arrAttackID)\r\n                        let count = 0\r\n                        for ( const key in comingAttack ) {\r\n                            if ( Object.hasOwnProperty.call( comingAttack, key ) ) {\r\n                                if ( arrAttackID.indexOf( key ) == - 1 ) {\r\n                                    console.log( `Deleting attack ID: ${ key }` )\r\n                                    delete comingAttack[ key ]\r\n                                } else if ( !comingAttack[ key ].ticket ) {\r\n                                    console.warn(\"ID: \" + key)\r\n                                    await (0,_requests__WEBPACK_IMPORTED_MODULE_1__.getRequest)((0,_general_init_tw__WEBPACK_IMPORTED_MODULE_0__.linkGoVillage)(id, ''), `info_command&id=${ key }&type=other`).then(async(data, error) => error ? error : \r\n                                        new DOMParser().parseFromString(data, 'text/html')\r\n                                    ).then(async (html, error) => {\r\n                                        if (error) throw error\r\n                                        console.log( `Fetching the data of each attack...` )\r\n                                        const rows = Array.from( html.querySelector( \"#content_value > table.vis > tbody\" ).querySelectorAll( 'tr' ) )\r\n                                        const attacker = Array.from( rows[1].querySelectorAll( 'td' ) )[ rows[1].querySelectorAll( 'td' ).length - 1 ].innerText\r\n                                        console.log( `Attacker: ${ attacker }` )\r\n                                        const attackerID = Array.from( rows[1].querySelectorAll( 'td' ) )[ rows[1].querySelectorAll( 'td' ).length - 1 ].querySelector('a').href.split(\"=\").pop()\r\n                                        console.log( `Attacker ID : ${ attackerID }` )\r\n                                        const attackerCoord = Array.from( rows[2].querySelectorAll( 'td' ) )[ rows[2].querySelectorAll( 'td' ).length - 1 ].innerText.match(/\\d+\\|\\d+/ig)[0]\r\n                                        console.log( `Attaker Coord: ${ attackerCoord }` )\r\n                                        const attackerVillageID = Array.from( rows[2].querySelectorAll( 'td' ) )[ rows[2].querySelectorAll( 'td' ).length - 1 ].querySelector('a').href.split(\"=\").pop()\r\n                                        console.log(`Attacker Village ID: ${attackerVillageID}`)\r\n                                        const defenderCoord = players[_general_init_tw__WEBPACK_IMPORTED_MODULE_0__.gameData.player.id].villages[ id ].coord\r\n                                        console.log(`Defender Coord: ${ defenderCoord }`)\r\n                                        let index = rows.reduce(( ind, e, i) => {\r\n                                            if (e.innerText.match( /[0-9]{2}[:][0-9]{2}[:][0-9]{2}[:][0-9]{3}$/ig)) {\r\n                                                ind = i\r\n                                            }\r\n                                            return ind\r\n                                        }, null)\r\n                                        const arrival = [(0,_general_util_tw__WEBPACK_IMPORTED_MODULE_3__.return_ddmmaaaa)( Array.from( rows[ index ].querySelectorAll( 'td' ) )[ 1 ].innerText.replaceAll(rows[ index ].innerText.match( /[0-9]{2}[:][0-9]{2}[:][0-9]{2}[:][0-9]{3}$/ig ), '' ).trim() ), rows[ index ].innerText.match( /[0-9]{2}[:][0-9]{2}[:][0-9]{2}/ig )[ 0 ], rows[ index ].innerText.match( /[0-9]{3}$/ig )[ 0 ]]\r\n                                        console.warn( `Arrival( Date, Time, ms ): ${arrival}` )\r\n                                        const travelStr = rows[ index + 1 ].querySelectorAll('td')[1].innerText\r\n                                        console.log(`Arrival Time: ${travelStr}`)\r\n                                        const travel = (0,_general_util_tw__WEBPACK_IMPORTED_MODULE_3__.getTravelTimeInSecond)((0,_general_util_tw__WEBPACK_IMPORTED_MODULE_3__.getDistance)(attackerCoord, defenderCoord), (0,_general_util_tw__WEBPACK_IMPORTED_MODULE_3__.findAttackSpeed)(travelStr, attackerCoord, defenderCoord))\r\n                                        console.log(`Time of travel(ms): ${travel}`)\r\n                                        const unitSlower = (0,_general_util_tw__WEBPACK_IMPORTED_MODULE_3__.findAttackSpeed)( travelStr, attackerCoord, defenderCoord );\r\n                                        console.warn(`Slower unit(troop): ${ unitSlower }` )\r\n                                        const ticket = `${unitSlower} | R:${(0,_general_init_tw__WEBPACK_IMPORTED_MODULE_0__.dateServer)().split(\"/\")[0]+\"/\"+(0,_general_init_tw__WEBPACK_IMPORTED_MODULE_0__.dateServer)().split(\"/\")[1]} ${(0,_general_init_tw__WEBPACK_IMPORTED_MODULE_0__.timeServer)()} | Envio:${(0,_general_util_tw__WEBPACK_IMPORTED_MODULE_3__.getLaunchTime)(travel, arrival)} | BackTime:${(0,_general_util_tw__WEBPACK_IMPORTED_MODULE_3__.getBackTime)(travel, arrival)} |`\r\n                                        console.warn(`Ticket : ${ ticket }`)\r\n                                        if ( !comingAttack[ key ].ticket ) {\r\n                                            comingAttack[ key ].ticket = ticket\r\n                                            comingAttack[ key ].attacker = attacker\r\n                                            comingAttack[ key ].attackerID = attackerID\r\n                                            comingAttack[ key ].attackerCoord = attackerCoord\r\n                                            comingAttack[ key ].attackerVillageID = attackerVillageID\r\n                                            comingAttack[ key ].arrival = arrival\r\n                                            _components_printMessage__WEBPACK_IMPORTED_MODULE_5__.printMessage.warn(`${count} ${count > 1 ? 'Ataques Atualizados' : 'Ataque Atualizado'}`, 2000)\r\n                                            count++\r\n                                        }\r\n                                        players[ _general_init_tw__WEBPACK_IMPORTED_MODULE_0__.gameData.player.id ].villages[ id ].comingAttack = comingAttack\r\n                                    })\r\n                                }\r\n                            }\r\n                        }\r\n                        return await (0,_general_init_tw__WEBPACK_IMPORTED_MODULE_0__.setPlayers)(players).then((players, error)=>{\r\n                            if (error) throw error\r\n                            return players\r\n                        })\r\n                    })\r\n                })\r\n                return players\r\n            })\r\n        }).then((players, error) => {\r\n            _components_loaderGame__WEBPACK_IMPORTED_MODULE_6__.loaderGame.remove()\r\n            if (error) return _components_printMessage__WEBPACK_IMPORTED_MODULE_5__.printMessage.error(\"Let's GO! ERRO inesperado... se persistir contate seu fornecedor.\", 5000)\r\n            return players\r\n        })\r\n    }\r\n    checkForNewAttacks = async () => await (0,_general_init_tw__WEBPACK_IMPORTED_MODULE_0__.getPlayers)().then((players, error) => {\r\n        if (error) throw error\r\n        console.log( 'Check for new attacks...' )\r\n        const interAttck = setInterval( async() => {\r\n            if ((0,_general_init_tw__WEBPACK_IMPORTED_MODULE_0__.verifyCurrentScreen)(\"place&try=confirm\") && (0,_general_init_tw__WEBPACK_IMPORTED_MODULE_0__.sendCommandActive)()) {\r\n                clearInterval( interAttck )\r\n                return // enviar comando planejado\r\n            }\r\n            let config_atk = Number(players[_general_init_tw__WEBPACK_IMPORTED_MODULE_0__.gameData.player.id].configs.n_atk )\r\n            let n_atk = Number( document.querySelector( \"#incomings_amount\" ).textContent )\r\n            if ( config_atk != n_atk ) {\r\n                clearInterval( interAttck )\r\n                let response = await this.checkComingAttacks( n_atk, config_atk )\r\n                if (await response) players[_general_init_tw__WEBPACK_IMPORTED_MODULE_0__.gameData.player.id] = await response\r\n            } else {\r\n                let response = await (0,_general_init_tw__WEBPACK_IMPORTED_MODULE_0__.getPlayers)().then((players, error) => {\r\n                    if (players) {\r\n                        return players[_general_init_tw__WEBPACK_IMPORTED_MODULE_0__.gameData.player.id]\r\n                    } else return false\r\n                })\r\n                if (await response) players[_general_init_tw__WEBPACK_IMPORTED_MODULE_0__.gameData.player.id] = await response    \r\n            }\r\n            await (0,_Main_main_export__WEBPACK_IMPORTED_MODULE_7__.questCompleteClick)()\r\n        }, 1 * 1000)\r\n        return players[_general_init_tw__WEBPACK_IMPORTED_MODULE_0__.gameData.player.id]\r\n    })\r\n    checkComingAttacks = async ( n_atk, config_atk ) => await (0,_general_init_tw__WEBPACK_IMPORTED_MODULE_0__.getPlayers)().then(async (players, error) => {\r\n        if (error) throw error\r\n        console.log('Check Coming Attacks...')\r\n        let src\r\n        if ( n_atk > config_atk ) {\r\n            if ( config_atk == 0 ) src = 'https://www.vemtranquilo.host/VT/sonsdosbots/umabixa.mp3'\r\n            if ( config_atk  > 0 ) src = 'https://www.vemtranquilo.host/VT/sonsdosbots/ataqueacaminho.mp3'\r\n            let audio = document.createElement('audio')\r\n            document.querySelector('tbody').append(audio)\r\n            audio.src = src\r\n            audio.id = 'audio_atk'\r\n            //audio.play()\r\n            _components_printMessage__WEBPACK_IMPORTED_MODULE_5__.printMessage.warn( `${ n_atk - config_atk } ${ n_atk - config_atk > 1 ? 'Novos Ataques' : 'Novo Ataque' } CHEGANDO!!!`, 2000 )\r\n        }\r\n        await (0,_components_components__WEBPACK_IMPORTED_MODULE_4__.statusGo)( \"await\" )\r\n        let atk_atual\r\n        while ( n_atk != config_atk ) {\r\n            atk_atual = n_atk\r\n            if ( !_general_init_tw__WEBPACK_IMPORTED_MODULE_0__.premiumActive ) {\r\n                console.log( 'Coming Attacks Not Premium Checking...' )\r\n                let response = await this.saveAttackNotPremium().then(async(players, error) => {\r\n                    if (error) throw error\r\n                    await this.tagAttacksNotPremium()\r\n                    return players[_general_init_tw__WEBPACK_IMPORTED_MODULE_0__.gameData.player.id] \r\n                })\r\n                if (await response) players[_general_init_tw__WEBPACK_IMPORTED_MODULE_0__.gameData.player.id] = await response\r\n            } else {\r\n                console.log( 'Coming Attacks Premium Checking...' )\r\n                await this.tagAttacksComing()\r\n            }\r\n            n_atk = Number( document.querySelector( \"#incomings_amount\" ).textContent )\r\n            if ( n_atk == atk_atual ) config_atk = n_atk\r\n        }\r\n        players[ _general_init_tw__WEBPACK_IMPORTED_MODULE_0__.gameData.player.id ].configs.n_atk = n_atk\r\n        let response = await (0,_general_init_tw__WEBPACK_IMPORTED_MODULE_0__.setPlayers)(players).then((players, error) => {\r\n            if (error) throw error\r\n            if (players) return players[_general_init_tw__WEBPACK_IMPORTED_MODULE_0__.gameData.player.id]\r\n        })\r\n        if ( await response) players[_general_init_tw__WEBPACK_IMPORTED_MODULE_0__.gameData.player.id] = await response\r\n        if (document.querySelector(\"#audio_atk\")) document.querySelector(\"#audio_atk\").remove()\r\n        await this.checkForNewAttacks()\r\n        return players[_general_init_tw__WEBPACK_IMPORTED_MODULE_0__.gameData.player.id]\r\n    })\r\n    tagAttacksComing = async function () {\r\n        _components_printMessage__WEBPACK_IMPORTED_MODULE_5__.printMessage.warn(\"Tag Attacks Coming. Please wait...\", 2500)\r\n        _components_loaderGame__WEBPACK_IMPORTED_MODULE_6__.loaderGame.insert()\r\n        await (0,_requests__WEBPACK_IMPORTED_MODULE_1__.getRequest)( _general_init_tw__WEBPACK_IMPORTED_MODULE_0__.link_mesma_aldeia, 'overview_villages&mode=incomings&type=all&subtype=attackss&group=0' ).then( async (data, error) => {\r\n            if ( error ) throw error\r\n            return new DOMParser().parseFromString( data, 'text/html')\r\n        }).then(async(html, error) => {\r\n            if ( error ) throw error\r\n            return Array.from(html.querySelectorAll(\"#incomings_table > tbody tr.nowrap\")).map( e => Array.from(e.querySelectorAll(\"td\"))).reduce((arr, e) => {\r\n                const idCommand = e[0].querySelector(\"span.quickedit\").dataset.id\r\n                console.log(\"Command ID: \" + idCommand)\r\n                const targetID = e[1].querySelector(\"a\").href.split(\"village=\")[1].split(\"&\")[0]\r\n                console.log(\"Target ID: \" + targetID)\r\n                const target = e[1].innerText.match(/\\d+\\|\\d+/ig).pop()\r\n                console.log(\"Target: \" + target)\r\n                const sourceID = e[2].querySelector(\"a\").href.split(\"id=\")[1].split(\"&\")[0]\r\n                console.log(\"Source ID: \" + sourceID)\r\n                const source = e[2].innerText.match(/\\d+\\|\\d+/ig).pop()\r\n                console.log(\"Source: \" + source)\r\n                const arrivalText = e[5].innerText.trim()\r\n                const arrArrival = (0,_general_util_tw__WEBPACK_IMPORTED_MODULE_3__.return_ddmmaaaa)( arrivalText ).split(\" \").concat(arrivalText.match( /[0-9]{2}[:][0-9]{2}[:][0-9]{2}/ig )).concat(arrivalText.match( /[0-9]{3}$/ig ))\r\n                console.log(\"Arrival: \")\r\n                console.table( arrArrival )\r\n                const ticket = e[0].innerText.trim()\r\n                console.log(\"Ticket: \" + ticket)\r\n                const travelText = e[6].innerText\r\n                console.log(\"Travel: \" + travelText)\r\n                const unitSlower = (0,_general_util_tw__WEBPACK_IMPORTED_MODULE_3__.findAttackSpeed)( travelText, source, target )\r\n                console.log(\"Unit Slower: \" + unitSlower)\r\n                const travel = (0,_general_util_tw__WEBPACK_IMPORTED_MODULE_3__.getTravelTimeInSecond)( (0,_general_util_tw__WEBPACK_IMPORTED_MODULE_3__.getDistance)( source, target ), unitSlower )\r\n                console.log(`Time of travel(ms): ${ travel }` )\r\n                const newTicket = ticket == \"Ataque\" \r\n                    ? `${ unitSlower } | R:${(0,_general_init_tw__WEBPACK_IMPORTED_MODULE_0__.dateServer)().split(\"/\")[0]+\"/\"+(0,_general_init_tw__WEBPACK_IMPORTED_MODULE_0__.dateServer)().split(\"/\")[1]} ${(0,_general_init_tw__WEBPACK_IMPORTED_MODULE_0__.timeServer)()} | Send:${ (0,_general_util_tw__WEBPACK_IMPORTED_MODULE_3__.getLaunchTime)( travel, arrArrival ) } | BT:${ (0,_general_util_tw__WEBPACK_IMPORTED_MODULE_3__.getBackTime)( travel, arrArrival ) } |` \r\n                    : ticket\r\n                console.log(\"New Ticket: \" + newTicket)\r\n                if (ticket == \"Ataque\") arr.push({ \r\n                        id: idCommand,\r\n                        target: e[0],\r\n                        targetID: targetID,\r\n                        ticket: newTicket \r\n                    }\r\n                )\r\n                return arr\r\n            },[])\r\n        }).then(async(arr, error) => {\r\n            if ( error ) throw error\r\n            if ( arr.length > 0 ) {\r\n                for ( const e of arr ) {\r\n                    console.log( e )\r\n                    if ( (0,_general_init_tw__WEBPACK_IMPORTED_MODULE_0__.verifyCurrentScreen)(\"overview_villages&mode=incomings\") ) {\r\n                        await this.tagOnThePage( e.target, e.ticket)\r\n                    } else {\r\n                        await this.tagRequest( e.ticket, e.id )\r\n                    }\r\n                }\r\n            } console.log(arr)\r\n        })\r\n        _components_loaderGame__WEBPACK_IMPORTED_MODULE_6__.loaderGame.remove()\r\n    }\r\n    tagOnThePage = async function(e, ticket) {\r\n        setTimeout(() => {\r\n            e.querySelector(\"a.rename-icon\").click()\r\n            e.querySelector(\"input[type=text]\").value = ticket\r\n            e.querySelector(\"input.btn\").click()\r\n        }, (0,_general_util__WEBPACK_IMPORTED_MODULE_2__.random)( 20, 50 ) + (0,_general_util__WEBPACK_IMPORTED_MODULE_2__.setMillis)(250) )\r\n    }\r\n    tagRequest = async function( ticket, commandID ) {\r\n        await (0,_requests__WEBPACK_IMPORTED_MODULE_1__.postRequest)(_general_init_tw__WEBPACK_IMPORTED_MODULE_0__.link_mesma_aldeia,\r\n            `info_command&ajaxaction=edit_other_comment&id=${commandID}`,\r\n            [\r\n                ['text', ticket],\r\n                ['h', csrf_token]\r\n            ]\r\n        ).then((response, error)=>{\r\n            console.log( response.status, response.ok )\r\n        })\r\n    }\r\n}\r\nconst incomings = new IncomingsAttaks()\r\n\n\n//# sourceURL=webpack://newproject/./incomings.js?");

/***/ }),

/***/ "./requests.js":
/*!*********************!*\
  !*** ./requests.js ***!
  \*********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"arrGroupLink\": () => (/* binding */ arrGroupLink),\n/* harmony export */   \"fetch_players\": () => (/* binding */ fetch_players),\n/* harmony export */   \"fetch_units_not_premium\": () => (/* binding */ fetch_units_not_premium),\n/* harmony export */   \"getRequest\": () => (/* binding */ getRequest),\n/* harmony export */   \"postRequest\": () => (/* binding */ postRequest)\n/* harmony export */ });\n/* harmony import */ var _Train_train_export__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../Train/train-export */ \"../Train/train-export.js\");\n/* harmony import */ var _general_init_tw__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../general/init_tw */ \"../general/init_tw.js\");\n\r\n\r\n\r\n'use strict'\r\n\r\n/**\r\n * Uso Request\r\n * retorna promise com responseText do objeto url passado\r\n * \r\n * @param {String} link \r\n * @param {String} screen_request \r\n * @returns \r\n */\r\nconst getRequest = async ( link, screen_request ) => (\r\n    await fetch(`https://${window.location.host}${link}${screen_request}&h=${ window.csrf_token }&client_time=${ Math.round( Timing.getCurrentServerTime() / 1e3 ) }`).then((response, reject) => {\r\n        console.log( 'Requisition status: ' + response.status )\r\n        if (reject) return error\r\n        if (response.status != 200) return error\r\n        return response.text()\r\n    })\r\n)\r\nconst postRequest = async ( link, screen, arrData ) => {\r\n    const formData = new FormData()\r\n    arrData.forEach(e => {\r\n        formData.set(e[0], e[1])\r\n    })\r\n\r\n    const url = `${location.origin}${link}${screen}&h=${ window.csrf_token }&client_time=${ Math.round( Timing.getCurrentServerTime() / 1e3 ) }`\r\n    const myInit = { method: 'POST', body: formData }\r\n    const myRequest = new Request(url, myInit)\r\n    return await fetch(myRequest).then(function(response, reject) {\r\n        if (reject) throw reject\r\n        return response\r\n    })\r\n}\r\n/**\r\n * Uso Request\r\n * Atualiza busca informações da visualização produções e atualiza o objeto players\r\n */\r\nconst fetch_players = async () => (\r\n    await getRequest( _general_init_tw__WEBPACK_IMPORTED_MODULE_1__.link_mesma_aldeia, 'overview_villages&mode=prod&group=0' ).then( async (data, error) => {\r\n        if (error) throw error\r\n        return new DOMParser().parseFromString( data, 'text/html')\r\n    }).then(async(prod_html, error) => {\r\n        if (error) throw error\r\n        const ids = Array.from( prod_html.querySelector( \"#production_table\" ).querySelectorAll( 'span.quickedit-vn' ) ).map( ( e, i, a ) => e.dataset.id  )\r\n        const coord = Array.from( prod_html.querySelector( \"#production_table\" ).querySelectorAll( 'span.quickedit-vn' ) ).map( ( e, i, a ) => e.innerText.match(/\\d+\\|\\d+/ig) ) \r\n        const name = Array.from( prod_html.querySelector( \"#production_table\" ).querySelectorAll( \"span.quickedit-label\" ) ).map( ( e, i, a ) => e.innerText.trim())\r\n        const pp = _general_init_tw__WEBPACK_IMPORTED_MODULE_1__.premiumActive\r\n        const rec = Array.from( prod_html.querySelector( \"#production_table\" ).querySelectorAll( (`td:nth-child(${ pp ? 4 : 3 })`) ) ).map( ( e, i, a ) => e.innerText.split(' ') )\r\n        const pop = Array.from( prod_html.querySelector( \"#production_table\" ).querySelectorAll( (`td:nth-child(${ pp ? 7 : 5 })`) ) ).map( ( e, i, a ) => e.innerText.split('/') )\r\n        const stor = Array.from( prod_html.querySelector( \"#production_table\" ).querySelectorAll( (`td:nth-child(${ pp ? 5 : 4 })`) ) ).map( ( e, i, a ) => e.innerText )\r\n        return await (0,_general_init_tw__WEBPACK_IMPORTED_MODULE_1__.getPlayers)().then((players, error) => {\r\n            if (error) throw error\r\n            players[ _general_init_tw__WEBPACK_IMPORTED_MODULE_1__.gameData.player.id ].villageIDs = ids\r\n            // --- se não tem salva o id no obj\r\n            ids.forEach( (id, i) => {\r\n                if ( !players[ _general_init_tw__WEBPACK_IMPORTED_MODULE_1__.gameData.player.id ].villages[id] ) players[ _general_init_tw__WEBPACK_IMPORTED_MODULE_1__.gameData.player.id ].villages[id] = {}\r\n                // --- salva os dados da aldeia atual no obj\r\n                players[ _general_init_tw__WEBPACK_IMPORTED_MODULE_1__.gameData.player.id ].villages[id].coord = coord[i][ coord[i].length - 1 ]\r\n                players[ _general_init_tw__WEBPACK_IMPORTED_MODULE_1__.gameData.player.id ].villages[id].display_name = name[i]\r\n                players[ _general_init_tw__WEBPACK_IMPORTED_MODULE_1__.gameData.player.id ].villages[id].pop_max = pop[i][1]\r\n                players[ _general_init_tw__WEBPACK_IMPORTED_MODULE_1__.gameData.player.id ].villages[id].pop = pop[i][0]\r\n                players[ _general_init_tw__WEBPACK_IMPORTED_MODULE_1__.gameData.player.id ].villages[id].wood = rec[i][0]\r\n                players[ _general_init_tw__WEBPACK_IMPORTED_MODULE_1__.gameData.player.id ].villages[id].stone = rec[i][1]\r\n                players[ _general_init_tw__WEBPACK_IMPORTED_MODULE_1__.gameData.player.id ].villages[id].iron = rec[i][2]\r\n                players[ _general_init_tw__WEBPACK_IMPORTED_MODULE_1__.gameData.player.id ].villages[id].storage = stor[i]\r\n                if( !players[ _general_init_tw__WEBPACK_IMPORTED_MODULE_1__.gameData.player.id ].villages[id].modelo ) players[ _general_init_tw__WEBPACK_IMPORTED_MODULE_1__.gameData.player.id ].villages[id].modelo = {}\r\n                if( !players[ _general_init_tw__WEBPACK_IMPORTED_MODULE_1__.gameData.player.id ].villages[id].market_premium ) players[ _general_init_tw__WEBPACK_IMPORTED_MODULE_1__.gameData.player.id ].villages[id].market_premium = {\r\n                    \"config\": {\r\n                        \"active\": false,\r\n                        \"option\": 2,\r\n                        \"sell\": {\r\n                            \"active\": true,\r\n                            \"storage_res\": {\r\n                                \"wood\": 1000,\r\n                                \"stone\": 1000,\r\n                                \"iron\": 1000\r\n                            },\r\n                            \"sell_rate\": {\r\n                                \"active\": false,\r\n                                \"wood\": 64,\r\n                                \"stone\": 64,\r\n                                \"iron\": 64\r\n                            }\r\n                        },\r\n                        \"buy\": {\r\n                            \"active\": true,\r\n                            \"storage_max\": 50,\r\n                            \"buy_max\": 5000,\r\n                            \"buy_rate\": {\r\n                                \"active\": false,\r\n                                \"wood\": 64,\r\n                                \"stone\": 64,\r\n                                \"iron\": 64\r\n                            }\r\n                        }\r\n                    },\r\n                    \"rate_daily\": {}\r\n                }\r\n                if( players[ _general_init_tw__WEBPACK_IMPORTED_MODULE_1__.gameData.player.id ].villages[id].farm == undefined ) players[ _general_init_tw__WEBPACK_IMPORTED_MODULE_1__.gameData.player.id ].villages[id].farm = true\r\n                if( players[ _general_init_tw__WEBPACK_IMPORTED_MODULE_1__.gameData.player.id ].villages[id].scav == undefined ) players[ _general_init_tw__WEBPACK_IMPORTED_MODULE_1__.gameData.player.id ].villages[id].scav = true\r\n                if( players[ _general_init_tw__WEBPACK_IMPORTED_MODULE_1__.gameData.player.id ].villages[id].train == undefined ) players[ _general_init_tw__WEBPACK_IMPORTED_MODULE_1__.gameData.player.id ].villages[id].train = true\r\n                if( players[ _general_init_tw__WEBPACK_IMPORTED_MODULE_1__.gameData.player.id ].villages[id].main == undefined ) players[ _general_init_tw__WEBPACK_IMPORTED_MODULE_1__.gameData.player.id ].villages[id].main = true\r\n            })\r\n            return players\r\n        }).then( async (players, error) => {\r\n            if (error) throw error\r\n            // --- salvando os edificios da aldeia atual\r\n            players[ _general_init_tw__WEBPACK_IMPORTED_MODULE_1__.gameData.player.id ].villages[ _general_init_tw__WEBPACK_IMPORTED_MODULE_1__.gameData.village.id ].build = _general_init_tw__WEBPACK_IMPORTED_MODULE_1__.gameData.village.buildings\r\n            return await (0,_general_init_tw__WEBPACK_IMPORTED_MODULE_1__.setPlayers)(players)\r\n        }).then( async (players, error) => {\r\n            if (error) throw error\r\n            const villages = players[ _general_init_tw__WEBPACK_IMPORTED_MODULE_1__.gameData.player.id ].villages\r\n            const ids = players[ _general_init_tw__WEBPACK_IMPORTED_MODULE_1__.gameData.player.id ].villageIDs\r\n            // --- elimina aldeia nobladas do objeto\r\n            for (const key in villages) {\r\n                if (Object.hasOwnProperty.call(villages, key)) {\r\n                    if ( ids.indexOf( key ) == -1 ) delete villages[ key ]\r\n                }\r\n            }\r\n            players[ _general_init_tw__WEBPACK_IMPORTED_MODULE_1__.gameData.player.id ].villages = villages\r\n            // --- retorna as unidades de todas as vilas\r\n            for ( const key in villages ) {\r\n                if ( Object.hasOwnProperty.call( villages, key ) ) {\r\n                    if ( !villages[ key ].units || villages[ key ].units == {} ) {\r\n                        await fetch_units_not_premium( key ).then( (objUnits, error) => {\r\n                            if (error) throw error\r\n                            players[ _general_init_tw__WEBPACK_IMPORTED_MODULE_1__.gameData.player.id ].villages[ key ].units = objUnits\r\n                        })\r\n                    }\r\n                }\r\n            }\r\n            players[ _general_init_tw__WEBPACK_IMPORTED_MODULE_1__.gameData.player.id ].configs.n_loop = Number( players[ _general_init_tw__WEBPACK_IMPORTED_MODULE_1__.gameData.player.id ].configs.n_loop ) + 1\r\n            players[ _general_init_tw__WEBPACK_IMPORTED_MODULE_1__.gameData.player.id ].villages = villages\r\n            \r\n            console.log( `Let's Go!!\\nCount: ${ Number( players[ _general_init_tw__WEBPACK_IMPORTED_MODULE_1__.gameData.player.id ].configs.n_loop ) } loop's` )\r\n            console.table( players[ _general_init_tw__WEBPACK_IMPORTED_MODULE_1__.gameData.player.id ].villages, [ 'coord', 'farm', 'scav', 'train', 'main' ] )\r\n            return await (0,_general_init_tw__WEBPACK_IMPORTED_MODULE_1__.setPlayers)(players)\r\n        })\r\n    })\r\n)\r\n/**\r\n * Uso Request\r\n * Busca informações do recrutamento da aldeia informada\r\n * @param {String} key - Id da aldeia\r\n */\r\nconst fetch_units_not_premium = async ( key ) => (\r\n    await getRequest( (0,_general_init_tw__WEBPACK_IMPORTED_MODULE_1__.link_ir_aldeia)( key, '' ), \"train\" ).then(( data, error ) => {\r\n        if ( error ) throw error\r\n        const html = new DOMParser().parseFromString( data, 'text/html')\r\n        return (0,_Train_train_export__WEBPACK_IMPORTED_MODULE_0__.obj_train_units)( html )\r\n    })\r\n)\r\nconst arrGroupLink = () => [_general_init_tw__WEBPACK_IMPORTED_MODULE_1__.gameData.group_id, `${ _general_init_tw__WEBPACK_IMPORTED_MODULE_1__.link_mesma_aldeia }${ _general_init_tw__WEBPACK_IMPORTED_MODULE_1__.screen_atual.indexOf(\"&group=\") == -1 ? \"\" : _general_init_tw__WEBPACK_IMPORTED_MODULE_1__.screen_atual }`]\n\n//# sourceURL=webpack://newproject/./requests.js?");

/***/ }),

/***/ "./schedules.js":
/*!**********************!*\
  !*** ./schedules.js ***!
  \**********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"saveSchedules\": () => (/* binding */ saveSchedules)\n/* harmony export */ });\n/* harmony import */ var _general_init_tw__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../general/init_tw */ \"../general/init_tw.js\");\n\r\n\r\n'use strict'\r\n\r\nasync function saveSchedules( dateTimeNumber, villageID, screen, mode = null, ms = '000', target = null, type = null, template = {}, build = null, travel = null, repeat = \"00:00:00\", status = 0 ) {\r\n    return await (0,_general_init_tw__WEBPACK_IMPORTED_MODULE_0__.getPlayers)().then(async(res, err) => {\r\n        if (err) throw err\r\n        if (!res) {\r\n            printMessage.error(\"Não foi possível salvar a programação!! Erro de leitura dos dados. Se persistir, contate o revendedor.\", 5000)\r\n            return false\r\n        }\r\n        const players = res\r\n        const schedules = players[ _general_init_tw__WEBPACK_IMPORTED_MODULE_0__.gameData.player.id ].schedules || {}\r\n        // --- antecipando o gatilho do main quando tem o botão free e dos comandos, verifica e resolve key repetida\r\n        const returnArrNears = (newKey) => Object.keys(schedules).filter( key => {\r\n            if ( schedules[ key ].screen + schedules[ key ].villageID != screen + villageID ) {\r\n                return key == newKey \r\n            }\r\n        })\r\n        const returnKeyDiffer = (keyBase) => {\r\n            for (let n = 0; n < 1000; n++) {\r\n                if (returnArrNears(Number(keyBase) + n).length == 0 ) {\r\n                    console.log(Number(keyBase) + n)\r\n                    return Number(keyBase) + n\r\n                }\r\n            }\r\n        }\r\n        function replaceKeyDiffer(keyBase) {\r\n            const arrNears = returnArrNears(keyBase)\r\n            console.log(arrNears)\r\n            arrNears.forEach((key) => {\r\n                console.log(key)\r\n                schedules[returnKeyDiffer(keyBase)] = schedules[key]\r\n                delete schedules[key]\r\n            })\r\n        }\r\n        const nUnset = ( screen == 'main' && mode == \"free\"\r\n            ? returnArrNears(dateTimeNumber - (175 * 1000)).length > 0 ? returnKeyDiffer(dateTimeNumber - (175 * 1000)) : dateTimeNumber - (175 * 1000)\r\n            : screen == 'place'\r\n            ? returnArrNears(dateTimeNumber - (30 * 1000)).length > 0 ? replaceKeyDiffer(dateTimeNumber - (30 * 1000)) : dateTimeNumber - (30 * 1000)\r\n            : returnArrNears(dateTimeNumber + (5 * 1000)).length > 0 ? returnKeyDiffer(dateTimeNumber) + (5 * 1000) : dateTimeNumber + (5 * 1000)\r\n        )\r\n        // --- quando programação já existir e não for comando\r\n        if ( screen == 'place&mode=scavenge&' ) screen = 'place&mode=scavenge'\r\n        if ( schedules[ nUnset ] ) {\r\n            if ( schedules[ nUnset ].screen == screen && schedules[ nUnset ].villageID == villageID && screen != \"place\" ) {\r\n                console.log('There is already a schedules for this event.')\r\n                return false\r\n            }\r\n        }\r\n        schedules[ nUnset ] = {\r\n            date: new Date( Number( dateTimeNumber ) ).toLocaleDateString(),\r\n            time: new Date( Number( dateTimeNumber ) ).toLocaleTimeString(),\r\n            ms: ms,\r\n            villageID: villageID,\r\n            screen: screen,\r\n            build: build,\r\n            mode: mode,\r\n            target: target,\r\n            type: type,\r\n            template: template,\r\n            travel: travel,\r\n            repeat: repeat,\r\n            status: 0\r\n        }\r\n        players[_general_init_tw__WEBPACK_IMPORTED_MODULE_0__.gameData.player.id].schedules = schedules\r\n        return await (0,_general_init_tw__WEBPACK_IMPORTED_MODULE_0__.setPlayers)(players).then((players, error) => {\r\n            if (error) throw error\r\n            console.log( 'Event saved in the schedules!' )\r\n            return players[_general_init_tw__WEBPACK_IMPORTED_MODULE_0__.gameData.player.id]\r\n        })\r\n    })\r\n\r\n}\r\n\r\n\r\n\r\n\n\n//# sourceURL=webpack://newproject/./schedules.js?");

/***/ }),

/***/ "../Main/main-export.js":
/*!******************************!*\
  !*** ../Main/main-export.js ***!
  \******************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"newQuest\": () => (/* binding */ newQuest),\n/* harmony export */   \"popupQuest\": () => (/* binding */ popupQuest),\n/* harmony export */   \"questCompleteClick\": () => (/* binding */ questCompleteClick)\n/* harmony export */ });\n/* harmony import */ var _general_util__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../general/util */ \"../general/util.js\");\n\r\n\r\nconst storageRewards = () => document.querySelector(\"#main-tab section.quest-reward-summary\")\r\n? document.querySelector(\"#main-tab section.quest-reward-summary\").querySelector(\"img\") \r\n? document.querySelector(\"#main-tab section.quest-reward-summary\").querySelector(\"img\").src.indexOf(\"storage3\") != -1 \r\n? true : false : false : false\r\n\r\nconst btnQuestComplete = () => document.querySelector(\"#main-tab div.btn.btn-confirm-yes.status-btn.quest-complete-btn\") ? document.querySelector(\"#main-tab div.btn.btn-confirm-yes.status-btn.quest-complete-btn\") : false\r\n\r\nconst btnsConfirmYes = () => Array.from(document.querySelectorAll(\"a.btn-confirm-yes\"))\r\n\r\nconst popupQuest = () => !!document.querySelector(\"#popup_box_quest > div\")\r\nconst newQuest = () => !!document.querySelector(\"#new_quest > div.quest_new.br\")\r\nasync function questCompleteClick() {\r\n    if ( popupQuest() ) {\r\n        console.log( \"questCompleteClick...\" )\r\n        if ( !storageRewards() && btnQuestComplete() ) {\r\n            btnQuestComplete().click()\r\n            return\r\n        }\r\n        if ( storageRewards() || !btnQuestComplete() ) openRewards()\r\n    }\r\n}\r\nasync function openRewards(t = 1) {\r\n    if ( game_data.screen != \"main\" ) t = 12\r\n    await (0,_general_util__WEBPACK_IMPORTED_MODULE_0__.sleep)(t)\r\n    if ( btnsConfirmYes().length > 0 ) {\r\n        const btnRewards = Array.from( document.querySelectorAll( \"a.tab-link\" ) ).find( ( e, i, a ) => e.dataset.tab == \"reward-tab\" )\r\n        btnRewards.click()\r\n        await handleRewards()\r\n    } else {\r\n        if ( popupQuest() ) await closePopup()\r\n    }\r\n}\r\nasync function closePopup() {\r\n    const intClose = setInterval(() => {\r\n        console.log( \"closePopUp...\" )\r\n        if ( btnsConfirmYes().length == 0 ) {\r\n            clearInterval(intClose)\r\n            if (document.querySelector(\"a.popup_box_close\")) document.querySelector(\"a.popup_box_close\").click()\r\n        }\r\n    }, 333 )\r\n}\r\nasync function btnYesClick( btn ) {\r\n    setTimeout(() => {\r\n        btn.click()\r\n    }, (0,_general_util__WEBPACK_IMPORTED_MODULE_0__.setMillis)( 255 ) );\r\n}\r\nasync function handleRewards() {\r\n    const rowsRewards =  Array.from( document.querySelector(\"#reward-system-rewards\").querySelectorAll('tr') )\r\n    console.log( \"handleRewards...\" )\r\n    let btn_yes, btns = btnsConfirmYes()\r\n    for ( let i = rowsRewards.length -1; i >= 0; i-- ) {\r\n        if ( btns.length > 0 ) {\r\n            if ( !localStorage.rewards ) localStorage.setItem(\"rewards\", \r\n                JSON.stringify(Array.from(rowsRewards[i].querySelectorAll(\"td\")).map( e => Number(e.innerText) ).filter( e => e * 1 > 30)))\r\n            if ( !btns[1].attributes.disabled ) {\r\n                btn_yes = btns[1]\r\n            } else {\r\n                if ( btns[0] ) {\r\n                    btn_yes = btns[0]\r\n                }\r\n            }\r\n            console.log( \"btnYesClick...\", rowsRewards.length - i )\r\n            await btnYesClick( btn_yes )\r\n        }\r\n    }\r\n    if ( popupQuest() ) await closePopup()\r\n}\r\n\n\n//# sourceURL=webpack://newproject/../Main/main-export.js?");

/***/ }),

/***/ "../Senders/SenderSchedules.js":
/*!*************************************!*\
  !*** ../Senders/SenderSchedules.js ***!
  \*************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"CommandSenderSchedules\": () => (/* binding */ CommandSenderSchedules)\n/* harmony export */ });\n/* harmony import */ var _general_init_tw__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../general/init_tw */ \"../general/init_tw.js\");\n/* harmony import */ var _general_util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../general/util */ \"../general/util.js\");\n/* harmony import */ var _components_loaderGame__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../components/loaderGame */ \"../components/loaderGame.js\");\n/* harmony import */ var _config__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./config */ \"../Senders/config.js\");\n\r\n\r\n\r\n\r\n\r\n'use strict'\r\n\r\nclass CommanderSchedules {\r\n    confirmButton = null\r\n    init = function( arrDateTimeMs ) {\r\n        this.confirmButton = $( '#troop_confirm_submit' );\r\n        ( function() {\r\n            const offset = Number( localStorage.getItem( 'GO#Offset' ) ) || -250\r\n            const attackTime = (0,_general_util__WEBPACK_IMPORTED_MODULE_1__.nDateTime)( arrDateTimeMs[0], arrDateTimeMs[1], arrDateTimeMs[2] )\r\n            CommandSenderSchedules.confirmButton.addClass( 'btn-disabled' )\r\n            _components_loaderGame__WEBPACK_IMPORTED_MODULE_2__.loaderGame.insert()\r\n            console.warn(\"attackTime: \" + attackTime)\r\n            console.error(\"Now: \" + (0,_general_init_tw__WEBPACK_IMPORTED_MODULE_0__.dateServer)() + \" \" + (0,_general_init_tw__WEBPACK_IMPORTED_MODULE_0__.timeServer)())\r\n            console.warn( `${arrDateTimeMs[0]} ${arrDateTimeMs[1]}:${arrDateTimeMs[2]}`, offset )\r\n            const idInter = setInterval(() => {\r\n                if ( attackTime <= (0,_config__WEBPACK_IMPORTED_MODULE_3__.SENDER_PRECISION)() + _config__WEBPACK_IMPORTED_MODULE_3__.ZONE_TIME + offset ) {\r\n                    CommandSenderSchedules.confirmButton.click()\r\n                    clearInterval( idInter )\r\n                }\r\n            }, 0.1 )\r\n        }())\r\n    }\r\n}\r\nconst CommandSenderSchedules = new CommanderSchedules()\r\n\n\n//# sourceURL=webpack://newproject/../Senders/SenderSchedules.js?");

/***/ }),

/***/ "../Senders/config.js":
/*!****************************!*\
  !*** ../Senders/config.js ***!
  \****************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"SENDER_PRECISION\": () => (/* binding */ SENDER_PRECISION),\n/* harmony export */   \"ZONE_TIME\": () => (/* binding */ ZONE_TIME)\n/* harmony export */ });\n/* harmony import */ var _general_init_tw__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../general/init_tw */ \"../general/init_tw.js\");\n\r\n\r\n'use strict'\r\n\r\nconst SENDER_PRECISION = () => performance.timing.navigationStart + performance.now()\r\nconst ZONE_TIME = (0,_general_init_tw__WEBPACK_IMPORTED_MODULE_0__.timeZone)() * 1000\r\n\n\n//# sourceURL=webpack://newproject/../Senders/config.js?");

/***/ }),

/***/ "../Snob/snob-export.js":
/*!******************************!*\
  !*** ../Snob/snob-export.js ***!
  \******************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"requestCostSnob\": () => (/* binding */ requestCostSnob),\n/* harmony export */   \"returnArrFlags\": () => (/* binding */ returnArrFlags),\n/* harmony export */   \"returnArrIdVillagesSnob\": () => (/* binding */ returnArrIdVillagesSnob),\n/* harmony export */   \"returnArrayCostSnob\": () => (/* binding */ returnArrayCostSnob),\n/* harmony export */   \"returnObjCostSnobPerVillage\": () => (/* binding */ returnObjCostSnobPerVillage),\n/* harmony export */   \"schedulesSnob\": () => (/* binding */ schedulesSnob)\n/* harmony export */ });\n/* harmony import */ var _components_printMessage__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../components/printMessage */ \"../components/printMessage.js\");\n/* harmony import */ var _general_init_tw__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../general/init_tw */ \"../general/init_tw.js\");\n/* harmony import */ var _general_util__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../general/util */ \"../general/util.js\");\n/* harmony import */ var _LetsGO_requests__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../LetsGO/requests */ \"./requests.js\");\n/* harmony import */ var _LetsGO_schedules__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../LetsGO/schedules */ \"./schedules.js\");\n\r\n\r\n\r\n\r\n\r\n\r\n'use strict'\r\n\r\n//--- Retorna um array c os ids das aldeias que tem a bandeira indicada ou nunhum para sem bandeira ordenado pelo maior custo\r\nconst returnArrFlags = async ( flag = \"\") => (\r\n    await (0,_general_init_tw__WEBPACK_IMPORTED_MODULE_1__.getPlayers)().then(async(players, error) => {\r\n        if (error) throw error\r\n        const villages = players[_general_init_tw__WEBPACK_IMPORTED_MODULE_1__.gameData.player.id].villages\r\n        const ids = players[_general_init_tw__WEBPACK_IMPORTED_MODULE_1__.gameData.player.id].villageIDs\r\n        const arrflag = []\r\n        if ( _general_init_tw__WEBPACK_IMPORTED_MODULE_1__.premiumActive ) {\r\n            await (0,_LetsGO_requests__WEBPACK_IMPORTED_MODULE_3__.getRequest)( _general_init_tw__WEBPACK_IMPORTED_MODULE_1__.link_mesma_aldeia, \"overview_villages&mode=tech&group=0\" ).then((data, error) => {\r\n                if ( error ) throw error\r\n                const html = new DOMParser().parseFromString( data, 'text/html')\r\n                ids.map( ( id, i, a ) => {\r\n                    villages[ id ].flag = {\r\n                        len : Array.from(html.querySelectorAll(\"div.flag_present span\")).map( e => e.innerText.split(' ')[ 0 ] )[ i ].replace(\"-\",\"\").replace(\"+\",\"\").replace(\"%\",\"\"),\r\n                        type : Array.from(html.querySelectorAll(\"div.flag_present span\")).map( e => e.innerText.split(' ')[ e.innerText.split(' ').length - 1 ] )[ i ].toLowerCase()\r\n                    } \r\n                    if ( villages[ id ].flag.type == flag ) arrflag.push( { id: id , len: villages[ id ].flag.len } )\r\n                })\r\n            })\r\n        } else {\r\n            for (const id of ids) {\r\n                await (0,_LetsGO_requests__WEBPACK_IMPORTED_MODULE_3__.getRequest)( (0,_general_init_tw__WEBPACK_IMPORTED_MODULE_1__.link_ir_aldeia)( id, \"\" ), \"overview\" ).then((data, error) => {\r\n                    if ( error ) throw error\r\n                    const html = new DOMParser().parseFromString( data, 'text/html')\r\n                    const arrShowEffects = Array.from( html.querySelectorAll(\"#show_effects td > a\") )\r\n                    villages[ id ].flag = arrShowEffects.filter( effect => effect.href.substring( effect.href.lastIndexOf( '=' ) + 1, effect.href.length ) == 'flags' ).reduce((obj, e, i, a) => obj = {\r\n                        len: e.innerText.match(/[0-9]{1,}/ig) ? e.innerText.match(/[0-9]{1,}/ig)[0] : \"\",\r\n                        type: e.innerText.match(/[0-9]{1,}/ig) ? e.innerText.trim().split(' ')[ e.innerText.trim().split(' ').length - 1 ].toLowerCase() : \"\"\r\n                    }, {})\r\n                    console.log( villages[ id ].flag )\r\n                })\r\n                if ( villages[id].flag.type == flag ) arrflag.push( { id: id , len: villages[ id ].flag.len } )\r\n            }\r\n        }\r\n        return arrflag.sort(( a, b ) => {\r\n            if (a.len * 1 > b.len * 1) return -1 \r\n            if (a.len * 1 < b.len * 1) return 1 \r\n            return 0\r\n        })\r\n    }).then((arr, error) => error ? error : arr)\r\n)\r\n\r\n// --- Retorna array com custo de moeda in page\r\nconst returnArrayCostSnob = (html = document) => !html.querySelector(\"#content_value div.mint_coins_req\") ? [] : Array.from(html.querySelector(\"#content_value div.mint_coins_req\").querySelectorAll(\"span.value\")).map(e=> Number(e.innerText.replace(\".\",\"\")))\r\n\r\n//--- Retorna um array com custo de moeda por request\r\nconst requestCostSnob = async(villageID) => await (0,_LetsGO_requests__WEBPACK_IMPORTED_MODULE_3__.getRequest)((0,_general_init_tw__WEBPACK_IMPORTED_MODULE_1__.linkGoVillage)(villageID, \"\"), \"snob\").then((data, error) => {\r\n    if ( error ) throw error\r\n    console.log(\"requestCostSnob...\")\r\n    return new DOMParser().parseFromString( data, 'text/html')\r\n}).then((html, error)=>{\r\n    if ( error ) throw error\r\n    return returnArrayCostSnob(html)\r\n})\r\n\r\n// --- retorna obj com id e custo de cunhagem de cada vila\r\nconst returnObjCostSnobPerVillage = async (arrVillages) => {\r\n    console.log(arrVillages)\r\n    const objCostSnobPerVillage = []\r\n    for (const id of arrVillages) {\r\n        console.log(id)\r\n        await requestCostSnob(id).then((arr, error)=>{\r\n            if (error) throw error\r\n            console.log(arr)\r\n            if (arr.length > 0) {\r\n                objCostSnobPerVillage[id] = {\r\n                    \"wood\": arr[0],\r\n                    \"stone\": arr[1],\r\n                    \"iron\": arr[2]\r\n                }\r\n            }\r\n        })\r\n    }\r\n    return objCostSnobPerVillage\r\n}\r\n\r\n//--- Retorna array com o id das aldeias que tem recursos para cunhar\r\nconst returnArrIdVillagesSnob = (obj, num = 4, html = document) => (\r\n    Array.from(html.querySelectorAll(\"#production_table > tbody > tr.nowrap\")).reduce((arr, e) => {\r\n        const id = e.querySelector(\"span.quickedit-vn\").dataset.id\r\n        const arrRes = e.querySelectorAll(\"td\")[premium ? 3 : 2].innerText.split(\" \")\r\n        if (obj[id]) {\r\n            if (Number(arrRes[0].replace(\".\", \"\")) - Number(obj[id].wood) * num >= Number(obj[id].wood) &&\r\n                Number(arrRes[1].replace(\".\", \"\")) - Number(obj[id].stone) * num >= Number(obj[id].stone) &&\r\n                Number(arrRes[2].replace(\".\", \"\")) - Number(obj[id].iron) * num >= Number(obj[id].iron)\r\n            ) arr.push(id)\r\n        }\r\n        console.log(arr)\r\n        return arr\r\n    },[])\r\n)\r\nconst schedulesSnob = async () => (\r\n    await (0,_LetsGO_requests__WEBPACK_IMPORTED_MODULE_3__.getRequest)(_general_init_tw__WEBPACK_IMPORTED_MODULE_1__.linkSameVillage, \"overview_villages\").then((data, error) => {\r\n        if ( error ) throw error\r\n        if (!data) return false\r\n        return new DOMParser().parseFromString( data, 'text/html')\r\n    }).then(async(html, error)=>{\r\n        if ( error ) throw error\r\n        if (!html) return false\r\n        return await (0,_general_init_tw__WEBPACK_IMPORTED_MODULE_1__.getPlayers)().then(async(players_, error)=>{\r\n            if (error) throw error\r\n            if (!players_) return false\r\n            const players = players_\r\n            const villages = players[_general_init_tw__WEBPACK_IMPORTED_MODULE_1__.gameData.player.id].villages\r\n            return await returnObjCostSnobPerVillage(Object.keys(villages)).then(async(objCostSnobPerVillage, error)=>{\r\n                if (error) throw error\r\n                const arrIdVillagesSnob = returnArrIdVillagesSnob(objCostSnobPerVillage, 4, html)\r\n                if (arrIdVillagesSnob.length > 0) {\r\n                    if (_general_init_tw__WEBPACK_IMPORTED_MODULE_1__.premiumActive) {\r\n                        let response = await (0,_LetsGO_schedules__WEBPACK_IMPORTED_MODULE_4__.saveSchedules)((0,_general_util__WEBPACK_IMPORTED_MODULE_2__.nDateTime)((0,_general_init_tw__WEBPACK_IMPORTED_MODULE_1__.dateServer)(), (0,_general_init_tw__WEBPACK_IMPORTED_MODULE_1__.timeServer)()) + (18 * 1000), arrIdVillagesSnob[0], \"snob&mode=coin&group=0&\")\r\n                        if (await response) players[_general_init_tw__WEBPACK_IMPORTED_MODULE_1__.gameData.player.id] = await response\r\n                    } else {\r\n                        let i = 1\r\n                        for (const id of arrIdVillagesSnob) {\r\n                            let response = await (0,_LetsGO_schedules__WEBPACK_IMPORTED_MODULE_4__.saveSchedules)((0,_general_util__WEBPACK_IMPORTED_MODULE_2__.nDateTime)((0,_general_init_tw__WEBPACK_IMPORTED_MODULE_1__.dateServer)(), (0,_general_init_tw__WEBPACK_IMPORTED_MODULE_1__.timeServer)()) + (i * 10 * 1000), id, \"snob\")\r\n                            if (await response) players[_general_init_tw__WEBPACK_IMPORTED_MODULE_1__.gameData.player.id] = await response\r\n                            i++\r\n                        }\r\n                    }\r\n                    _components_printMessage__WEBPACK_IMPORTED_MODULE_0__.printMessage.success(`A cunhagem de ${arrIdVillagesSnob.length} aldeias foi programada!`, 3 * 1000)\r\n                }\r\n                if (!players[_general_init_tw__WEBPACK_IMPORTED_MODULE_1__.gameData.player.id].configs.snob) players[_general_init_tw__WEBPACK_IMPORTED_MODULE_1__.gameData.player.id].configs.snob = {}\r\n                const season = Number(players[_general_init_tw__WEBPACK_IMPORTED_MODULE_1__.gameData.player.id].configs.snob.season || 15)\r\n                if (!players[_general_init_tw__WEBPACK_IMPORTED_MODULE_1__.gameData.player.id].configs.snob.season) players[_general_init_tw__WEBPACK_IMPORTED_MODULE_1__.gameData.player.id].configs.snob.season = season\r\n                players[_general_init_tw__WEBPACK_IMPORTED_MODULE_1__.gameData.player.id].configs.nextSnob = (0,_general_util__WEBPACK_IMPORTED_MODULE_2__.nDateTime)((0,_general_init_tw__WEBPACK_IMPORTED_MODULE_1__.dateServer)(), (0,_general_init_tw__WEBPACK_IMPORTED_MODULE_1__.timeServer)()) + ( season * 60 * 1000)\r\n                return await (0,_general_init_tw__WEBPACK_IMPORTED_MODULE_1__.setPlayers)(players)\r\n            })\r\n        })\r\n    }).then((players, error)=>{\r\n        if (error) throw error\r\n        if (!players) return false\r\n        return players[_general_init_tw__WEBPACK_IMPORTED_MODULE_1__.gameData.player.id]\r\n    })\r\n)\r\n\r\n\n\n//# sourceURL=webpack://newproject/../Snob/snob-export.js?");

/***/ }),

/***/ "../Train/train-export.js":
/*!********************************!*\
  !*** ../Train/train-export.js ***!
  \********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"amount\": () => (/* binding */ amount),\n/* harmony export */   \"limit\": () => (/* binding */ limit),\n/* harmony export */   \"nextTrain\": () => (/* binding */ nextTrain),\n/* harmony export */   \"objTrainingPerBuild\": () => (/* binding */ objTrainingPerBuild),\n/* harmony export */   \"obj_train_units\": () => (/* binding */ obj_train_units),\n/* harmony export */   \"percent\": () => (/* binding */ percent),\n/* harmony export */   \"returnUnitsPerBuild\": () => (/* binding */ returnUnitsPerBuild)\n/* harmony export */ });\n/* harmony import */ var _general_util__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../general/util */ \"../general/util.js\");\n/* harmony import */ var _general_util_tw__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../general/util_tw */ \"../general/util_tw.js\");\n\r\n\r\n\r\n'use strict'\r\n\r\n/**\r\n * @param {html} html\r\n * @returns Object - todas as informações do recrutamento\r\n */\r\nconst obj_train_units = ( html = document ) => Array.from( html.querySelector(\"#train_form\").querySelectorAll('tr') ).filter(row => row.className != \"\").reduce((obj, row, i, arr) => {\r\n    const cols = Array.from(row.querySelectorAll('td'))\r\n    const unit = cols[0].querySelector( 'a' ).dataset.unit\r\n    obj[unit] = {\r\n        wood : Number( cols[ 1 ].querySelector(`#${ unit }_0_cost_wood`).textContent ),\r\n        stone : Number( cols[ 1 ].querySelector(`#${ unit }_0_cost_stone`).textContent ),\r\n        iron : Number( cols[ 1 ].querySelector(`#${ unit }_0_cost_iron`).textContent ),\r\n        pop : Number( cols[ 1 ].querySelector(`#${ unit }_0_cost_pop`).textContent ),\r\n        time : cols[ 1 ].querySelector(`#${ unit }_0_cost_time`).textContent,\r\n        amount : cols[ 2 ].textContent.split('/'),\r\n        max : Number( cols[ 3 ].querySelector( `#${ unit }_0_a` ).textContent.match(/[0-9]{1,}/ig) ? cols[ 3 ].querySelector( `#${ unit }_0_a` ).textContent.match(/[0-9]{1,}/ig)[0] : 0 )\r\n    }\r\n    return obj\r\n}, {})\r\nconst percent = ( unit, unit_training, unit_model ) => unit_model > 0\r\n    ? ( Number( obj_train_units()[ unit ].amount[1] ) + Number( unit_training ) ) / Number( unit_model )\r\n    : 1\r\nconst limit = pop => pop < 2 ? 50 : ( pop < 5 ? 20 : 10 )\r\nconst amount = ( unit ) => {\r\n    const objTrainUnits_ = obj_train_units()\r\n    const maxRecruit = Number( objTrainUnits_[unit].max )\r\n    const limitMax = limit( Number( objTrainUnits_[unit].pop ) )\r\n    return parseInt( maxRecruit * 0.25 ) < limitMax\r\n    ? parseInt( maxRecruit * 0.25 ) < 1\r\n    ? maxRecruit > 0 ? 1 \r\n    : 0\r\n    : parseInt( maxRecruit * 0.25 )\r\n    : limitMax\r\n}\r\nconst objTrainingPerBuild = ( build, html = document ) => Array.from( html.querySelector( `#replace_${ build }`).querySelectorAll('td:nth-child(1)')).reduce((obj, e) => {\r\n    if (e.innerText.trim() != \"\") {\r\n        const unit = e.childNodes[1].classList[2]\r\n        const qt = Number(e.textContent.match(/[0-9]{1,}/ig)[0].trim())\r\n        obj[unit] = obj[unit] ? obj[unit] + qt : qt\r\n    }\r\n    return obj\r\n},{})\r\nconst returnUnitsPerBuild = () => {\r\n    const objTrainUnits_ = obj_train_units()\r\n    const objUnits = { 'stable' : [], 'barracks' : [], 'garage' : [] }\r\n    for ( let unit in objTrainUnits_ ) {\r\n        if ( ['spy', 'light', 'marcher', 'heavy'].indexOf(unit) > -1 ) objUnits['stable'].push(unit)\r\n        if ( ['spear', 'sword', 'axe', 'archer'].indexOf(unit) > -1 ) objUnits['barracks'].push(unit)\r\n        if ( ['ram', 'catapult'].indexOf(unit) > -1 ) objUnits['garage'].push(unit)\r\n    }\r\n    return objUnits\r\n}\r\nconst nextTrain = (html = document) => Array.from(html.querySelectorAll(\"tr.lit\")).map( e => (0,_general_util__WEBPACK_IMPORTED_MODULE_0__.nDateTime)((0,_general_util_tw__WEBPACK_IMPORTED_MODULE_1__.return_ddmmaaaa)(e.innerText.split(\"\\t\")[2]), e.innerText.split(\"\\t\")[2].match(/[0-9]{1,2}:[0-9]{2}:[0-9]{2}/ig)[0])).sort()[0]\n\n//# sourceURL=webpack://newproject/../Train/train-export.js?");

/***/ }),

/***/ "../components/components.js":
/*!***********************************!*\
  !*** ../components/components.js ***!
  \***********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"alertCommad\": () => (/* binding */ alertCommad),\n/* harmony export */   \"checkModelEdit\": () => (/* binding */ checkModelEdit),\n/* harmony export */   \"checkPaused\": () => (/* binding */ checkPaused),\n/* harmony export */   \"error_box\": () => (/* binding */ error_box),\n/* harmony export */   \"go_container\": () => (/* binding */ go_container),\n/* harmony export */   \"insert_toggle\": () => (/* binding */ insert_toggle),\n/* harmony export */   \"jig_status\": () => (/* binding */ jig_status),\n/* harmony export */   \"statusGo\": () => (/* binding */ statusGo),\n/* harmony export */   \"toggleOnOff\": () => (/* binding */ toggleOnOff),\n/* harmony export */   \"updatingTicket\": () => (/* binding */ updatingTicket)\n/* harmony export */ });\n/* harmony import */ var _general_init_tw__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../general/init_tw */ \"../general/init_tw.js\");\n/* harmony import */ var _general_util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../general/util */ \"../general/util.js\");\n\r\n\r\n\r\n'use strict'\r\n\r\n/**\r\n * Uso Geral TW\r\n * Mostra mensagem de erro no html\r\n * @param {String} msg - texto da mensagem\r\n * @param {number} t - tempo em ms  que a msg vai ficar visível\r\n */\r\nfunction error_box( msg, t = 5000) {\r\n    if (document.querySelector( \"#content_value\" )) {\r\n        const errorBox = document.createElement( 'div' )\r\n        document.querySelector( \"#content_value\" ).prepend( errorBox )\r\n        errorBox.className = \"error_box\"\r\n        errorBox.innerHTML = `<div class=\"content\"> ${ msg }</div>`\r\n        setTimeout(() => errorBox.remove() , t )\r\n    }\r\n}\r\nconst go_container = () => \"width: auto; max-width: 1080px; background: #F7EED3 url(https://dsbr.innogamescdn.com/asset/1b9d83e8/graphic/index/main_bg.jpg) scroll right top repeat; position: relative; display: flow-root; justify-content: center flex-end; align-items: center; box-shadow: 1px 2px 3px 1px rgb(0 0 0 / 30%); border: 1px solid #7d510f; margin-bottom: 5px; padding: 5px;\"\r\nfunction jig_status() {\r\n    if (!document.querySelector( \"#status\" )) {\r\n        let area\r\n        if ( !_general_init_tw__WEBPACK_IMPORTED_MODULE_0__.premiumActive ) {\r\n            area = document.createElement( 'table' )\r\n            document.querySelector( \"#main_layout > tbody > tr.shadedBG > td.maincell > br\" ).insertAdjacentElement( 'afterend', area )\r\n            area.id =\"quickbar_outer\"\r\n            area.width = \"100%\"\r\n            area.style = `align=\"center\"`\r\n            area.cellspacing =\"0\"\r\n            let html = `<tbody><tr><td><table id=\"quickbar_inner\" style=\"border-collapse: collapse;\" width=\"100%\"><tbody><tr class=\"topborder\"><td class=\"left\"></td><td class=\"main\"></td><td class=\"right\"></td></tr><tr><td class=\"left\"></p></td><td id=\"quickbar_contents\" class=\"main\"><ul class=\"menu quickbar\"><li class=\"quickbar_item\" style = \"margin: 0 10px 0 10px;\" data-hotkey=\"1\"><span><a id=\"m1\" class=\"quickbar_link\" href=\"${_general_init_tw__WEBPACK_IMPORTED_MODULE_0__.link_mesma_aldeia}main\" title=\"Atalho 1\"><img class=\"quickbar_image\" data-src=\"https://dsbr.innogamescdn.com/asset/1b9d83e8/graphic//buildings/main.png\" alt=\"\" src=\"https://dsbr.innogamescdn.com/asset/1b9d83e8/graphic//buildings/main.png\">Principal</a></span></li><li class=\"quickbar_item\" style = \"margin: 0 10px 0 10px;\" data-hotkey=\"2\"><span><a id=\"m2\" class=\"quickbar_link\" href=\"${_general_init_tw__WEBPACK_IMPORTED_MODULE_0__.link_mesma_aldeia}train\" title=\"Atalho 2\"><img class=\"quickbar_image\" data-src=\"https://dsbr.innogamescdn.com/asset/1b9d83e8/graphic//buildings/barracks.png\" alt=\"\" src=\"https://dsbr.innogamescdn.com/asset/1b9d83e8/graphic//buildings/barracks.png\">Recrutar</a></span></li><li class=\"quickbar_item\" style = \"margin: 0 10px 0 10px;\" data-hotkey=\"3\"><span><a id=\"m3\" class=\"quickbar_link\" href=\"${_general_init_tw__WEBPACK_IMPORTED_MODULE_0__.link_mesma_aldeia}snob\" title=\"Atalho 3\"><img class=\"quickbar_image\" data-src=\"https://dsbr.innogamescdn.com/asset/1b9d83e8/graphic//buildings/snob.png\" alt=\"\" src=\"https://dsbr.innogamescdn.com/asset/1b9d83e8/graphic//buildings/snob.png\">Academia</a></span></li>`\r\n            html +=`<li class=\"quickbar_item\" style = \"margin: 0 10px 0 10px;\" data-hotkey=\"4\"><span><a id=\"m4\" class=\"quickbar_link\" href=\"${_general_init_tw__WEBPACK_IMPORTED_MODULE_0__.link_mesma_aldeia}market\" title=\"Atalho 4\"><img class=\"quickbar_image\" data-src=\"https://dsbr.innogamescdn.com/asset/1b9d83e8/graphic//buildings/market.png\" alt=\"\" src=\"https://dsbr.innogamescdn.com/asset/1b9d83e8/graphic//buildings/market.png\">Mercado</a></span></li><li class=\"quickbar_item\" style = \"margin: 0 10px 0 10px;\" data-hotkey=\"5\"><span><a id=\"m5\" class=\"quickbar_link\" href=\"${_general_init_tw__WEBPACK_IMPORTED_MODULE_0__.link_mesma_aldeia}smith\" title=\"Atalho 5\"><img class=\"quickbar_image\" data-src=\"https://dsbr.innogamescdn.com/asset/1b9d83e8/graphic//buildings/smith.png\" alt=\"\" src=\"https://dsbr.innogamescdn.com/asset/1b9d83e8/graphic//buildings/smith.png\">Ferreiro</a></span></li>`\r\n            if (_general_init_tw__WEBPACK_IMPORTED_MODULE_0__.scav_active) html +=`<li class=\"quickbar_item\" style = \"margin: 0 10px 0 10px;\" data-hotkey=\"6\"><span><a id=\"m6\" class=\"quickbar_link\" href=\"${_general_init_tw__WEBPACK_IMPORTED_MODULE_0__.link_mesma_aldeia}place&mode=scavenge\" title=\"Atalho 6\"><img class=\"quickbar_image\" data-src=\"https://dsbr.innogamescdn.com/asset/e2454ccc/graphic/buildings/storage.png\" alt=\"\" src=\"https://dsbr.innogamescdn.com/asset/e2454ccc/graphic/buildings/storage.png\">Coleta</a></span></li>`\r\n            html +=`<li class=\"quickbar_item\" style = \"margin: 0 10px 0 10px;\" data-hotkey=\"0\"><span><a id=\"m0\" class=\"quickbar_link\" href=\"${_general_init_tw__WEBPACK_IMPORTED_MODULE_0__.link_mesma_aldeia}place\" title=\"Atalho 0\"><img class=\"quickbar_image\" data-src=\"https://dsbr.innogamescdn.com/asset/1b9d83e8/graphic//buildings/place.png\" alt=\"\" src=\"https://dsbr.innogamescdn.com/asset/1b9d83e8/graphic//buildings/place.png\">Praça</a></span></li></ul></td><td class=\"right\"></td></tr><tr class=\"bottomborder\"><td class=\"left\"></td><td class=\"main\"></td><td class=\"right\"></td></tr><tr><td class=\"shadow\" colspan=\"3\"><div class=\"leftshadow\"></div><div class=\"rightshadow\"></div></td></tr></tbody></table></td></tr></tbody>`\r\n            area.innerHTML = html\r\n            if ( _general_init_tw__WEBPACK_IMPORTED_MODULE_0__.n_aldeias > 1 ) {\r\n                area = document.createElement('td')\r\n                document.querySelector(\"#menu_row2\").prepend(area)\r\n                area.className = \"box-item icon-box arrowCell\"\r\n                html = `<a id=\"village_switch_right\" class=\"village_switch_link\" href=\"/game.php?${_general_init_tw__WEBPACK_IMPORTED_MODULE_0__.mdf}&village=n${ _general_init_tw__WEBPACK_IMPORTED_MODULE_0__.gameData.village.id }&screen=${ _general_init_tw__WEBPACK_IMPORTED_MODULE_0__.gameData.screen }${ _general_init_tw__WEBPACK_IMPORTED_MODULE_0__.gameData.mode ? '&mode=' : '' }${ _general_init_tw__WEBPACK_IMPORTED_MODULE_0__.gameData.mode ? _general_init_tw__WEBPACK_IMPORTED_MODULE_0__.gameData.mode : '' }\" accesskey=\"d\"><span class=\"arrowRight\"></span></a>`\r\n                area.innerHTML = html\r\n                area = document.createElement('td')\r\n                document.querySelector(\"#menu_row2\").prepend(area)\r\n                area.className = \"box-item icon-box separate arrowCell\"\r\n                html = `<a id=\"village_switch_left\" class=\"village_switch_link\" href=\"/game.php?${_general_init_tw__WEBPACK_IMPORTED_MODULE_0__.mdf}&village=p${ _general_init_tw__WEBPACK_IMPORTED_MODULE_0__.gameData.village.id }&screen=${ _general_init_tw__WEBPACK_IMPORTED_MODULE_0__.gameData.screen }${ _general_init_tw__WEBPACK_IMPORTED_MODULE_0__.gameData.mode ? '&mode=' : '' }${ _general_init_tw__WEBPACK_IMPORTED_MODULE_0__.gameData.mode ? _general_init_tw__WEBPACK_IMPORTED_MODULE_0__.gameData.mode : '' }\" accesskey=\"a\"><span class=\"arrowLeft\"></span></a>`\r\n                area.innerHTML = html\r\n            // --- muda link para outra visualização\r\n            } else document.querySelector( \"#menu_row > td:nth-child(2) > a\" ).href = \"/game.php?village=55871&amp;screen=overview_villages\"\r\n            document.addEventListener('keydown', (e) => {\r\n                console.log(e)\r\n                console.log(e.key)\r\n                console.log(e.target.localName)\r\n                if ( document.querySelector( `#m${e.key}` ) && ( e.target.localName != 'input' && e.target.localName != 'textarea' ) ) self.location = document.querySelector( `#m${e.key}` ).href\r\n            })\r\n        }\r\n        area = document.createElement('div')\r\n        document.querySelector(\"#quickbar_inner > tbody > tr:nth-child(2) > td.left\").prepend(area)\r\n        area.id = \"status\"\r\n        if ( (0,_general_init_tw__WEBPACK_IMPORTED_MODULE_0__.timeZone)() != 0 ) {\r\n            const spanTimeZone = document.createElement(\"span\")\r\n            document.querySelector(\"#main_layout > tbody > tr.shadedBG > td.maincell > p\").prepend(spanTimeZone)\r\n            spanTimeZone.innerHTML = `Time Zone: <span id=\"time_zone\" style=\"color : red;\">${(0,_general_util__WEBPACK_IMPORTED_MODULE_1__.nSegStrHora)((0,_general_init_tw__WEBPACK_IMPORTED_MODULE_0__.timeZone)())}</span>`\r\n        }\r\n    }\r\n}\r\nconst statusGo = async (status) => (\r\n    await (0,_general_init_tw__WEBPACK_IMPORTED_MODULE_0__.getPlayers)().then((players, error) => {\r\n        if (error) throw error\r\n        const statusGo = document.querySelector( \"#status\" )\r\n        statusGo.style =\"width: 82px; height: 82px; margin: -2px -35px -4px 2px; color: orange; display: flex; align-items: center; text-align: center;\"\r\n        switch ( status ) {\r\n            case true:\r\n                statusGo.innerHTML = `<img src=\"https://github.com/UnrecognizedBR/public/blob/developer/icons/icon_green_60.png?raw=true\" alt=\"let's Go!\" style =\"width: 69px; height: 60px; margin-left: 2px; margin-top: -2px; margin-bottom: -4px; margin-right: -35px;\" >`\r\n                console.log( \"♻️ Let's Go! ON\" )\r\n                break\r\n            case false:\r\n                statusGo.innerHTML = `<img src=\"https://github.com/UnrecognizedBR/public/blob/developer/icons/icon_red_60.png?raw=true\" alt=\"let's Go!\" style =\"width: 69px; height: 60px; margin-left: 2px; margin-top: -2px; margin-bottom: -4px; margin-right: -35px;\" >`\r\n                console.log( \"⛔️ Let's Go OFF!\" )\r\n                break\r\n            case \"await\":\r\n                statusGo.innerHTML = `<img src=\"https://github.com/UnrecognizedBR/public/blob/developer/icons/icon_yelow_60.png?raw=true\" alt=\"let's Go!\" style =\"width: 69px; height: 60px; margin-left: 2px; margin-top: -2px; margin-bottom: -4px; margin-right: -35px;\" >`\r\n                console.log( \"⏳ Let's Go STOP!\" )\r\n                break\r\n            case \"command\":\r\n                statusGo.innerHTML = `<img src=\"https://github.com/UnrecognizedBR/public/blob/developer/icons/icon_yelow_60.png?raw=true\" alt=\"let's Go!\" style =\"width: 69px; height: 60px; margin-left: 2px; margin-top: -2px; margin-bottom: -4px; margin-right: -35px;\" >`\r\n                console.log( \"⚔️ Let's Go Command!\" )\r\n                break\r\n            default:\r\n                break\r\n        }\r\n        return players[_general_init_tw__WEBPACK_IMPORTED_MODULE_0__.gameData.player.id]\r\n    })\r\n)\r\nasync function toggleOnOff() {\r\n    if ( !document.querySelector( '#showOnOff' ) && document.querySelector(\"#quickbar_inner > tbody > tr:nth-child(2) > td.right\") ) {\r\n        await (0,_general_init_tw__WEBPACK_IMPORTED_MODULE_0__.getPlayers)().then((players, error) => {\r\n            if (error) throw error\r\n            const styleHtml = document.createElement( 'style' )\r\n            document.querySelector( \"head\" ).appendChild( styleHtml )\r\n            let html = `input.toggle_go { display: none; } input.toggle_go + label { display: inline-block; position: relative; box-shadow: inset 0 0 0px 0.1px black; height: 36px; width: 14px; background-color: red; border-radius: 7px; cursor: pointer; } input.toggle_go + label:before { content: \"\"; display: block; height: 14px; width: 14px; border-radius: 7px; background: rgba(191, 87, 17, 0); transition: 0.2s ease-in-out; } input.toggle_go + label:after { content: \"\"; position: absolute; height: 14px; width: 14px; top: 0; left: 0 px; border-radius: 7px; background: rgb(82, 73, 73); box-shadow: inset 0 0 0 2px red, 2px 4px rgba(59, 55, 55, 0.3); transition: 0.2s ease-in-out; } input.toggle_go:checked + label:before { box-shadow: inset 0 0 0px 0.1px black; height: 36px; background: #13bf11; } input.toggle_go:checked + label:after { top: 22px; box-shadow: inset 0 0 0 2px #13bf11, 2px 4px rgba(59, 55, 55, 0.3); }`\r\n            styleHtml.innerHTML = html\r\n            const showOnOff = document.createElement( 'div' )\r\n            document.querySelector(\"#quickbar_inner > tbody > tr:nth-child(2) > td.right\").appendChild( showOnOff )\r\n            showOnOff.innerHTML = `<input type=\"checkbox\" class=\"toggle_go\" name=\"active_go\" id=\"active_go\"><label for=\"active_go\" ></label>`\r\n            showOnOff.style = \"margin-right: 4pt;\"\r\n            showOnOff.id = \"showOnOff\"\r\n            const active_go = document.querySelector( \"#active_go\" )\r\n            active_go.checked = players[ _general_init_tw__WEBPACK_IMPORTED_MODULE_0__.gameData.player.id ].configs.active\r\n        })\r\n    }\r\n}\r\nfunction insert_toggle() {\r\n    if ( !document.querySelector( '#toggle' ) ) {\r\n        const styleHtml = document.createElement('style')\r\n        document.querySelector(\"head\").appendChild( styleHtml )\r\n        styleHtml.id = 'toggle'\r\n        styleHtml.innerHTML = `input.toggle { display: none; } input.toggle + label { display: inline-block; position: relative; box-shadow: inset 0 0 0px 0.1px black;; height: 12px; width: 24px; background-color: red; border-radius: 6px; margin-left: 1px; margin-top: 5px;  cursor: pointer;} input.toggle + label:before { content: \"\"; display: block; height: 12px; width: 12px; border-radius: 6px; background: rgba(191, 87, 17, 0); transition: 0.2s ease-in-out; } input.toggle + label:after { content: \"\"; position: absolute; height: 12px; width: 12px; top: 0; left: -2px; border-radius: 6px; background: rgb(82, 73, 73); box-shadow: inset 0 0 0 2px red, 2px 4px rgba(59, 55, 55, 0.3); transition: 0.2s ease-in-out; } input.toggle:checked + label:before { box-shadow: inset 0 0 0px 0.1px black; width: 24px; background: #13bf11; } input.toggle:checked + :after { left: 12px; box-shadow: inset 0 0 0 2px #13bf11, 2px 4px rgba(59, 55, 55, 0.3); }`\r\n    }\r\n}\r\nasync function updatingTicket( elem, ticket, timer ) {\r\n    setTimeout(() => {\r\n        if ( _general_init_tw__WEBPACK_IMPORTED_MODULE_0__.premiumActive ) {\r\n            if ( elem.innerText.trim() == 'Ataque' ) {\r\n                elem.querySelector(\"a.rename-icon\").click()\r\n                elem.querySelector(\"input[type=text]\").value = ticket\r\n                elem.querySelector(\"input.btn\").click()\r\n            }\r\n        } else {\r\n            if ( elem.textContent.trim() != ticket ) {\r\n                elem.textContent = ticket\r\n            }\r\n        }\r\n    }, (0,_general_util__WEBPACK_IMPORTED_MODULE_1__.random)( 20, 50 ) + timer )\r\n}\r\nfunction alertCommad( active ) {\r\n    if ( !document.querySelector(\"#alert_comm\") ) {\r\n        const alertCommand = document.createElement(\"div\")\r\n        document.querySelector(\"#quickbar_outer\").prepend(alertCommand)\r\n        alertCommand.id = \"alert_comm\"\r\n        alertCommand.style = \"width: 99,9%; max-width: 1080px; background: #e3d5b3 url(https://dsbr.innogamescdn.com/asset/1b9d83e8/graphic/index/main_bg.jpg) scroll right top repeat; position: relative; display: flow-root; justify-content: center flex-end; align-items: center; box-shadow: 1px 2px 3px 1px rgb(0 0 0 / 30%); border: 1px solid #7d510f; margin-bottom: 5px; padding: 5px; \"\r\n        alertCommand.innerText = \" ⚠️ Você tem comando para ser enviado no próximo minuto. Aguarde!\"\r\n        alertCommand.style = \"font-size: large; color: red;\"\r\n    }\r\n    if ( !active && document.querySelector(\"#alert_comm\") ) document.querySelector(\"#alert_comm\").remove()\r\n}\r\nfunction checkModelEdit() {\r\n    // --- editando modelo de construção\r\n    if ( _general_init_tw__WEBPACK_IMPORTED_MODULE_0__.gameData.screen == \"main\" && document.querySelector( \"#div_building\" )) {\r\n        if (!document.querySelector( \"#div_building\" ).hidden) return true\r\n    }\r\n    // --- editando modelo de tropas\r\n    if ( _general_init_tw__WEBPACK_IMPORTED_MODULE_0__.gameData.screen == \"train\" && _general_init_tw__WEBPACK_IMPORTED_MODULE_0__.gameData.mode != \"mass\" && document.querySelector(\"#div_recrutar\")) {\r\n        if (!document.querySelector(\"#div_recrutar\").hidden) return true\r\n    }\r\n    // --- editando configurações do mercado premium\r\n    if ((0,_general_init_tw__WEBPACK_IMPORTED_MODULE_0__.verifyCurrentScreen)(\"market&mode=exchange\") && document.querySelector(\"#view_config_premium\")) {\r\n        if (!document.querySelector(\"#view_config_premium\").hidden) return true\r\n    }\r\n    // --- configurando farm\r\n    if ((0,_general_init_tw__WEBPACK_IMPORTED_MODULE_0__.verifyCurrentScreen)(\"am_farm\") && document.querySelector(\"#settingsBody\")) {\r\n        if (document.querySelector(\"#settingsBody\").style.display = \"\") return true\r\n    }\r\n\r\n    return false\r\n}\r\nasync function checkPaused(active, n_loop) {\r\n    // --- não pausa na coleta\r\n    if ( (0,_general_init_tw__WEBPACK_IMPORTED_MODULE_0__.verifyCurrentScreen)(\"place&mode=scavenge\") ) {\r\n        await statusGo( active )\r\n        return false\r\n    }\r\n    // --- pausa o BOT quando está etiquetando e salvando novos ataques\r\n    if ( document.querySelector( '#audio_atk' ) ) return true\r\n    let check = false\r\n    // --- se passar a segunda vez irá retornar falso e BOT volta a funcionar\r\n    async function check_( check ) {\r\n        if ( check == true ) {\r\n            ! await (0,_general_util__WEBPACK_IMPORTED_MODULE_1__.getStorage)('pause')\r\n            ? await (0,_general_util__WEBPACK_IMPORTED_MODULE_1__.setStorage)('pause', n_loop )\r\n            : await (0,_general_util__WEBPACK_IMPORTED_MODULE_1__.getStorage)('pause') == n_loop\r\n            ? check = true\r\n            : check = false\r\n        }\r\n        if ( check == false && await (0,_general_util__WEBPACK_IMPORTED_MODULE_1__.getStorage)('pause') ) localStorage.removeItem(\"pause\")\r\n        return check\r\n    }\r\n    // --- enviando comando no mapa\r\n    if ( document.querySelector( \"#popup_box_popup_command\" ) ) {\r\n        check = true\r\n        document.querySelector( \"#ds_body\" ).addEventListener( 'click', function( e ) {\r\n            console.log( `Target: ${e.target.id} ${e.target.className}` )\r\n            if ( e.target.id === document.querySelector(\"#ds_body\").id\r\n            || e.target.id == \"troop_confirm_submit\"\r\n            || e.target.className == \"popup_box_close tooltip-delayed\"\r\n            || e.target.className == \"fader\" ) {\r\n                check = false\r\n            }\r\n        })\r\n    }\r\n    // --- verifica telas de edições configurações do BOT\r\n    if ( checkModelEdit() ) check = checkModelEdit()\r\n    // --- determina status e quando não for nenhuma das anteriores retorna falso\r\n    check_( check )\r\n    await statusGo( check == true ? \"await\" : active )\r\n    return check\r\n}\n\n//# sourceURL=webpack://newproject/../components/components.js?");

/***/ }),

/***/ "../components/loaderGame.js":
/*!***********************************!*\
  !*** ../components/loaderGame.js ***!
  \***********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"loaderGame\": () => (/* binding */ loaderGame)\n/* harmony export */ });\nclass LoaderGame {\r\n    css = `div.loader {\r\n        position: fixed; \r\n        top: 50%;\r\n        left: 50%;\r\n        margin-left: -12px;\r\n        margin-top: -12px;\r\n        z-index: 13000;\r\n    }\r\n    div.fader {\r\n        position: fixed;\r\n        height: 100%;\r\n        width: 100%;\r\n        background-color: black;\r\n        top: 0px;\r\n        left: 0px;\r\n        opacity: 0.6;\r\n        z-index: 12000;\r\n    }`\r\n    style = document.createElement(\"style\")\r\n    html = `<div id=\"loader\" class=\"loader\"><img src=\"graphic/throbber.gif\"></div>`\r\n    element = document.createElement(\"div\")\r\n    insert = () => {\r\n        document.head.append(this.style)\r\n        this.style.id = \"loader\"\r\n        this.style.innerHTML = this.css\r\n        document.body.append(this.element)\r\n        this.element.id = \"fader\"\r\n        this.element.className = \"fader\"\r\n        this.element.innerHTML = this.html\r\n    }\r\n    remove = () => {\r\n        this.style.remove()\r\n        this.element.remove()\r\n    }\r\n}\r\nconst loaderGame = new LoaderGame()\r\n        // width: 36px;\r\n        // height: 36px;\r\n\n\n//# sourceURL=webpack://newproject/../components/loaderGame.js?");

/***/ }),

/***/ "../components/notification.js":
/*!*************************************!*\
  !*** ../components/notification.js ***!
  \*************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"notification\": () => (/* binding */ notification),\n/* harmony export */   \"printTimer\": () => (/* binding */ printTimer)\n/* harmony export */ });\n/* harmony import */ var _general_init_tw__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../general/init_tw */ \"../general/init_tw.js\");\n/* harmony import */ var _general_util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../general/util */ \"../general/util.js\");\n\r\n\r\n\r\n'use strict'\r\n\r\nconst notification = () => { \r\n    const elemNotification = document.createElement(\"div\")\r\n    elemNotification.style = `display: flex; font-size: 10pt; font-family: Verdana, Arial; color: blue; position: fixed; right: 2px; bottom: 32px; z-index: 12200;`\r\n    elemNotification.id = `go-notification`\r\n    elemNotification.innerHTML = `\r\n    <div id=\"go-next-timer\" style=\"background-color: #764614c4; padding: 10px; width: 36px; height: 36px; border-radius: 100%; border-style: inset; border-color: cadetblue; text-shadow: 1px 1px 1px #000000;\">\r\n    <div id=\"print-timer\" style=\"margin-top: 8px; margin-left: 0px; font-size: 10pt; color: darkseagreen; text-align: center; cursor: pointer;\"></div>\r\n    </div>`\r\n    document.body.append(elemNotification)\r\n}\r\nlet z =`<div id=\"go-next\">\r\n<div id=\"go-next-schedules\">\r\n    <span>schedules</span>\r\n</div>\r\n<div id=\"go-stats\">\r\n    <span> qualquer stats</span>\r\n</div>\r\n</div>`\r\nconst printTimer = (timer) => {\r\n    const htmlThrobber = `<img src=\"graphic/throbber.gif\">`\r\n    const htmlTimer = `<span>${(0,_general_util__WEBPACK_IMPORTED_MODULE_1__.nSegStrHora)(parseInt(timer)).substring(3)}</span>`\r\n    const active_go = document.querySelector( \"#active_go\" )\r\n    const htmlPrintTimer = document.querySelector(\"#print-timer\")\r\n    const i = setInterval(() => {\r\n        if (htmlPrintTimer) {\r\n            clearInterval(i)\r\n            htmlPrintTimer.style[\"margin-top\"] = typeof timer != 'number' || isNaN(timer) || !timer || timer < 0 || timer >= 60 * 60 || (0,_general_init_tw__WEBPACK_IMPORTED_MODULE_0__.placeTryConfirm)() || !active_go.checked ? \"0px\" : \"8px\"\r\n            htmlPrintTimer.innerHTML = typeof timer != 'number' || isNaN(timer) || !timer || timer < 0 || timer >= 60 * 60 || (0,_general_init_tw__WEBPACK_IMPORTED_MODULE_0__.placeTryConfirm)() || !active_go.checked ? htmlThrobber : htmlTimer\r\n        }\r\n    }, 1)\r\n}\r\n\n\n//# sourceURL=webpack://newproject/../components/notification.js?");

/***/ }),

/***/ "../components/printMessage.js":
/*!*************************************!*\
  !*** ../components/printMessage.js ***!
  \*************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"printMessage\": () => (/* binding */ printMessage)\n/* harmony export */ });\nclass PrintMessage {\r\n    style = (arrColors) => `font-weight: normal;\r\n    font-size: 14px;\r\n    position: fixed;\r\n    text-align: center;\r\n    width: 450px;\r\n    top: 200px;\r\n    left: 50%;\r\n    margin: 0 0 0 -205px;\r\n    cursor: pointer;\r\n    color: #fff;\r\n    border: 1px solid ${arrColors[0]};\r\n    background: linear-gradient(to bottom, ${arrColors[1]} 100%);\r\n    z-index: 100000;\r\n    box-shadow: 1px 1px 2px 0px rgb(60 30 0 / 35%);\r\n    border-radius: 5px;\r\n    text-shadow: 1px 1px 1px #000000;`\r\n    run = function(message, time, arrColors) {\r\n        const divMessage = document.createElement(\"div\")\r\n        document.querySelector(\"body\").append(divMessage)\r\n        divMessage.id = \"div_message\"\r\n        divMessage.style = this.style(arrColors)\r\n        divMessage.innerHTML = `<p style=\"padding: 5px; margin: 0;\">${message}</p>`\r\n        setTimeout(() => {\r\n            divMessage.remove()\r\n        }, time)\r\n    }\r\n    success = (message, time) => this.run(message, time, [\"#204900\", \"#19a903 0%,#159002 44%,#0f6e00\"])\r\n    error = (message, time) => this.run(message, time, [\"#000\", \"#a90329 0%,#8f0222 44%,#6d0019\"])\r\n    warn = (message, time) => this.run(message, time, [\"#492f00\", \"#b59110 0%,#907102 44%,#6e3800\"])\r\n}\r\nconst printMessage = new PrintMessage()\n\n//# sourceURL=webpack://newproject/../components/printMessage.js?");

/***/ }),

/***/ "../general/init_login.js":
/*!********************************!*\
  !*** ../general/init_login.js ***!
  \********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"right_login_wrap\": () => (/* binding */ right_login_wrap),\n/* harmony export */   \"user_name\": () => (/* binding */ user_name)\n/* harmony export */ });\n\r\n\r\nconst right_login_wrap = !document.querySelector( \"#home div.right.login div.wrap\" ) ? false : document.querySelector( \"#home div.right.login div.wrap\" )\r\nconst user_name = !right_login_wrap ? false : right_login_wrap.querySelector(\"h2\").innerText == \"Login\" ? false : right_login_wrap.querySelector(\"h2\").innerText.split(\" \")[1]\r\n\n\n//# sourceURL=webpack://newproject/../general/init_login.js?");

/***/ }),

/***/ "../general/init_tw.js":
/*!*****************************!*\
  !*** ../general/init_tw.js ***!
  \*****************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"cansed\": () => (/* binding */ cansed),\n/* harmony export */   \"commandTypes\": () => (/* binding */ commandTypes),\n/* harmony export */   \"dateServer\": () => (/* binding */ dateServer),\n/* harmony export */   \"fake_limit\": () => (/* binding */ fake_limit),\n/* harmony export */   \"farmActive\": () => (/* binding */ farmActive),\n/* harmony export */   \"farm_active\": () => (/* binding */ farm_active),\n/* harmony export */   \"gameData\": () => (/* binding */ gameData),\n/* harmony export */   \"getExchange\": () => (/* binding */ getExchange),\n/* harmony export */   \"getPlayers\": () => (/* binding */ getPlayers),\n/* harmony export */   \"linkExchangeVillage\": () => (/* binding */ linkExchangeVillage),\n/* harmony export */   \"linkGoVillage\": () => (/* binding */ linkGoVillage),\n/* harmony export */   \"linkSameVillage\": () => (/* binding */ linkSameVillage),\n/* harmony export */   \"link_ir_aldeia\": () => (/* binding */ link_ir_aldeia),\n/* harmony export */   \"link_mesma_aldeia\": () => (/* binding */ link_mesma_aldeia),\n/* harmony export */   \"link_troca_aldeia\": () => (/* binding */ link_troca_aldeia),\n/* harmony export */   \"loyalty_per_hour\": () => (/* binding */ loyalty_per_hour),\n/* harmony export */   \"mdf\": () => (/* binding */ mdf),\n/* harmony export */   \"n_aldeias\": () => (/* binding */ n_aldeias),\n/* harmony export */   \"numVillages\": () => (/* binding */ numVillages),\n/* harmony export */   \"placeCommand\": () => (/* binding */ placeCommand),\n/* harmony export */   \"placeTryConfirm\": () => (/* binding */ placeTryConfirm),\n/* harmony export */   \"premiumActive\": () => (/* binding */ premiumActive),\n/* harmony export */   \"returnGameData\": () => (/* binding */ returnGameData),\n/* harmony export */   \"returnObjScrens\": () => (/* binding */ returnObjScrens),\n/* harmony export */   \"scav_active\": () => (/* binding */ scav_active),\n/* harmony export */   \"screen_atual\": () => (/* binding */ screen_atual),\n/* harmony export */   \"screens\": () => (/* binding */ screens),\n/* harmony export */   \"sendCommandActive\": () => (/* binding */ sendCommandActive),\n/* harmony export */   \"setExchange\": () => (/* binding */ setExchange),\n/* harmony export */   \"setPlayers\": () => (/* binding */ setPlayers),\n/* harmony export */   \"timeServer\": () => (/* binding */ timeServer),\n/* harmony export */   \"timeZone\": () => (/* binding */ timeZone),\n/* harmony export */   \"type_comm\": () => (/* binding */ type_comm),\n/* harmony export */   \"units_speed\": () => (/* binding */ units_speed),\n/* harmony export */   \"verConnection\": () => (/* binding */ verConnection),\n/* harmony export */   \"verifyCurrentScreen\": () => (/* binding */ verifyCurrentScreen),\n/* harmony export */   \"world_delay\": () => (/* binding */ world_delay),\n/* harmony export */   \"world_speed\": () => (/* binding */ world_speed),\n/* harmony export */   \"world_tech\": () => (/* binding */ world_tech)\n/* harmony export */ });\n/* harmony import */ var _util__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./util */ \"../general/util.js\");\n\r\n\r\n/**\r\n * Inicialização de diversas constantes globais do projeto\r\n**/\r\n\r\n'use strict'\r\n\r\nconst returnGameData = () => window.self.location.host.split(\".\")[0] === \"www\" \r\n    ? undefined \r\n    : document.head.innerHTML.indexOf( `{\"player\":{` ) == -1 \r\n    ? undefined \r\n    : JSON.parse( document.head.innerHTML.substring( document.head.innerHTML.indexOf( `{\"player\":{` ) ).split( \");\" )[ 0 ] )\r\nconst gameData = typeof( game_data ) == \"undefined\" ? returnGameData() : game_data\r\n\r\n// --- retorna data do servidor - pagina\r\nconst dateServer = () => document.querySelector(\"#serverDate\").textContent\r\n\r\n// --- retorna hora do servidor - página\r\nconst timeServer = () => document.querySelector(\"#serverTime\").textContent\r\n\r\n// --- retorna diferença em segundos entre a data e hora do servidor e do sistema\r\nconst timeZone = () => parseInt(Number(String((0,_util__WEBPACK_IMPORTED_MODULE_0__.nDateTime)( dateServer(), timeServer() ) - Date.now()).replace(/[0-9]{1,4}$/ig, \"0000\"))/1000)\r\n\r\n// --- retorna se está connectado ou não no jogo\r\nconst verConnection = !returnGameData() || !document.querySelector(\"#topContainer\") ? false : true\r\n\r\n// --- se pagina ou aba em foco\r\nconst cansed = false\r\n\r\n// --- conta premium ativa\r\nconst returnPremiumActive = () => gameData.features.Premium.active\r\nconst premiumActive = returnPremiumActive()\r\n// --- numero de aldeias\r\nconst n_aldeias = gameData.player.villages\r\nconst numVillages = gameData.player.villages\r\n\r\n// --- farm ativo\r\nconst farm_active = gameData.features.FarmAssistent.active\r\nconst farmActive = gameData.features.FarmAssistent.active\r\n\r\n// --- player em MDF\r\nconst mdf = window.location.search.indexOf( 't=' ) == -1 ? '' : window.location.search.substring( window.location.search.indexOf( 't=' ), window.location.search.indexOf( '&' ) )\r\n\r\n// --- link para troca de screen e aldeia\r\nconst link_troca_aldeia = `/game.php?${mdf}&village=n${gameData.village.id}&screen=`\r\nconst linkExchangeVillage = `/game.php?${mdf}&village=n${gameData.village.id}&screen=`\r\n\r\n// --- link para troca de screen na mesma aldeia\r\nconst link_mesma_aldeia = `/game.php?${mdf}&village=${gameData.village.id}&screen=`\r\nconst linkSameVillage = `/game.php?${mdf}&village=${gameData.village.id}&screen=`\r\n\r\n// --- link ir aldeia e screen informados\r\nconst link_ir_aldeia = ( villageID, screen ) => `/game.php?${mdf}&village=${ villageID }&screen=${ screen }`\r\nconst linkGoVillage = ( villageID, screen ) => `/game.php?${mdf}&village=${ villageID }&screen=${ screen }`\r\n\r\n// --- screen atual\r\nconst screen_atual = location.href.substring( location.href.indexOf( 'screen' ) + 7 )\r\nconst verifyCurrentScreen = screen => window.self.location.search.indexOf( screen ) != -1\r\n\r\n// --- tipos de commandos\r\nconst type_comm = [ \"Ataque\", \"Apoio\", \"NT-2 Nobres\", \"NT-3 Nobres\", \"NT-4 Nobres\", \"NT-5 Nobres\", \"Snip\", \"Farm Player\" ]\r\nconst commandTypes = [ \"Ataque\", \"Apoio\", \"NT-2 Nobres\", \"NT-3 Nobres\", \"NT-4 Nobres\", \"NT-5 Nobres\", \"Snip\", \"Farm Player\" ]\r\n\r\n// --- scavenge\r\nconst scav_active = localStorage.getItem(\"scav_active\") ? localStorage.getItem(\"scav_active\") : false\r\n\r\n// --- screns aonde irá rodar programações\r\nconst screens = [ \"am_farm\", \"main\", \"train\", \"place&mode=scavenge\" ]\r\n\r\n// --- retorna verdadeiro \r\nconst placeCommand = () => !!(document.querySelector(\"#command-data-form\") && document.querySelector(\"#command_target\"))\r\nconst placeTryConfirm = () => !!(document.querySelector(\"#command-data-form\") && !document.querySelector(\"#command_target\"))\r\nconst sendCommandActive = () => !!(document.querySelector(\"#alert_comm\"))\r\n// -------------------------- configurações do mundo -----------------------------\r\n\r\n// --- velocidade do mundo\r\nconst world_speed = localStorage.getItem(\"world_speed\") ? Number(localStorage.getItem(\"world_speed\")) : 0\r\n\r\n// --- velocidade das unidades\r\nconst units_speed = localStorage.getItem(\"units_speed\") ? Number(localStorage.getItem(\"units_speed\")) : 0\r\n\r\n\r\n// --- delay do mundo\r\nconst world_delay = localStorage.getItem(\"world_delay\") ? Number(localStorage.getItem(\"world_delay\")) : 0\r\n\r\n\r\n// --- lealdade por hora\r\nconst loyalty_per_hour = localStorage.getItem(\"loyalty_per_hour\") ? Number(localStorage.getItem(\"loyalty_per_hour\")) : 0\r\n\r\n// --- limite de fake\r\nconst fake_limit = localStorage.getItem(\"fake_limit\") ? Number(localStorage.getItem(\"fake_limit\")) : 0\r\n\r\n// --- tipo de pesquisa\r\nconst world_tech = localStorage.getItem(\"world_tech\") ? Number(localStorage.getItem(\"world_tech\")) : 0\r\n\r\n// --- obj das configurações para cada screen\r\nconst returnObjScrens = () => {\r\n    const objScreens = {}\r\n    function newObjScreen( name, screen, title, img, active ) {\r\n        screen, title, img, active\r\n        objScreens[ name ] = {\r\n            screen: screen,\r\n            title: title,\r\n            img: img,\r\n            active: active\r\n        }\r\n    }\r\n    newObjScreen( \"main\", \"main\", \"Evolução\", \"https://dsbr.innogamescdn.com/asset/ed983c12/graphic/buildings/main.png\", true )\r\n    newObjScreen( 'train', 'train', 'Recrutamento de tropas', \"https://dsbr.innogamescdn.com/asset/1b9d83e8/graphic//buildings/barracks.png\",  gameData.village.buildings.barracks > 0 )\r\n    newObjScreen( 'farm', \"am_farm\", 'Assistente de saque', \"https://dsbr.innogamescdn.com/asset/ed983c12/graphic/icons/farm_assistent.png\", farm_active )\r\n    newObjScreen( 'scav', \"place&mode=scavenge\", 'Coleta de recursos', \"https://dsbr.innogamescdn.com/asset/e2454ccc/graphic/buildings/storage.png\", scav_active )\r\n    newObjScreen( 'exchange', 'market&mode=exchange', 'Mercado premium', \"https://dsbr.innogamescdn.com/asset/f0f06311/graphic/premium/coinbag_18x18.png\", gameData.village.buildings.market > 0 )\r\n    // newObjScreen( \"snob\", \"snob\", \"Cunhagem de moedas\", \"https://dsbr.innogamescdn.com/asset/234001c2/graphic/buildings/snob.png\", gameData.village.buildings.snob > 0 )\r\n\r\n    return objScreens\r\n}\r\n// --------------------------- Objeto principal do projeto ------------------------\r\nasync function newPlayer() {\r\n    const players = {\r\n        [ gameData.player.id ] : {\r\n            villageIDs : [],\r\n            villages : {},\r\n            schedules : {},\r\n            configs : {\r\n                n_loop : 0,\r\n                n_atk : 0,\r\n                active : true,\r\n                farm : { active: true, season: 120, timer: 42 },\r\n                msg : { place : true },\r\n                snob : { active: true, season : 15 },\r\n                scav: true,\r\n                main: true,\r\n                train: true,\r\n                command : true,\r\n                overview : 45,\r\n                map : 45,\r\n                report : 45,\r\n                mail : 90,\r\n                market : 45,\r\n                ranking: 45,\r\n                ally: 45,\r\n                forum : 90,\r\n                info_player : 45,\r\n                mentor : 90,\r\n                premium : 45,\r\n                premium : 45,\r\n                transfer : 240,\r\n                settings : 45,\r\n                place_command : 60,\r\n                place: 45,\r\n                event : 90\r\n            }\r\n        }\r\n    }\r\n    return await (0,_util__WEBPACK_IMPORTED_MODULE_0__.setStorage)( \"players\", players ).then((players, error) => error ? error : players)\r\n}\r\nconst getPlayers = async () => await (0,_util__WEBPACK_IMPORTED_MODULE_0__.getStorage)(\"players\")\r\n    ? await (0,_util__WEBPACK_IMPORTED_MODULE_0__.getStorage)(\"players\")\r\n    .then( async ( players, error ) => error\r\n        ? error\r\n        :  false\r\n        ? 0\r\n        : players[gameData.player.id]\r\n        ? players\r\n        : await newPlayer()\r\n    )\r\n    : await newPlayer()\r\n\r\nconst setPlayers = async (players) => await (0,_util__WEBPACK_IMPORTED_MODULE_0__.setStorage)(\"players\", players).then((players, error) => error ? error : players)\r\n// --------------------------- New Object Exchange ---------------------------------\r\nasync function newExchange() {\r\n    const exchange = {\r\n        [ gameData.player.id ] : {\r\n            villages : {}\r\n        }\r\n    }\r\n    return await (0,_util__WEBPACK_IMPORTED_MODULE_0__.setStorage)( \"exchange\", exchange ).then((exchange, error) => error ? error : exchange)\r\n}\r\nconst getExchange = async () => await (0,_util__WEBPACK_IMPORTED_MODULE_0__.getStorage)(\"exchange\")\r\n    ? await (0,_util__WEBPACK_IMPORTED_MODULE_0__.getStorage)(\"exchange\")\r\n    .then( async ( exchange, error ) => error\r\n        ? error\r\n        :  false\r\n        ? 0\r\n        : exchange[gameData.player.id]\r\n        ? exchange\r\n        : await newExchange()\r\n    )\r\n    : await newExchange()\r\n\r\nconst setExchange = async (exchange) => await (0,_util__WEBPACK_IMPORTED_MODULE_0__.setStorage)(\"exchange\", exchange).then((exchange, error) => error ? error : exchange )\r\n// --------------------------- Object Modelos ---------------------------------\r\n\n\n//# sourceURL=webpack://newproject/../general/init_tw.js?");

/***/ }),

/***/ "../general/translator.js":
/*!********************************!*\
  !*** ../general/translator.js ***!
  \********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"trans_max_buildings\": () => (/* binding */ trans_max_buildings),\n/* harmony export */   \"trans_units\": () => (/* binding */ trans_units),\n/* harmony export */   \"translation\": () => (/* binding */ translation),\n/* harmony export */   \"twServer\": () => (/* binding */ twServer)\n/* harmony export */ });\n\r\n\r\nconst twServer = window.self.location.host.split(\".\")[0].match(/^[a-z]{2}/ig)[0]\r\n\r\nconst translation = {\r\n    en: {\r\n        monthLiteral: [ 'jan', 'feb', 'mar', 'apr', 'may', 'jun', 'jul', 'ago', 'sep', 'out', 'nov', 'dec' ],\r\n        today : \"today\",\r\n        tomorrow : \"tomorrow\",\r\n        build : ['Main', 'Barracks', 'Stable', 'Garage','First church', 'Church', 'Watchtower', 'smith', 'Snob', 'Place', 'Statue', 'Market', 'Wood', 'Stone', 'Iron', 'Farm', 'Storage', 'Hide', 'Wall', 'university'],\r\n        main : [\r\n            \"Edit settings for this village\",\r\n            \"Enable village building\",\r\n            \"Disable village construction\",\r\n            \"Enable or disable building this village\",\r\n            \"Save Template\",\r\n            \"Save this village's construction model\",\r\n            \"Model saved!\"\r\n        ],\r\n        market : { \r\n            confirm : [ \"sell\", \"buy\" ],\r\n        }\r\n    },\r\n    us: {\r\n        monthLiteral: [ 'jan', 'feb', 'mar', 'apr', 'may', 'jun', 'jul', 'ago', 'sep', 'out', 'nov', 'dec' ],\r\n        today : \"today\",\r\n        tomorrow : \"tomorrow\",\r\n        build : ['Main', 'Barracks', 'Stable', 'Garage','First church', 'Church', 'Watchtower', 'smith', 'Snob', 'Place', 'Statue', 'Market', 'Wood', 'Stone', 'Iron', 'Farm', 'Storage', 'Hide', 'Wall', 'university'],\r\n        main : [\r\n            \"Edit settings for this village\",\r\n            \"Enable village building\",\r\n            \"Disable village construction\",\r\n            \"Enable or disable building this village\",\r\n            \"Save Template\",\r\n            \"Save this village's construction model\",\r\n            \"Model saved!\"\r\n        ],\r\n        market : { \r\n            confirm : [ \"sell\", \"buy\" ]\r\n        }\r\n    },\r\n    br: {\r\n        monthLiteral: [ 'jan', 'fev', 'mar', 'abr', 'mai', 'jun', 'jul', 'ago', 'set', 'out', 'nov', 'dez' ],\r\n        today : \"hoje\",\r\n        tomorrow : \"amanhã\",\r\n        build : ['Edifício Principal', 'Quartel', 'Estábulo', 'Oficina','Primeira igreja', 'Igreja', 'Torre de vigia', 'Ferreiro', 'Academia', 'Praça de reunião', 'Estátua', 'Mercado', 'Bosque', 'Poço de argila', 'Mina de ferro', 'Fazenda', 'Armazém', 'Esconderijo', 'Muralha', 'universidade'],\r\n        main : [\r\n            \"Editar configurações para esta aldeia\",\r\n            \"Ativar a construção da aldeia\",\r\n            \"Desativar a construção da aldeia\",\r\n            \"Ativar ou desativar a construção desta vila\",\r\n            \"Salvar modelo\",\r\n            \"Salvar modelo de contrução desta aldeia\",\r\n            \"Modelo salvo!\"\r\n        ],\r\n        market : {\r\n            confirm : [ \"vender\", \"comprar\" ]\r\n        }\r\n    },\r\n    pt: {\r\n        monthLiteral: [ 'jan', 'fev', 'mar', 'abr', 'mai', 'jun', 'jul', 'ago', 'set', 'out', 'nov', 'dez' ],\r\n        today : \"hoje\",\r\n        tomorrow : \"amanhã\",\r\n        build : ['Edifício Principal', 'Quartel', 'Estábulo', 'Oficina','Primeira igreja', 'Igreja', 'Torre de vigia', 'Ferreiro', 'Academia', 'Praça de reunião', 'Estátua', 'Mercado', 'Bosque', 'Poço de argila', 'Mina de ferro', 'Fazenda', 'Armazém', 'Esconderijo', 'Muralha', 'universidade'],\r\n        main : [\r\n            \"Editar configurações para esta aldeia\",\r\n            \"Ativar a construção da aldeia\",\r\n            \"Desativar a construção da aldeia\",\r\n            \"Ativar ou desativar a construção desta vila\",\r\n            \"Salvar modelo\",\r\n            \"Salvar modelo de contrução desta aldeia\",\r\n            \"Modelo salvo!\"\r\n        ],\r\n        market : {\r\n            confirm : [ \"vender\", \"comprar\" ]\r\n        }\r\n    },\r\n    tr: {\r\n        monthLiteral: [ 'Oca', 'Şub', 'Mar', 'Nis', 'May', 'Haz', 'Tem', 'Ağu', 'Eyl', 'Eki', 'Kas', 'Ara'],\r\n        today : \"bugün\",\r\n        tomorrow : \"yarın\",\r\n        build : ['Ana Bina', 'Kışla', 'Ahır', 'Atölye', 'Birinci Kilise', 'Kilise', 'Gözetleme kulesi', 'Demirci', 'Akademi', 'Buluşma meydanı', 'Heykel' , 'Pazar', 'Oduncu', 'Kil ocağı', 'Demir madeni', 'Çiftlik', 'Depo', 'Gizli depo', 'Sur', 'Üniversite'],\r\n        main : [\r\n            \"Bu köy için ayarları düzenle\",\r\n            \"Köy inşasını etkinleştir\",\r\n            \"Köy inşaatını devre dışı bırak\",\r\n            \"Bu köyü inşa etmeyi etkinleştir veya devre dışı bırak\",\r\n            \"Şablonu Kaydet\",\r\n            \"Bu köyün inşaat modelini kaydet\",\r\n            \"Model kaydedildi!\"\r\n        ],\r\n        market : {\r\n            confirm : [ \"sat\", \"için\" ]\r\n        }\r\n    },\r\n    it: {\r\n        monthLiteral: [ 'Gen', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Set', 'Oct', 'Nov', 'Dec'],\r\n        today : \"oggi\",\r\n        tomorrow : \"Domani\",\r\n        build : ['Quartier Generale', 'Caserma', 'Stalla', 'Officina', 'Prima Chiesa', 'Chiesa', 'Torre di Guardia', 'Fabbro', 'Accademia', 'Raduno', 'Statua', 'Mercato', 'Legno', 'Pietra', 'Ferro', 'Fattoria', 'Magazzino', 'Nascondiglio', 'Mura', 'Università'],\r\n        main : [\r\n            \"Modifica impostazioni per questo villaggio\",\r\n            \"Abilita la costruzione del villaggio\",\r\n            \"Disabilita la costruzione del villaggio\",\r\n            \"Abilita o disabilita la costruzione di questo villaggio\",\r\n            \"Salva modello\",\r\n            \"Salva il modello di costruzione di questo villaggio\",\r\n            \"Modello salvato!\"\r\n        ],\r\n        market : { \r\n            confirm : [ \"vendi\", \"compra\" ],\r\n        }\r\n    },\r\n}\r\nconst trans_max_buildings = {\r\n    'main' : { trans: translation[twServer].build[0], max: 30 },\r\n    'barracks' : { trans: translation[twServer].build[1], max: 25 },\r\n    'stable' : { trans: translation[twServer].build[2], max: 20 },\r\n    'garage' : { trans: translation[twServer].build[3], max: 15 },\r\n    'church_f' : { trans : translation[twServer].build[4], max: 1 },\r\n    'church' : { trans: translation[twServer].build[5], max: 3 },\r\n    'watchtower' : { trans: translation[twServer].build[6], max: 20 },\r\n    'smith' : { trans: translation[twServer].build[7], max: 20 },\r\n    'snob' : { trans: translation[twServer].build[8], max: 1 },\r\n    'place' : { trans: translation[twServer].build[9], max: 1 },\r\n    'statue' : { trans: translation[twServer].build[10], max: 1 },\r\n    'market' : { trans: translation[twServer].build[11], max: 25 },\r\n    'wood' : { trans: translation[twServer].build[12], max: 30 },\r\n    'stone' : { trans: translation[twServer].build[13], max: 30 },\r\n    'iron' : { trans: translation[twServer].build[14], max: 30 },\r\n    'farm' : { trans: translation[twServer].build[15], max: 30 },\r\n    'storage' : { trans: translation[twServer].build[16], max: 30 },\r\n    'hide' : { trans: translation[twServer].build[17], max: 10 },\r\n    'wall' : { trans: translation[twServer].build[18], max: 20 },\r\n    'university' : { trans: translation[twServer].build[19], max: 1 }\r\n}\r\n// --- obj com tradução dos nomes das unidades e pop gasta para 1 unidade recrutada\r\nconst trans_units = {\r\n    'spear': { trans: 'Lanceiro', pop: 1 },\r\n    'sword': { trans: 'Espada', pop: 1 },\r\n    'axe': { trans: 'Bárbaro', pop: 1 },\r\n    'archer': { trans: 'Arqueiro', pop: 1 },\r\n    'spy': { trans: 'Explorador', pop: 2 },\r\n    'light': { trans: 'Cavalaria Leve', pop: 4 },\r\n    'marcher': { trans: 'Arqueiro a cavalo', pop: 5 },\r\n    'heavy': { trans: 'Cavalaria pesada', pop: 6 },\r\n    'ram': { trans: 'Ariete', pop: 5 },\r\n    'catapult': { trans: 'Catapulta', pop: 8 },\r\n    'knight': { trans: 'Paladino', pop: 10 },\r\n    'snob': { trans: 'Nobre', pop: 100 },\r\n}\r\n\n\n//# sourceURL=webpack://newproject/../general/translator.js?");

/***/ }),

/***/ "../general/util.js":
/*!**************************!*\
  !*** ../general/util.js ***!
  \**************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"cTimeToSeg\": () => (/* binding */ cTimeToSeg),\n/* harmony export */   \"getStorage\": () => (/* binding */ getStorage),\n/* harmony export */   \"nDateTime\": () => (/* binding */ nDateTime),\n/* harmony export */   \"nSegStrHora\": () => (/* binding */ nSegStrHora),\n/* harmony export */   \"pressKey\": () => (/* binding */ pressKey),\n/* harmony export */   \"random\": () => (/* binding */ random),\n/* harmony export */   \"setInputDateTime\": () => (/* binding */ setInputDateTime),\n/* harmony export */   \"setMillis\": () => (/* binding */ setMillis),\n/* harmony export */   \"setStorage\": () => (/* binding */ setStorage),\n/* harmony export */   \"sleep\": () => (/* binding */ sleep),\n/* harmony export */   \"strTimeToSec\": () => (/* binding */ strTimeToSec),\n/* harmony export */   \"waitCompleteLoad\": () => (/* binding */ waitCompleteLoad)\n/* harmony export */ });\n\r\n\r\n/**\r\n * Uso geral\r\n * Calcula o numero de segundos de uma string hora\r\n * \r\n * @param {String} string - uma string hora (hh:mm:ss)\r\n * @returns Number - segundos\r\n */\r\nconst strTimeToSec = string => {\r\n    let hora = Number( string.substring( 0, string.length - 6 ) ) * 3600\r\n    let min = Number( string.substring( string.length - 5, string.length - 3 ) ) * 60\r\n    return Number( string.substring( string.length - 2, string.length ) ) + hora + min\r\n}\r\n\r\n/**\r\n * Uso geral\r\n * @param {String} c_data \r\n * @param {String} c_hora \r\n * @param {String} c_ms \r\n * @returns Number - milesegundos representando as string data e/ou hora e/ou milisegundos informado\r\n */\r\n\r\nconst setInputDateTime = ( cDate, cTime, cMs ) => `${cDate.split(\"/\")[2]}-${cDate.split(\"/\")[1].length == 1 ? \"0\" : \"\"}${cDate.split(\"/\")[1]}-${cDate.split(\"/\")[0]}T${cTime.length == 7 ? \"0\" : \"\"}${cTime}.${cMs ? cMs : \"000\"}`\r\n\r\nconst nDateTime = ( c_data, c_hora = \"00:00:00\", c_ms = \"000\" ) => {\r\n    let n_hh = c_hora ? Number( c_hora.substring( 0, 2 ) ) : 0\r\n    let n_mm = c_hora ? Number( c_hora.substring( 3, 5) ) : 0\r\n    let n_ss = c_hora ? Number( c_hora.substring( 6, 8) ) : 0\r\n    let n_ms = c_hora ? c_hora.length > 8 ? Number ( c_hora.substring( 9, c_hora.length ) ) : 0 : 0\r\n    if ( c_ms ) n_ms = Number( c_ms )\r\n    let n_Dia = Number( c_data.substring( 0, 2 ) )\r\n    let n_Mes = Number( c_data.substring( 3, 5 ) ) - 1\r\n    let n_Ano = Number( c_data.substring( 6, c_data.length) )\r\n    return Date.parse( new Date( n_Ano, n_Mes, n_Dia, n_hh, n_mm, n_ss ) ) + n_ms\r\n}\r\n/**\r\n * Uso Geral\r\n * @param {Number} s - numero de segundos\r\n * @returns String - no formato 'hh:mm:ss'\r\n */\r\nconst nSegStrHora = ( s ) => {\r\n    let h = parseInt( s / 3600 )\r\n    let m = parseInt( ( s - ( h * 3600 ) ) / 60 )\r\n    s = parseInt( s - ( h * 3600 ) - ( m * 60 ) )\r\n    if ( h < 10 ) h = '0' + h\r\n    if ( m < 10 ) m = '0' + m\r\n    if ( s < 10 ) s = '0' + s\r\n    return `${h}:${m}:${s}`\r\n}\r\n\r\n/**\r\n * Uso Geral\r\n * @param {String} c_hora \r\n * @returns Number - de segundos da hora\r\n */\r\nconst cTimeToSeg = ( c_hora ) => {\r\n    let l = c_hora.length\r\n    let n_hh = Number( c_hora.substring( 0, l - 6 ) )\r\n    let n_mm = Number( c_hora.substring( l - 5, l - 3 ) )\r\n    let n_ss = Number( c_hora.substring( l - 2, l ) )\r\n    \r\n    return Number(( n_hh * 3600 ) + ( n_mm * 60 ) + n_ss)\r\n}\r\n\r\n/**\r\n * Uso geral\r\n * @param {Number} min - milisegundos\r\n * @param {Number} max - milisegundos\r\n * @returns Number - Aleatório entre min e max\r\n */\r\nconst random = ( min, max ) => {\r\n    min = Math.ceil( min );\r\n    max = Math.floor( max );\r\n    return Math.floor( Math.random() * ( max - min + 1 ) ) + min;\r\n}\r\n\r\nvar millis = 0 //utilizado na função setMillis\r\n/**\r\n * Uso geral\r\n * \r\n * @param {Number} added_time \r\n * @returns Number - retorna um numero acrescido\r\n */\r\nfunction setMillis( added_time = 200 ) {\r\n    let tmp = millis;\r\n    millis += added_time;\r\n    return tmp;\r\n}\r\n\r\n/**\r\n * Uso Geral\r\n * Faz uma pausa na execussão \r\n * @param {Number} seg \r\n * @returns \r\n */\r\nasync function sleep(seg) {\r\n    return new Promise((resolve, reject) => {\r\n        setTimeout(() => {\r\n            resolve()\r\n        }, seg * 1000);\r\n    });\r\n}\r\n\r\nasync function waitCompleteLoad( fnCalback ) {\r\n    console.log(\"waitCompleteLoad...\")\r\n    if ( document.readyState == \"loading\" || document.readyState == \"interactive\" ) {\r\n        const completeLoad = setInterval( async () => {\r\n            if ( document.readyState == \"complete\" ) {\r\n                clearInterval(completeLoad)\r\n                fnCalback\r\n            }\r\n        }, 1);\r\n    } else if ( document.readyState == \"complete\" ) {\r\n        fnCalback\r\n    }\r\n}\r\nfunction press(key) {\r\n    $.fn.triggerKeyPress = function (keys) {\r\n        var keydownEvent = $.Event(\"keydown\");\r\n        var $self = this;\r\n        $.each(keys, function(index, value) {\r\n            var simulatedKey = $.extend({}, keydownEvent, {which: value, keyCode: value});\r\n            $self.trigger(simulatedKey);\r\n        });\r\n    }\r\n    $('body').triggerKeyPress([key, key])\r\n}\r\nconst pressKey = key => press(key)\r\n\r\nconst setStorage = async ( key, value ) => {\r\n    if ( typeof key != \"string\" || value === undefined ) {\r\n        if ( value === undefined ) console.error( \"value error: \", value )\r\n        if ( typeof key != \"string\" ) console.error( \"key error: \", key )\r\n        return error\r\n    }\r\n    const oldValue = JSON.parse(localStorage.getItem( key ))\r\n    const strValue = JSON.stringify( value )\r\n    localStorage.setItem( key, strValue )\r\n    const strNewValue = localStorage.getItem( key )\r\n    if ( strNewValue === strValue ) {\r\n        const newValue = JSON.parse( strNewValue )\r\n        console.log([ { \"newValue\": newValue }, { \"oldValue\": oldValue } ])\r\n        return newValue\r\n    }\r\n    return value\r\n}\r\nconst getStorage = async ( key ) => {\r\n    if (!key) {\r\n        console.error(key)\r\n        return error\r\n    }\r\n    const value = JSON.parse(localStorage.getItem( key ))\r\n    if ( value === undefined ) {\r\n        console.error( value )\r\n        return false\r\n    } else {\r\n        return value\r\n    }\r\n}\r\n\n\n//# sourceURL=webpack://newproject/../general/util.js?");

/***/ }),

/***/ "../general/util_tw.js":
/*!*****************************!*\
  !*** ../general/util_tw.js ***!
  \*****************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"baseUnitSpeed\": () => (/* binding */ baseUnitSpeed),\n/* harmony export */   \"baseUnitSpeed2\": () => (/* binding */ baseUnitSpeed2),\n/* harmony export */   \"daily_bonus\": () => (/* binding */ daily_bonus),\n/* harmony export */   \"doPlay\": () => (/* binding */ doPlay),\n/* harmony export */   \"editTicket\": () => (/* binding */ editTicket),\n/* harmony export */   \"findAttackSpeed\": () => (/* binding */ findAttackSpeed),\n/* harmony export */   \"getBackTime\": () => (/* binding */ getBackTime),\n/* harmony export */   \"getDistance\": () => (/* binding */ getDistance),\n/* harmony export */   \"getLaunchTime\": () => (/* binding */ getLaunchTime),\n/* harmony export */   \"getTravelTimeInSecond\": () => (/* binding */ getTravelTimeInSecond),\n/* harmony export */   \"return_ddmmaaaa\": () => (/* binding */ return_ddmmaaaa)\n/* harmony export */ });\n/* harmony import */ var _init_tw__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./init_tw */ \"../general/init_tw.js\");\n/* harmony import */ var _translator__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./translator */ \"../general/translator.js\");\n/* harmony import */ var _util__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./util */ \"../general/util.js\");\n\r\n\r\n\r\n\r\n'use strict'\r\n\r\nconst return_ddmmaaaa = strDate => {\r\n    strDate = strDate.trim().toLowerCase()\r\n    if ( strDate.indexOf(_translator__WEBPACK_IMPORTED_MODULE_1__.translation[_translator__WEBPACK_IMPORTED_MODULE_1__.twServer].today) != -1 ) return (0,_init_tw__WEBPACK_IMPORTED_MODULE_0__.dateServer)()\r\n    if ( strDate.indexOf(_translator__WEBPACK_IMPORTED_MODULE_1__.translation[_translator__WEBPACK_IMPORTED_MODULE_1__.twServer].tomorrow) != -1 ) return new Date( (0,_util__WEBPACK_IMPORTED_MODULE_2__.nDateTime)( (0,_init_tw__WEBPACK_IMPORTED_MODULE_0__.dateServer)() ) + ( 1000 * 60 * 60 * 24 )).toLocaleDateString()\r\n    if ( !!strDate.match(/[0-9]{1,2}[.|/][0-9]{1,2}[.|/][0-9]{0,4}/ig) ) {\r\n        const arrDate = strDate.match( /[0-9]{1,2}[.|/][0-9]{1,2}[.|/][0-9]{0,4}/ig )[0].split(/[.|/]/)\r\n        if ( !arrDate[2] ) arrDate[2] = new Date((0,_util__WEBPACK_IMPORTED_MODULE_2__.nDateTime)((0,_init_tw__WEBPACK_IMPORTED_MODULE_0__.dateServer)())).getFullYear()\r\n        return new Date(`${arrDate[1]}.${arrDate[0]}.${arrDate[2]}`).toLocaleDateString()\r\n    }\r\n    const ind = _translator__WEBPACK_IMPORTED_MODULE_1__.translation[_translator__WEBPACK_IMPORTED_MODULE_1__.twServer].monthLiteral.indexOf(strDate.match( /[a-z]{3}/ig )[0])\r\n    if ( ind != -1 ) {\r\n        if ( new Date(strDate.replace(_translator__WEBPACK_IMPORTED_MODULE_1__.translation[_translator__WEBPACK_IMPORTED_MODULE_1__.twServer].monthLiteral[ ind ], _translator__WEBPACK_IMPORTED_MODULE_1__.translation.en.monthLiteral[ ind ])).toLocaleDateString() != \"Invalid Date\" ) {\r\n            return new Date(strDate.replace(_translator__WEBPACK_IMPORTED_MODULE_1__.translation[_translator__WEBPACK_IMPORTED_MODULE_1__.twServer].monthLiteral[ ind ], _translator__WEBPACK_IMPORTED_MODULE_1__.translation.en.monthLiteral[ ind ])).toLocaleDateString()\r\n        } else {\r\n            return new Date(`${String( ind + 1 ).length > 1 ? String( ind + 1 ) : `0${String( ind + 1 )}`}.${strDate.match(/[0-9]{1,2}/ig)[0]}.${strDate.match(/[0-9]{2,4}$/ig)[0]}`).toLocaleDateString()\r\n        }\r\n    }\r\n}\r\n/**\r\n * Uso Geral Tw\r\n * Coleta o Bonus diário na timeServer() informada\r\n * @param {String} config_time \r\n * @returns \r\n */\r\nasync function daily_bonus( config_time = '00:01:00' ) {\r\n    await (0,_init_tw__WEBPACK_IMPORTED_MODULE_0__.getPlayers)().then(async(players, error) => {\r\n        if (error) throw error\r\n        if ( document.querySelector(\"#daily_bonus_content\") ) {\r\n            const dailyBonusContent = document.querySelector(\"#daily_bonus_content\")\r\n            const dailyInt = setInterval(() => {\r\n                if ( dailyBonusContent.querySelector(\"a.btn.btn-default\") ) { \r\n                    dailyBonusContent.querySelector(\"a.btn.btn-default\").click()\r\n                } else {\r\n                    if ( players[ _init_tw__WEBPACK_IMPORTED_MODULE_0__.gameData.player.id ].villages[_init_tw__WEBPACK_IMPORTED_MODULE_0__.gameData.village.id].exchange && players[ _init_tw__WEBPACK_IMPORTED_MODULE_0__.gameData.player.id ].configs.active ) {\r\n                        clearInterval(dailyInt)\r\n                        self.location = _init_tw__WEBPACK_IMPORTED_MODULE_0__.link_mesma_aldeia + \"market&mode=exchange\"\r\n                    }\r\n                }\r\n            }, 500 + (0,_util__WEBPACK_IMPORTED_MODULE_2__.setMillis)( 500 ) );\r\n        }\r\n        if ( (0,_util__WEBPACK_IMPORTED_MODULE_2__.strTimeToSec)( (0,_init_tw__WEBPACK_IMPORTED_MODULE_0__.timeServer)() ) >= (0,_util__WEBPACK_IMPORTED_MODULE_2__.strTimeToSec)( config_time ) && (0,_util__WEBPACK_IMPORTED_MODULE_2__.strTimeToSec)( (0,_init_tw__WEBPACK_IMPORTED_MODULE_0__.timeServer)() ) < ( (0,_util__WEBPACK_IMPORTED_MODULE_2__.strTimeToSec)( config_time ) + 300 )) {\r\n            if ( !players[ _init_tw__WEBPACK_IMPORTED_MODULE_0__.gameData.player.id ].daily_bonus ) players[ _init_tw__WEBPACK_IMPORTED_MODULE_0__.gameData.player.id ].daily_bonus = null\r\n            if ( players[ _init_tw__WEBPACK_IMPORTED_MODULE_0__.gameData.player.id ].daily_bonus == (0,_init_tw__WEBPACK_IMPORTED_MODULE_0__.dateServer)() ) return\r\n            players[ _init_tw__WEBPACK_IMPORTED_MODULE_0__.gameData.player.id ].daily_bonus = (0,_init_tw__WEBPACK_IMPORTED_MODULE_0__.dateServer)()\r\n            await (0,_init_tw__WEBPACK_IMPORTED_MODULE_0__.setPlayers)(players).then((res, err) => {\r\n                if (err) throw err\r\n                if (!(0,_init_tw__WEBPACK_IMPORTED_MODULE_0__.verifyCurrentScreen)(`info_player&mode=daily_bonus`)) self.location = `${ _init_tw__WEBPACK_IMPORTED_MODULE_0__.link_mesma_aldeia }info_player&mode=daily_bonus`\r\n            })\r\n        }\r\n    })\r\n}\r\n/**\r\n * Uso Geral TW\r\n * Quando a pagina não está com o foco tenta retornar o foco\r\n */\r\nfunction doPlay() {\r\n    console.warn(_init_tw__WEBPACK_IMPORTED_MODULE_0__.cansed)\r\n    window.focus()\r\n}\r\n/**\r\n * Uso Util TW\r\n * Salva a edição da etiqueta do ataque\r\n * @param {*} e \r\n */\r\nasync function editTicket( e ) {\r\n    if ( e.path[2].className == 'quickedit' ) {\r\n        console.log( e.path[ 2 ].dataset.id, e.target.value )\r\n        await (0,_init_tw__WEBPACK_IMPORTED_MODULE_0__.getPlayers)().then( async (players, error) => {\r\n            if (error) throw error\r\n            const villages = players[ _init_tw__WEBPACK_IMPORTED_MODULE_0__.gameData.player.id ].villages\r\n            for (const id of villages) {\r\n                if ( villages[ id ].comingAttack ) {\r\n                    if ( villages[ id ].comingAttack[ e.path[ 2 ].dataset.id ] ) {\r\n                        villages[ id ].comingAttack[ e.path[ 2 ].dataset.id ].ticket = e.target.value\r\n                    }\r\n                }\r\n            }\r\n            players[ _init_tw__WEBPACK_IMPORTED_MODULE_0__.gameData.player.id ].villages = villages\r\n            await (0,_init_tw__WEBPACK_IMPORTED_MODULE_0__.setPlayers)(players)\r\n        })\r\n    }\r\n}\r\n// --- base de cálculo das unidades( ofensivas ) e velocidade por campo( usada para renomear ataques chegando )\r\nconst baseUnitSpeed = {\r\n    \"Nobre\" : 35,\r\n    \"Aríete\" : 30,\r\n    \"Espada\" : 22,\r\n    \"Bárbaro\" : 18,\r\n    \"Cavalaria Pesada\" : 11,\r\n    \"Cavalaria Leve\" : 10,\r\n    \"Explorador\" : 9\r\n}\r\n// --- base de cálculo das unidades( todas ) e velicidade por campo ( usada para o planejamento de comandos )\r\nconst baseUnitSpeed2 = {\r\n    \"snob\" : 35,\r\n    \"catapult\" : 30,\r\n    \"ram\" : 30,\r\n    \"sword\" : 22,\r\n    \"axe\" : 18,\r\n    \"spear\" : 18,\r\n    \"archer\" : 18,\r\n    \"heavy\" : 11,\r\n    \"light\" : 10,\r\n    \"marcher\" : 10,\r\n    \"knight\" : 10,\r\n    \"spy\" : 9\r\n}\r\n// --- retorna distância\r\nconst getDistance = ( coord_attacker, coord_defender ) => {\r\n    let coordAtt = coord_attacker.split(\"|\");\r\n    let coordDef = coord_defender.split(\"|\");\r\n    let exactDistance = Math.sqrt( Math.pow( parseInt( Number( coordAtt[ 0 ] ) ) - parseInt( Number( coordDef[ 0 ] ) ), 2 ) + Math.pow( parseInt( Number( coordAtt[ 1 ] ) ) - parseInt( Number( coordDef[ 1 ] ) ), 2 ) );\r\n    return exactDistance;\r\n}\r\n// --- retorna tempo de viagem\r\nconst getTravelTimeInSecond = ( distance, unit, base = baseUnitSpeed ) => {\r\n    let travel_time = Math.round( Number( distance ) * ( 60 * Number( base[ unit ] ) / _init_tw__WEBPACK_IMPORTED_MODULE_0__.world_speed / _init_tw__WEBPACK_IMPORTED_MODULE_0__.units_speed ) )\r\n    return Number( travel_time )\r\n}\r\n// --- retorna unidade mais lenta\r\nconst findAttackSpeed = ( arrival_time, coord_attacker, coord_defender ) => {\r\n    let TimeLeft = (0,_util__WEBPACK_IMPORTED_MODULE_2__.strTimeToSec)( arrival_time );\r\n    let distance = getDistance( coord_attacker, coord_defender );\r\n    let previousUnit = \"Nobre\";\r\n\r\n    for ( var unit in baseUnitSpeed ){\r\n        if( getTravelTimeInSecond( distance, unit ) < TimeLeft ) return previousUnit;\r\n        previousUnit = unit;\r\n    }\r\n    return \"Explorador\";\r\n}\r\n// --- retorna backTime\r\nconst getBackTime = ( travel, arrival ) => {\r\n    let strDateTime = new Date( (0,_util__WEBPACK_IMPORTED_MODULE_2__.nDateTime)( arrival[ 0 ], arrival[ 1 ] ) + ( travel * 1000 ) ).toLocaleString()\r\n    let arrDateTime = strDateTime.split( ' ' )\r\n    return `${ arrDateTime[ 0 ].substring( 0, 5 ) } ${ arrDateTime[ 1 ] }`\r\n}\r\n// --- retorna lançamento\r\nconst getLaunchTime = ( travel, arrival ) => {\r\n    let strDateTime = new Date( (0,_util__WEBPACK_IMPORTED_MODULE_2__.nDateTime)( arrival[ 0 ], arrival[ 1 ] ) - ( travel * 1000 ) ).toLocaleString()\r\n    let arrDateTime = strDateTime.split( ' ' )\r\n    return `${ arrDateTime[ 0 ].substring( 0, 5 ) } - ${ arrDateTime[ 1 ] }`\r\n}\r\n\n\n//# sourceURL=webpack://newproject/../general/util_tw.js?");

/***/ }),

/***/ "../general/version.js":
/*!*****************************!*\
  !*** ../general/version.js ***!
  \*****************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"returnVersion\": () => (/* binding */ returnVersion)\n/* harmony export */ });\n/* harmony import */ var _util__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./util */ \"../general/util.js\");\n/* harmony import */ var _init_login__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./init_login */ \"../general/init_login.js\");\n\r\n\r\n\r\n'use strict'\r\n\r\nconst s1 = ['fT', 'yQ', 'rb', 'st', 'Lo', 'zP', 'Nx', 'ga', 'uV', 'Hl']\r\nconst s2 = ['ak', 'jW', 'ij', 'fd', 'Oa', 'hw', 'Uh', 'kj', 'Ag', 'Yw']\r\nconst s3 = ['_3', '7@', '&6', '2%', '8$', '0*', '#9', '-5', '1+', '!4']\r\nconst alphabet = 'abcdefghijklmnopqrstuvxwyz'.split('')\r\nconst arrS = [...s1,...s2,...s3]\r\n\r\nconst returnVersion = async() => (\r\n    await (0,_util__WEBPACK_IMPORTED_MODULE_0__.getStorage)(\"keyGO\").then((keyGO, error) => {\r\n        if ( error ) return false\r\n        if ( !keyGO ) return false\r\n        if ( !keyGO.key ) return false\r\n        if ( !_init_login__WEBPACK_IMPORTED_MODULE_1__.right_login_wrap && window.self.location.host.split(\".\")[0] != \"www\" ) {\r\n            return verifyKey( keyGO.key )\r\n        } else {\r\n            if ( !_init_login__WEBPACK_IMPORTED_MODULE_1__.user_name ) return false\r\n            return verifyKeyLogin( keyGO.key, _init_login__WEBPACK_IMPORTED_MODULE_1__.user_name )\r\n        }\r\n    })\r\n)\r\nfunction returnCodServer( server ) {\r\n    let arrServer = server.split(\"\")\r\n    let strNumServer = \"\"\r\n    for ( let i = 0; i < arrServer.length; i++ ) {\r\n        strNumServer += String( alphabet.indexOf( arrServer[ i ] ) )\r\n    }\r\n    arrServer = strNumServer.split(\"\")\r\n    let cod_server = \"\"\r\n    for ( let i = 0; i < arrServer.length; i++ ) {\r\n        if ( [ 0, 3, 6 ].indexOf(i) != -1 ) cod_server += s1[ arrServer[ i ] ]\r\n        if ( [ 1, 4, 7 ].indexOf(i) != -1 ) cod_server += s2[ arrServer[ i ] ]\r\n        if ( [ 2, 5, 8 ].indexOf(i) != -1 ) cod_server += s3[ arrServer[ i ] ]\r\n    }\r\n    return cod_server  \r\n}\r\nfunction returnNumLettersName( player ) {\r\n    let arrPlayer = player.toLowerCase().split(\"\")\r\n    let numLetters = \"\"\r\n    let n = 1\r\n    for (let i = 0; i < arrPlayer.length; i++) {\r\n        if ( alphabet.indexOf( arrPlayer[ i ] ) != -1 ) {\r\n            numLetters += alphabet.indexOf( arrPlayer[ i ] )\r\n            n++\r\n            if ( n > 3 ) break\r\n        }\r\n    }\r\n    return numLetters\r\n}\r\nfunction returnNumCode( cod_ ) {\r\n    let n = \"\", numCod = \"\"\r\n    for ( let i = 1; i <= cod_.length; i += 2 ) {\r\n        n = String( arrS.indexOf( cod_.substring( i - 1, i + 1 ) ))\r\n        numCod += n.substring(n.length - 1)\r\n    }\r\n    return numCod\r\n}    \r\nfunction verifyKeyLogin( key, user_name ) {\r\n    console.log(\"verifyKeyLogin...\")\r\n    let version = true\r\n    let s_date = new Date().toLocaleDateString()\r\n    let s_time = new Date().toLocaleTimeString()\r\n    let key1 = key.split(\"=\")\r\n    let server_world = key1[0].split(\"_\")[0]\r\n    let player = key1[0].split(\"_\")[1]\r\n    version = version === true ? player == user_name : false\r\n    let key2 = key1[2].split(\":\")\r\n    let code_date2 = key2[1]\r\n    let n1 = key2[2].split(\".\")[0]\r\n    version = version === true ? n1 == returnNumLettersName( player ) : false\r\n    let cod_server = key2[2].split(\".\")[1]\r\n    version = version === true \r\n    ? cod_server == returnCodServer( server_world.match(/[a-z]/ig).reduce((i, e) => i += e , \"\") ) : false\r\n    let code_date1= key2[3]\r\n    version = version === true \r\n    ? (0,_util__WEBPACK_IMPORTED_MODULE_0__.nDateTime)( s_date, s_time ) < (0,_util__WEBPACK_IMPORTED_MODULE_0__.nDateTime)( \r\n        new Date( Number( returnNumCode( code_date1 ) + returnNumCode( code_date2 ) + \"00000\" ) ).toLocaleDateString(),\r\n        new Date( Number( returnNumCode( code_date1 ) + returnNumCode( code_date2 ) + \"00000\" ) ).toLocaleTimeString()\r\n    ) \r\n    : false\r\n    console.warn(\"Key: \" + version)\r\n    return version\r\n}\r\nfunction verifyKey( key ) {\r\n    console.log(\"verifyKey...\")\r\n    let version = true\r\n    let s_date = document.querySelector(\"#serverDate\").textContent\r\n    let s_time = document.querySelector(\"#serverTime\").textContent\r\n    let key1 = key.split(\"=\")\r\n    let server_world = key1[0].split(\"_\")[0]\r\n    version = version === true ? server_world == game_data.world : false\r\n    let player = key1[0].split(\"_\")[1]\r\n    version = version === true ? player == game_data.player.name : false\r\n    let key2 = key1[2].split(\":\")\r\n    let cod_world = key2[0]\r\n    version = version === true \r\n    ? returnNumCode( cod_world ) == server_world.match(/[0-9]/ig).reduce((i, e) => i += e , \"\") \r\n    : false\r\n    let code_date2 = key2[1]\r\n    let n1 = key2[2].split(\".\")[0]\r\n    version = version === true ? n1 == returnNumLettersName( player ) : false\r\n    let cod_server = key2[2].split(\".\")[1]\r\n    version = version === true \r\n    ? cod_server == returnCodServer( server_world.match(/[a-z]/ig).reduce((i, e) => i += e , \"\") ) : false\r\n    let code_date1= key2[3]\r\n    version = version === true \r\n    ? (0,_util__WEBPACK_IMPORTED_MODULE_0__.nDateTime)( s_date, s_time ) < (0,_util__WEBPACK_IMPORTED_MODULE_0__.nDateTime)( \r\n        new Date( Number( returnNumCode( code_date1 ) + returnNumCode( code_date2 ) + \"00000\" ) ).toLocaleDateString(),\r\n        new Date( Number( returnNumCode( code_date1 ) + returnNumCode( code_date2 ) + \"00000\" ) ).toLocaleTimeString()\r\n    ) \r\n    : false\r\n    console.warn(\"Key: \" + version)\r\n    return version\r\n}\n\n//# sourceURL=webpack://newproject/../general/version.js?");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/define property getters */
/******/ 	(() => {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = (exports, definition) => {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	(() => {
/******/ 		__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval devtool is used.
/******/ 	var __webpack_exports__ = __webpack_require__("./TwProjectBot.js");
/******/ 	
/******/ })()
;